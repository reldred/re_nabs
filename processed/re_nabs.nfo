// Automatically generated by GRFCODEC. Do not modify!
// (Info version 5)
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
    0 * 4	 6A 06 00 00
// Total number of sprites (Let nforenum deal with this):
// Action 8 for description, copyright notice, and grfid:
    1 * 409	 08 05 "RJ" 45 01 "North American Buildings Set" 00
     "Artwork by Oz, lifeblood, reldred. Coding by reldred; the belligerent formerly known as Aegir. reldreds North American Building "
           "Set is the continuation of Aegir's original NABS. For support go bug reldred on #openttd. Special thanks to patchman, dalestan, "
           "csaboka, eis_os and all the other #tycoon OG's I've forgotten from whom I owe a great deal and have learnt even more." 00
// ID 00 Small House 1:
// Small House 1 - Twin houses with brown roofs.
// Action 1:
    2 * 6	 01 07 06 FF 01 00
// Real Sprites:
    3 art\house01.png 3 2 09 37 64 -31 -6
    4 art\house01.png 79 2 09 45 64 -31 -14
    5 art\house01.png 149 2 09 45 64 -31 -14
    6 art\house01.png 222 2 09 44 64 -31 -13
    7 art\house01.png 298 2 09 31 64 -31 0
    8 art\house01.png 367 2 09 44 64 -31 -13
// Action 0 to set properties:
    9 * 17	 00 07 // Action 0, Feature 07
                 05 // Properties to Change
                 01 // Change properties for how many ID's
                 00 // ID
                 08 2E // Substitute type
                  09 01 // Building flags
                  0A 0A FF // Set years availible
                 13 03 38 // Set availibilty mask
                  1D 04 // Set prop 1D to 4
// Action 4 to set name:  

   10 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 00 C9 // Offset
                 "Suburban House 01" 00 // String
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   11 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   12 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   13 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   14 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   15 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   16 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   17 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.0:
   18 * 7	 03 07 01 00 00 11 00
// Fin
// ID 01 Small House 2:
// Small House 2 - Grey roof, small corner shops
// Action 1:
   19 * 6	 01 07 06 FF 01 00
// Real Sprites:
   20 art\house02.png 7 3 09 31 64 -31 0
   21 art\house02.png 83 3 09 38 64 -31 -7
   22 art\house02.png 159 3 09 33 64 -31 -2
   23 art\house02.png 230 3 09 34 64 -31 -3
   24 art\house02.png 306 3 09 31 64 -31 0
   25 art\house02.png 376 3 09 34 64 -31 -3
 // Action 0 to set properties:
   26 * 17	 00 07 // Action 0, Feature 07
 05 // Properties to Change
  01 // Change properties for how many ID's
  01 // ID
  08 2E // Substitute type
   09 01 // Building flags
   0A 0A FF // Set years availible
  13 03 38 // Set availibilty mask
   1D 04 // Set prop 1D to 4
// Action 4 to set name:  

   27 * 23	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 01 C9 // Offset
                 "Suburban Shop 01" 00 // String
// Action 2 Chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   28 * 17	 02 07 // Action 2, Feature 07
  00 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  00 00 00 80 // Building Sprite (00)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 2nd stage action 2:
   29 * 17	 02 07 // Action 2, Feature 07
  01 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  01 00 00 80 // Building Sprite (01)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 3rd stage action 2:
   30 * 17	 02 07 // Action 2, Feature 07
  02 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  02 00 00 80 // Building Sprite (02)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Finished stage action 2:
   31 * 17	 02 07 // Action 2, Feature 07
  03 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  03 00 00 80 // Building Sprite (03)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Snowy stage action 2:
   32 * 17	 02 07 // Action 2, Feature 07
  04 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  05 00 00 80 // Building Sprite (05)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   33 * 18	 02 07 // Action 2, Feature 07
  10 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  43 // Variable (Terrain Type)
  00 FF // Varadjust (AND FF)
  02 // Nuber of ranges
  // Range Checks:
  03 00 // Use Set ID 3...
  00 03 // If ground type between 0 and 3
  04 00 // Use Set ID 4...
  04 04 // If ground type between 4 and 4
  03 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   34 * 22	 02 07 // Action 2, Feature 07
  11 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  40 // Variable (Construction stages)
  00 FF // Varadjust (AND FF)
  03 // Number of ranges
  // Range Checks:
  00 00 // Use Set ID 0...
  00 00 // If construction stage 0
  01 00 // Use Set ID 1...
  01 01 // If construction stage 1
  02 00 // Use Set ID 2...
  02 02 // If construction stage 2
  10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   35 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  01 // id.1
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 02 Small Building 1:
// Small Building 1 - Two shops side by side
// Action 1:
   36 * 6	 01 07 06 FF 01 00
// Real Sprites:    
   37 art\smallbuilding01.png 5 6 09 34 64 -31 -3
   38 art\smallbuilding01.png 81 6 09 58 64 -31 -27
   39 art\smallbuilding01.png 157 6 09 60 64 -31 -29
   40 art\smallbuilding01.png 230 6 09 59 64 -31 -28
   41 art\smallbuilding01.png 306 6 09 32 64 -31 -1
   42 art\smallbuilding01.png 377 6 09 59 64 -31 -28
// Action 0 to set properties:   
   43 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  02 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:  

   44 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  02 C9 // Offset
  "Small Building 01" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   45 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   46 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   47 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   48 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   49 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   50 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   51 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   52 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  02 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 03 Small Building 2:
// Small Building 2 - Small Flats
// Action 1:
   53 * 6	 01 07 06 FF 01 00
// Real Sprites:
   54 art\ae_nabs1.png 637 55 09 41 64 -31 -10
   55 art\ae_nabs1.png 716 55 09 39 64 -31 -8
   56 art\ae_nabs1.png 5 120 09 53 64 -31 -22
   57 art\ae_nabs1.png 84 120 09 53 64 -31 -22
   58 art\ae_nabs1.png 163 120 09 32 64 -31 -1
   59 art\ae_nabs1.png 242 120 09 52 64 -31 -22
// Action 0 to set properties:   
   60 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  03 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:

   61 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  03 C9 // Offset
  "Small Building 02" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   62 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   63 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   64 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   65 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   66 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   67 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   68 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   69 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  03 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 04 Small Building 3:
// Small Building 3 - More flats.
// Action 1:
   70 * 6	 01 07 06 FF 01 00
// Real Sprites:
   71 art\ae_nabs1.png 321 120 09 35 63 -31 -4
   72 art\ae_nabs1.png 399 120 09 44 64 -31 -13
   73 art\ae_nabs1.png 478 120 09 52 64 -31 -21
   74 art\ae_nabs1.png 557 120 09 52 64 -31 -21
   75 art\ae_nabs1.png 636 120 09 31 63 -30 0
   76 art\ae_nabs1.png 714 120 09 52 64 -31 -21
// Action 0 to set properties:   
   77 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  04 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:

   78 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  04 C9 // Offset
  "Small Building 03" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   79 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   80 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   81 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   82 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   83 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   84 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   85 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   86 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  04 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 05 - 06 School (North and South)
// School (N)
// Action 1:
   87 * 6	 01 07 06 FF 01 00
// Real Sprites:
   88 art\ae_nabs1.png 5 178 09 36 64 -31 -5
   89 art\ae_nabs1.png 84 178 09 42 63 -31 -11
   90 art\ae_nabs1.png 162 178 09 51 64 -31 -20
   91 art\ae_nabs1.png 241 178 09 44 59 -31 -13
   92 art\ae_nabs1.png 315 178 09 40 64 -31 -9
   93 art\ae_nabs1.png 394 178 09 44 64 -31 -13
// Action 0 to set properties:  
   94 * 24	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  05 // ID
  08 42 // Substitute type
   09 08 // Building flags
   0A 0A 32 // Set years availible
  10 C8 AF // LA Rating Decrease for Removal
   11 9B // Removal Cost Multiplier
   13 03 38 // Set availibility mask
   18 04 // Probability
   1D 04 // Set prop 1D to 4
// Action 4 to set name:

   95 * 13	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  05 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   96 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   97 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   98 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   99 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
  100 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  101 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
  102 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
//!!Warning (170): Default result cannot be reached.
  103 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 FF // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
//!!Warning (170): Default result cannot be reached.
  104 * 18	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 FF // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
//!!Warning (170): Default result cannot be reached.
  105 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 FF // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
//!!Warning (170): Default result cannot be reached.
  106 * 18	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 FF // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
  107 * 15	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
  108 * 17	 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.25:
  109 * 7	 03 07 01 05 00 25 00
// Fin
// School (S)
// Action 1:
  110 * 6	 01 07 06 FF 01 00
// Real Sprites:
  111 art\ae_nabs1.png 473 178 09 31 64 -31 0
  112 art\ae_nabs1.png 552 178 09 51 64 -31 -20
  113 art\ae_nabs1.png 631 178 09 58 64 -31 -27
  114 art\ae_nabs1.png 710 178 09 53 64 -31 -22
  115 art\ae_nabs1.png 5 241 09 31 64 -31 0
  116 art\ae_nabs1.png 84 241 09 53 64 -31 -22
// Action 0 to set properties:   
  117 * 14	 00 07 // Action 0, Feature 7
  04 // Properties to change
  01 // Change properties for how many ID's
  06 // ID
  08 43 // Substitute type
  10 C8 AF // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
  118 * 13	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  06 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
  119 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  120 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
  121 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
  122 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
  123 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  124 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
  125 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
//!!Warning (170): Default result cannot be reached.
  126 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 FF // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
//!!Warning (170): Default result cannot be reached.
  127 * 18	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 FF // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
//!!Warning (170): Default result cannot be reached.
  128 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 FF // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
//!!Warning (170): Default result cannot be reached.
  129 * 18	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 FF // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
  130 * 15	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
  131 * 17	 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.2:
  132 * 7	 03 07 01 06 00 25 00
// Fin
// ID 07 - 08 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
  133 * 6	 01 07 0C FF 01 00
// Real Sprites:   
  134 art\ae_nabs1.png 163 241 09 35 32 -31 -4
  135 art\ae_nabs1.png 210 241 09 54 32 -31 -23
  136 art\ae_nabs1.png 257 241 09 54 32 -31 -23
  137 art\ae_nabs1.png 304 241 09 54 32 -31 -23
  138 art\ae_nabs1.png 351 241 09 54 32 -31 -23
  139 art\ae_nabs1.png 398 241 09 54 32 -31 -23
  140 art\ae_nabs1.png 445 241 09 54 32 -31 -23
  141 art\ae_nabs1.png 492 241 09 31 64 -31 0
  142 art\ae_nabs1.png 571 241 09 54 64 -31 -23
  143 art\ae_nabs1.png 650 241 09 54 64 -31 -23
  144 art\ae_nabs1.png 5 300 09 54 64 -31 -23
  145 art\ae_nabs1.png 84 300 09 54 64 -31 -23
// Action 0 to set properties:  
//!!Warning (99): No more data was expected. Found 24 bytes, expected 22 bytes.
  146 * 24	 00 07 // Action 0, Feature 07
                 07 // Properties to Change
                 01 // Change properties for how many ID's
                 07 // ID
                 08 42 // Substitute type
                  09 0A // Building flags
                  0A 0A 27 // Set years availible
                 10 20 4E // Local Authority rating decrease
                  11 64 // Removal cost multiplier
                  13 0C 38 // Set availibilty mask
                  18 04 // Probability
                  1D 04 // Set prop 1D to 4
// Action 4 to set name:  
  147 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 07 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  148 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  149 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  150 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  151 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  152 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  153 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  154 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  155 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  156 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  157 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  158 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  159 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  160 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  161 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  162 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  163 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  164 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  165 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  166 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  167 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  168 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  169 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  170 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  171 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  172 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  173 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
  174 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  175 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  176 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  177 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  178 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
  179 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
  180 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  181 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  182 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
  183 * 7	 03 07 01 07 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
  184 * 6	 01 07 0C FF 01 00
// Real Sprites:
  185 art\ae_nabs1.png 163 300 09 61 64 -31 -30
  186 art\ae_nabs1.png 242 300 09 70 64 -31 -39
  187 art\ae_nabs1.png 321 300 09 70 64 -31 -39
  188 art\ae_nabs1.png 400 300 09 70 64 -31 -39
  189 art\ae_nabs1.png 479 300 09 71 64 -31 -39
  190 art\ae_nabs1.png 558 300 09 70 64 -31 -39
  191 art\ae_nabs1.png 637 300 09 70 64 -31 -39
  192 art\ae_nabs1.png 716 300 09 31 64 -31 0
  193 art\ae_nabs1.png 5 376 09 54 64 -31 -23
  194 art\ae_nabs1.png 84 376 09 54 64 -31 -23
  195 art\ae_nabs1.png 163 376 09 54 64 -31 -23
  196 art\ae_nabs1.png 242 376 09 54 64 -31 -23
// Action 0 to set properties: 
  197 * 14	 00 07 // Action 0, Feature 7
                 04 // Properties to change
                 01 // Change properties for how many ID's
                 08 // ID
                 08 43 // Substitute type
                 10 20 4E // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
                 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
  198 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 08 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  199 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  200 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  201 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  202 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  203 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  204 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  205 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  206 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  207 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  208 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  209 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  210 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  211 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  212 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  213 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  214 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  215 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  216 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  217 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  218 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  219 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  220 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  221 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  222 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  223 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  224 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
  225 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  226 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  227 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  228 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  229 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
  230 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
  231 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  232 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  233 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  234 * 7	 03 07 01 08 00 35 00
// Fin
// ID 09 - 0A Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
  235 * 6	 01 07 0C FF 01 00
// Real Sprites:  
  236 art\ae_nabs1.png 321 376 09 47 32 1 -16
  237 art\ae_nabs1.png 368 376 09 54 32 1 -23
  238 art\ae_nabs1.png 415 376 09 54 32 1 -23
  239 art\ae_nabs1.png 462 376 09 54 32 1 -23
  240 art\ae_nabs1.png 509 376 09 54 32 1 -23
  241 art\ae_nabs1.png 556 376 09 54 32 1 -23
  242 art\ae_nabs1.png 603 376 09 54 32 1 -23
  243 art\ae_nabs1.png 650 376 09 31 64 -31 0
  244 art\ae_nabs1.png 5 435 09 54 64 -31 -23
  245 art\ae_nabs1.png 84 435 09 54 64 -31 -23
  246 art\ae_nabs1.png 163 435 09 54 64 -31 -23
  247 art\ae_nabs1.png 242 435 09 54 64 -31 -23
// Action 0 to set properties: 
//!!Warning (99): No more data was expected. Found 24 bytes, expected 22 bytes.
  248 * 24	 00 07 // Action 0, Feature 07
                 07 // Properties to change
                 01 // Change properties for how many ID's
                 09 // ID
                 08 4A // Substitute type
                  09 06 // Building flags
                  0A 0A 27 // Set years availible
                 10 20 4E // Local authority rating decrease
                  11 64 // Removal cost multiplier
                  13 0C 38 // Set availibility mask
                  18 04 // Probability
                  1D 04 // Set prop 1D to 4
// Action 4 to set name:  
  249 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 09 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  250 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  251 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  252 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  253 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  254 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  255 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  256 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  257 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  258 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  259 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  260 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  261 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  262 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  263 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  264 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  265 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  266 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  267 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  268 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  269 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  270 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  271 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  272 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  273 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  274 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  275 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
  276 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  277 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  278 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  279 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  280 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
  281 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
  282 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  283 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  284 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  285 * 7	 03 07 01 09 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
  286 * 6	 01 07 0C FF 01 00
// Real Sprites:      
  287 art\ae_nabs1.png 321 435 09 63 64 -31 -32
  288 art\ae_nabs1.png 400 435 09 70 64 -31 -39
  289 art\ae_nabs1.png 479 435 09 70 64 -31 -39
  290 art\ae_nabs1.png 558 435 09 70 64 -31 -39
  291 art\ae_nabs1.png 637 435 09 70 64 -31 -39
  292 art\ae_nabs1.png 716 435 09 70 64 -31 -39
  293 art\ae_nabs1.png 5 510 09 70 64 -31 -39
  294 art\ae_nabs1.png 84 510 09 31 64 -31 0
  295 art\ae_nabs1.png 163 510 09 54 64 -31 -23
  296 art\ae_nabs1.png 242 510 09 54 64 -31 -23
  297 art\ae_nabs1.png 321 510 09 54 64 -31 -23
  298 art\ae_nabs1.png 400 510 09 54 64 -31 -23
// Action 0 to set properties:    
  299 * 14	 00 07 04 01 0A 08 4B 10 20 4E 11 64 1D 04
// Action 4 to set name:  
  300 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 0A C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  301 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  302 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  303 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  304 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  305 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  306 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  307 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  308 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  309 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  310 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  311 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  312 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  313 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  314 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  315 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  316 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  317 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  318 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  319 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  320 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  321 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  322 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  323 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  324 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  325 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  326 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
  327 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  328 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  329 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  330 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  331 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
  332 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
  333 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  334 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  335 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  336 * 7	 03 07 01 0A 00 35 00
// Fin  
// ID 0B Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
  337 * 6	 01 07 2D FF 01 00
  338 art\ae_nabs1.png 479 510 09 31 65 -32 0
  339 art\ae_nabs1.png 559 510 09 89 64 -31 -58
  340 art\ae_nabs1.png 638 510 09 86 64 -31 -55
  341 art\ae_nabs1.png 717 510 09 86 64 -31 -55
  342 art\ae_nabs1.png 5 604 09 31 64 -31 0
  343 art\ae_nabs1.png 84 604 09 86 65 -31 -55
  344 art\ae_nabs1.png 164 604 09 86 65 -31 -55
  345 art\ae_nabs1.png 244 604 09 86 64 -31 -55
  346 art\ae_nabs1.png 323 604 09 99 64 -31 -68
  347 art\ae_nabs1.png 402 604 09 85 66 -32 -54
  348 art\ae_nabs1.png 483 604 09 85 66 -32 -54
  349 art\ae_nabs1.png 564 604 09 90 65 -32 -59
  350 art\ae_nabs1.png 644 604 09 99 65 -32 -68
  351 art\ae_nabs1.png 5 708 09 88 66 -32 -57
  352 art\ae_nabs1.png 86 708 09 90 66 -32 -59
  353 art\ae_nabs1.png 167 708 09 88 65 -32 -57
  354 art\ae_nabs1.png 247 708 09 99 65 -32 -68
  355 art\ae_nabs1.png 327 708 09 93 66 -32 -62
  356 art\ae_nabs1.png 408 708 09 93 66 -32 -62
  357 art\ae_nabs1.png 489 708 09 93 65 -32 -62
  358 art\ae_nabs1.png 569 708 09 99 65 -32 -68
  359 art\ae_nabs1.png 649 708 09 95 65 -31 -65
  360 art\ae_nabs1.png 5 812 09 96 66 -32 -65
  361 art\ae_nabs1.png 86 812 09 96 64 -31 -65
  362 art\ae_nabs1.png 165 812 09 99 64 -31 -68
  363 art\ae_nabs1.png 244 812 09 86 65 -31 -55
  364 art\ae_nabs1.png 324 812 09 86 65 -31 -55
  365 art\ae_nabs1.png 404 812 09 86 64 -31 -55
  366 art\ae_nabs1.png 483 812 09 99 64 -31 -68
  367 art\ae_nabs1.png 562 812 09 85 66 -32 -54
  368 art\ae_nabs1.png 643 812 09 85 66 -32 -54
  369 art\ae_nabs2.png 5 5 09 84 65 -32 -53
  370 art\ae_nabs2.png 85 5 09 99 65 -32 -68
  371 art\ae_nabs2.png 165 5 09 88 66 -32 -57
  372 art\ae_nabs2.png 246 5 09 88 66 -32 -57
  373 art\ae_nabs2.png 327 5 09 88 65 -32 -57
  374 art\ae_nabs2.png 407 5 09 99 65 -32 -68
  375 art\ae_nabs2.png 487 5 09 93 66 -32 -62
  376 art\ae_nabs2.png 568 5 09 92 67 -33 -61
  377 art\ae_nabs2.png 650 5 09 93 65 -32 -62
  378 art\ae_nabs2.png 5 109 09 99 65 -32 -68
  379 art\ae_nabs2.png 85 109 09 95 65 -31 -64
  380 art\ae_nabs2.png 165 109 09 95 65 -31 -64
  381 art\ae_nabs2.png 245 109 09 95 64 -31 -64
  382 art\ae_nabs2.png 324 109 09 99 64 -31 -68
  383 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0B // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
// Action 4 to set name:  

  384 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         0B C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  385 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  386 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  387 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  388 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  389 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  390 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  391 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  392 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  393 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  394 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  395 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  396 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  397 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  398 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  399 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  400 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  401 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  402 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  403 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  404 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  405 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  406 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  407 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  408 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  409 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  410 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  411 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  412 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  413 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  414 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  415 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  416 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  417 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  418 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  419 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  420 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  421 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  422 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  423 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  424 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  425 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  426 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  427 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  428 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  429 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  430 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  431 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  432 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  433 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  434 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  435 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  436 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  437 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  438 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  439 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  440 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  441 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  442 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  443 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  444 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  445 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  446 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  447 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  448 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  449 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  450 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  451 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  452 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  453 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  454 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  455 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
  456 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  457 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  458 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  459 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
  460 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  461 * 7	 03 07 01 0B 00 A1 00
// ID 0C Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 337) has not been used.
  462 * 6	 01 07 2D FF 01 00
  463 art\ae_nabs2.png 403 109 09 38 63 -31 -7
  464 art\ae_nabs2.png 481 109 09 81 64 -31 -50
  465 art\ae_nabs2.png 560 109 09 89 64 -31 -58
  466 art\ae_nabs2.png 639 109 09 89 64 -31 -58
  467 art\ae_nabs2.png 718 109 09 31 64 -31 0
  468 art\ae_nabs2.png 5 213 09 86 65 -31 -55
  469 art\ae_nabs2.png 85 213 09 86 65 -31 -55
  470 art\ae_nabs2.png 165 213 09 86 64 -31 -55
  471 art\ae_nabs2.png 244 213 09 99 64 -31 -68
  472 art\ae_nabs2.png 323 213 09 85 66 -32 -54
  473 art\ae_nabs2.png 404 213 09 85 66 -32 -54
  474 art\ae_nabs2.png 485 213 09 90 65 -32 -59
  475 art\ae_nabs2.png 565 213 09 99 65 -32 -68
  476 art\ae_nabs2.png 645 213 09 88 66 -32 -57
  477 art\ae_nabs2.png 5 317 09 90 66 -32 -59
  478 art\ae_nabs2.png 86 317 09 88 65 -32 -57
  479 art\ae_nabs2.png 166 317 09 99 65 -32 -68
  480 art\ae_nabs2.png 246 317 09 93 66 -32 -62
  481 art\ae_nabs2.png 327 317 09 93 66 -32 -62
  482 art\ae_nabs2.png 408 317 09 93 65 -32 -62
  483 art\ae_nabs2.png 488 317 09 99 65 -32 -68
  484 art\ae_nabs2.png 568 317 09 95 65 -31 -65
  485 art\ae_nabs2.png 648 317 09 96 66 -32 -65
  486 art\ae_nabs2.png 5 421 09 96 64 -31 -65
  487 art\ae_nabs2.png 84 421 09 99 64 -31 -68
  488 art\ae_nabs2.png 163 421 09 86 65 -31 -55
  489 art\ae_nabs2.png 243 421 09 86 65 -31 -55
  490 art\ae_nabs2.png 323 421 09 86 64 -31 -55
  491 art\ae_nabs2.png 402 421 09 99 64 -31 -68
  492 art\ae_nabs2.png 481 421 09 85 66 -32 -54
  493 art\ae_nabs2.png 562 421 09 85 66 -32 -54
  494 art\ae_nabs2.png 643 421 09 84 65 -32 -53
  495 art\ae_nabs2.png 5 525 09 99 65 -32 -68
  496 art\ae_nabs2.png 85 525 09 88 66 -32 -57
  497 art\ae_nabs2.png 166 525 09 88 66 -32 -57
  498 art\ae_nabs2.png 247 525 09 88 65 -32 -57
  499 art\ae_nabs2.png 327 525 09 99 65 -32 -68
  500 art\ae_nabs2.png 407 525 09 93 66 -32 -62
  501 art\ae_nabs2.png 488 525 09 92 67 -33 -61
  502 art\ae_nabs2.png 570 525 09 93 65 -32 -62
  503 art\ae_nabs2.png 650 525 09 99 65 -32 -68
  504 art\ae_nabs2.png 5 629 09 95 65 -31 -64
  505 art\ae_nabs2.png 85 629 09 95 65 -31 -64
  506 art\ae_nabs2.png 165 629 09 95 64 -31 -64
  507 art\ae_nabs2.png 244 629 09 99 64 -31 -68
  508 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0C // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
  // Action 4 to set name:  

  509 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0C C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  510 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  511 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  512 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  513 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  514 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  515 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  516 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  517 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  518 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  519 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  520 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  521 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  522 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  523 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  524 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  525 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  526 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  527 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  528 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  529 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  530 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  531 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  532 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  533 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  534 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  535 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  536 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  537 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  538 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  539 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  540 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  541 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  542 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  543 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  544 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  545 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  546 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  547 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  548 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  549 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  550 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  551 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  552 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  553 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  554 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  555 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  556 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  557 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  558 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  559 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  560 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  561 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  562 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  563 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  564 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  565 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  566 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  567 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  568 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  569 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  570 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  571 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  572 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  573 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  574 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  575 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  576 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  577 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  578 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  579 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  580 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
  581 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  582 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  583 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  584 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
  585 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  586 * 7	 03 07 01 0C 00 A1 00
// ID 0D Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 462) has not been used.
  587 * 6	 01 07 2D FF 01 00
  588 art\ae_nabs2.png 323 629 09 31 64 -31 0
  589 art\ae_nabs2.png 402 629 09 90 64 -31 -59
  590 art\ae_nabs2.png 481 629 09 91 64 -31 -60
  591 art\ae_nabs2.png 560 629 09 91 64 -31 -60
  592 art\ae_nabs2.png 639 629 09 31 64 -31 0
  593 art\ae_nabs2.png 718 629 09 94 65 -32 -63
  594 art\ae_nabs2.png 5 733 09 94 65 -32 -63
  595 art\ae_nabs2.png 85 733 09 91 64 -31 -60
  596 art\ae_nabs2.png 164 733 09 109 64 -31 -78
  597 art\ae_nabs2.png 243 733 09 94 66 -32 -63
  598 art\ae_nabs2.png 324 733 09 94 66 -32 -63
  599 art\ae_nabs2.png 405 733 09 91 65 -31 -60
  600 art\ae_nabs2.png 485 733 09 108 65 -31 -77
  601 art\ae_nabs2.png 565 733 09 94 65 -32 -63
  602 art\ae_nabs2.png 645 733 09 94 64 -32 -63
  603 art\ae_nabs2.png 5 847 09 91 64 -31 -60
  604 art\ae_nabs2.png 84 847 09 108 64 -31 -78
  605 art\ae_nabs2.png 163 847 09 94 66 -32 -63
  606 art\ae_nabs2.png 244 847 09 94 66 -32 -63
  607 art\ae_nabs2.png 325 847 09 91 65 -31 -60
  608 art\ae_nabs2.png 405 847 09 108 64 -31 -77
  609 art\ae_nabs2.png 484 847 09 94 65 -32 -63
  610 art\ae_nabs2.png 564 847 09 94 65 -31 -63
  611 art\ae_nabs2.png 644 847 09 91 64 -31 -60
  612 art\ae_nabs3.png 5 5 09 108 64 -31 -77
  613 art\ae_nabs3.png 84 5 09 94 65 -32 -63
  614 art\ae_nabs3.png 164 5 09 94 65 -32 -63
  615 art\ae_nabs3.png 244 5 09 91 64 -31 -60
  616 art\ae_nabs3.png 323 5 09 108 64 -30 -77
  617 art\ae_nabs3.png 402 5 09 94 66 -32 -63
  618 art\ae_nabs3.png 483 5 09 94 66 -32 -63
  619 art\ae_nabs3.png 564 5 09 91 65 -31 -60
  620 art\ae_nabs3.png 644 5 09 108 65 -31 -77
  621 art\ae_nabs3.png 5 118 09 94 65 -32 -63
  622 art\ae_nabs3.png 85 118 09 94 65 -32 -63
  623 art\ae_nabs3.png 165 118 09 91 64 -31 -60
  624 art\ae_nabs3.png 244 118 09 108 63 -31 -77
  625 art\ae_nabs3.png 322 118 09 94 66 -32 -63
  626 art\ae_nabs3.png 403 118 09 94 66 -32 -63
  627 art\ae_nabs3.png 484 118 09 91 65 -31 -60
  628 art\ae_nabs3.png 564 118 09 108 65 -31 -77
  629 art\ae_nabs3.png 644 118 09 94 65 -32 -63
  630 art\ae_nabs3.png 5 231 09 94 65 -32 -63
  631 art\ae_nabs3.png 85 231 09 91 64 -31 -60
  632 art\ae_nabs3.png 164 231 09 108 64 -30 -77
  633 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0D // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
  // Action 4 to set name:  

  634 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0D C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  635 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  636 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  637 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  638 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  639 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  640 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  641 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  642 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  643 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  644 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  645 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  646 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  647 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  648 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  649 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  650 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  651 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  652 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  653 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  654 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  655 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  656 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  657 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  658 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  659 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  660 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  661 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  662 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  663 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  664 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  665 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  666 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  667 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  668 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  669 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  670 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  671 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  672 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  673 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  674 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  675 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  676 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  677 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  678 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  679 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  680 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  681 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  682 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  683 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  684 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  685 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  686 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  687 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  688 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  689 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  690 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  691 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  692 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  693 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  694 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  695 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  696 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  697 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  698 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  699 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  700 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  701 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  702 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  703 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  704 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  705 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
  706 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  707 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  708 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  709 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
  710 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  711 * 7	 03 07 01 0D 00 A1 00
// ID 0E Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 587) has not been used.
  712 * 6	 01 07 2D FF 01 00
  713 art\ae_nabs3.png 243 231 09 36 65 -31 -5
  714 art\ae_nabs3.png 323 231 09 82 64 -31 -51
  715 art\ae_nabs3.png 402 231 09 90 64 -31 -59
  716 art\ae_nabs3.png 481 231 09 90 64 -31 -59
  717 art\ae_nabs3.png 560 231 09 31 64 -31 0
  718 art\ae_nabs3.png 639 231 09 94 65 -32 -63
  719 art\ae_nabs3.png 719 231 09 94 65 -32 -63
  720 art\ae_nabs3.png 5 344 09 91 64 -31 -60
  721 art\ae_nabs3.png 84 344 09 109 64 -31 -78
  722 art\ae_nabs3.png 163 344 09 94 66 -32 -63
  723 art\ae_nabs3.png 244 344 09 94 66 -32 -63
  724 art\ae_nabs3.png 325 344 09 91 65 -31 -60
  725 art\ae_nabs3.png 405 344 09 108 65 -31 -77
  726 art\ae_nabs3.png 485 344 09 94 65 -32 -63
  727 art\ae_nabs3.png 565 344 09 94 64 -32 -63
  728 art\ae_nabs3.png 644 344 09 91 64 -31 -60
  729 art\ae_nabs3.png 5 458 09 108 64 -31 -78
  730 art\ae_nabs3.png 84 458 09 94 66 -32 -63
  731 art\ae_nabs3.png 165 458 09 94 66 -32 -63
  732 art\ae_nabs3.png 246 458 09 91 65 -31 -60
  733 art\ae_nabs3.png 326 458 09 108 64 -31 -77
  734 art\ae_nabs3.png 405 458 09 94 65 -32 -63
  735 art\ae_nabs3.png 485 458 09 94 65 -31 -63
  736 art\ae_nabs3.png 565 458 09 91 64 -31 -60
  737 art\ae_nabs3.png 644 458 09 108 64 -31 -77
  738 art\ae_nabs3.png 5 571 09 94 65 -32 -63
  739 art\ae_nabs3.png 85 571 09 94 65 -32 -63
  740 art\ae_nabs3.png 165 571 09 91 64 -31 -60
  741 art\ae_nabs3.png 244 571 09 108 64 -30 -77
  742 art\ae_nabs3.png 323 571 09 94 66 -32 -63
  743 art\ae_nabs3.png 404 571 09 94 66 -32 -63
  744 art\ae_nabs3.png 485 571 09 91 65 -31 -60
  745 art\ae_nabs3.png 565 571 09 108 65 -31 -77
  746 art\ae_nabs3.png 645 571 09 94 65 -32 -63
  747 art\ae_nabs3.png 5 684 09 94 65 -32 -63
  748 art\ae_nabs3.png 85 684 09 91 64 -31 -60
  749 art\ae_nabs3.png 164 684 09 108 63 -31 -77
  750 art\ae_nabs3.png 242 684 09 94 66 -32 -63
  751 art\ae_nabs3.png 323 684 09 94 66 -32 -63
  752 art\ae_nabs3.png 404 684 09 91 65 -31 -60
  753 art\ae_nabs3.png 484 684 09 108 65 -31 -77
  754 art\ae_nabs3.png 564 684 09 94 65 -32 -63
  755 art\ae_nabs3.png 644 684 09 94 65 -32 -63
  756 art\ae_nabs3.png 5 797 09 91 64 -31 -60
  757 art\ae_nabs3.png 84 797 09 108 64 -30 -77
  758 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0E // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
  // Action 4 to set name:  

  759 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0E C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  760 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  761 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  762 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  763 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  764 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  765 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  766 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  767 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  768 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  769 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  770 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  771 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  772 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  773 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  774 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  775 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  776 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  777 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  778 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  779 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  780 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  781 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  782 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  783 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  784 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  785 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  786 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  787 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  788 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  789 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  790 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  791 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  792 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  793 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  794 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  795 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  796 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  797 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  798 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  799 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  800 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  801 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  802 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  803 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  804 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  805 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  806 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  807 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  808 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  809 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  810 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  811 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  812 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  813 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  814 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  815 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  816 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  817 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  818 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  819 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  820 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  821 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  822 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  823 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  824 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  825 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  826 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  827 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  828 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  829 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  830 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
  831 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  832 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  833 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  834 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
  835 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  836 * 7	 03 07 01 0E 00 A1 00
// ID 0F Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 712) has not been used.
  837 * 6	 01 07 2D FF 01 00
  838 art\ae_nabs3.png 163 797 09 31 64 -31 0
  839 art\ae_nabs3.png 242 797 09 90 64 -31 -58
  840 art\ae_nabs3.png 321 797 09 81 64 -31 -50
  841 art\ae_nabs3.png 400 797 09 82 64 -31 -51
  842 art\ae_nabs3.png 479 797 09 31 64 -31 0
  843 art\ae_nabs3.png 558 797 09 86 65 -32 -55
  844 art\ae_nabs3.png 638 797 09 86 65 -32 -55
  845 art\ae_nabs3.png 718 797 09 86 64 -31 -55
  846 art\ae_nabs4.png 5 5 09 99 64 -31 -68
  847 art\ae_nabs4.png 84 5 09 85 66 -32 -54
  848 art\ae_nabs4.png 165 5 09 85 66 -32 -54
  849 art\ae_nabs4.png 246 5 09 84 65 -31 -53
  850 art\ae_nabs4.png 326 5 09 98 65 -31 -68
  851 art\ae_nabs4.png 406 5 09 88 66 -32 -57
  852 art\ae_nabs4.png 487 5 09 88 66 -32 -57
  853 art\ae_nabs4.png 568 5 09 88 65 -31 -57
  854 art\ae_nabs4.png 648 5 09 99 65 -31 -68
  855 art\ae_nabs4.png 5 109 09 93 66 -32 -62
  856 art\ae_nabs4.png 86 109 09 93 65 -32 -62
  857 art\ae_nabs4.png 166 109 09 93 65 -31 -62
  858 art\ae_nabs4.png 246 109 09 99 65 -31 -68
  859 art\ae_nabs4.png 326 109 09 96 65 -32 -65
  860 art\ae_nabs4.png 406 109 09 96 65 -32 -65
  861 art\ae_nabs4.png 486 109 09 96 64 -31 -65
  862 art\ae_nabs4.png 565 109 09 99 64 -31 -68
  863 art\ae_nabs4.png 644 109 09 86 65 -32 -55
  864 art\ae_nabs4.png 5 213 09 86 65 -32 -55
  865 art\ae_nabs4.png 85 213 09 86 64 -31 -55
  866 art\ae_nabs4.png 164 213 09 99 64 -31 -68
  867 art\ae_nabs4.png 243 213 09 85 66 -32 -54
  868 art\ae_nabs4.png 324 213 09 85 66 -32 -54
  869 art\ae_nabs4.png 405 213 09 84 65 -31 -53
  870 art\ae_nabs4.png 485 213 09 99 65 -31 -68
  871 art\ae_nabs4.png 565 213 09 88 66 -32 -57
  872 art\ae_nabs4.png 646 213 09 88 66 -32 -57
  873 art\ae_nabs4.png 5 317 09 88 65 -31 -57
  874 art\ae_nabs4.png 85 317 09 99 65 -31 -68
  875 art\ae_nabs4.png 165 317 09 93 66 -32 -62
  876 art\ae_nabs4.png 246 317 09 93 66 -32 -62
  877 art\ae_nabs4.png 327 317 09 93 65 -31 -62
  878 art\ae_nabs4.png 407 317 09 99 65 -31 -68
  879 art\ae_nabs4.png 487 317 09 96 65 -32 -65
  880 art\ae_nabs4.png 567 317 09 96 65 -32 -65
  881 art\ae_nabs4.png 647 317 09 96 64 -31 -65
  882 art\ae_nabs4.png 5 421 09 99 64 -31 -68
  883 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0F // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
 // Action 4 to set name:  

  884 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0F C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  885 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  886 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  887 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  888 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  889 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  890 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  891 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  892 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  893 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  894 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  895 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  896 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  897 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  898 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  899 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  900 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  901 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  902 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  903 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  904 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  905 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  906 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  907 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  908 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  909 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  910 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  911 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  912 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  913 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  914 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  915 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  916 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  917 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  918 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  919 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  920 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  921 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  922 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  923 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  924 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  925 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  926 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  927 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  928 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  929 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  930 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  931 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  932 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  933 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  934 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  935 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  936 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  937 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  938 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  939 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  940 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  941 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  942 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  943 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  944 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  945 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  946 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  947 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  948 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  949 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  950 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  951 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  952 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  953 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  954 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  955 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
  956 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  957 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  958 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  959 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
  960 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  961 * 7	 03 07 01 0F 00 A1 00
// ID 10 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 837) has not been used.
  962 * 6	 01 07 2D FF 01 00
  963 art\ae_nabs4.png 84 421 09 38 64 -31 -7
  964 art\ae_nabs4.png 163 421 09 73 64 -31 -42
  965 art\ae_nabs4.png 242 421 09 89 64 -31 -58
  966 art\ae_nabs4.png 321 421 09 89 64 -31 -58
  967 art\ae_nabs4.png 400 421 09 31 64 -31 0
  968 art\ae_nabs4.png 479 421 09 86 65 -32 -55
  969 art\ae_nabs4.png 559 421 09 86 65 -32 -55
  970 art\ae_nabs4.png 639 421 09 86 64 -31 -55
  971 art\ae_nabs4.png 718 421 09 99 64 -31 -68
  972 art\ae_nabs4.png 5 525 09 85 66 -32 -54
  973 art\ae_nabs4.png 86 525 09 85 66 -32 -54
  974 art\ae_nabs4.png 167 525 09 84 65 -31 -53
  975 art\ae_nabs4.png 247 525 09 98 65 -31 -68
  976 art\ae_nabs4.png 327 525 09 88 66 -32 -57
  977 art\ae_nabs4.png 408 525 09 88 66 -32 -57
  978 art\ae_nabs4.png 489 525 09 88 65 -31 -57
  979 art\ae_nabs4.png 569 525 09 99 65 -31 -68
  980 art\ae_nabs4.png 649 525 09 93 66 -32 -62
  981 art\ae_nabs4.png 5 629 09 93 65 -32 -62
  982 art\ae_nabs4.png 85 629 09 93 65 -31 -62
  983 art\ae_nabs4.png 165 629 09 99 65 -31 -68
  984 art\ae_nabs4.png 245 629 09 96 65 -32 -65
  985 art\ae_nabs4.png 325 629 09 96 65 -32 -65
  986 art\ae_nabs4.png 405 629 09 96 64 -31 -65
  987 art\ae_nabs4.png 484 629 09 99 64 -31 -68
  988 art\ae_nabs4.png 563 629 09 86 65 -32 -55
  989 art\ae_nabs4.png 643 629 09 86 65 -32 -55
  990 art\ae_nabs4.png 5 733 09 86 64 -31 -55
  991 art\ae_nabs4.png 84 733 09 99 64 -31 -68
  992 art\ae_nabs4.png 163 733 09 85 66 -32 -54
  993 art\ae_nabs4.png 244 733 09 85 66 -32 -54
  994 art\ae_nabs4.png 325 733 09 84 65 -31 -53
  995 art\ae_nabs4.png 405 733 09 99 65 -31 -68
  996 art\ae_nabs4.png 485 733 09 88 66 -32 -57
  997 art\ae_nabs4.png 566 733 09 88 66 -32 -57
  998 art\ae_nabs4.png 647 733 09 88 65 -31 -57
  999 art\ae_nabs4.png 5 837 09 99 65 -31 -68
 1000 art\ae_nabs4.png 85 837 09 93 66 -32 -62
 1001 art\ae_nabs4.png 166 837 09 93 66 -32 -62
 1002 art\ae_nabs4.png 247 837 09 93 65 -31 -62
 1003 art\ae_nabs4.png 327 837 09 99 65 -31 -68
 1004 art\ae_nabs4.png 407 837 09 96 65 -32 -65
 1005 art\ae_nabs4.png 487 837 09 96 65 -32 -65
 1006 art\ae_nabs4.png 567 837 09 96 64 -31 -65
 1007 art\ae_nabs4.png 646 837 09 99 64 -31 -68
 1008 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  10 // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
 // Action 4 to set name:  

 1009 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1010 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1011 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1012 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1013 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1014 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1015 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1016 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1017 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1018 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1019 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1020 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1021 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1022 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1023 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1024 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1025 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1026 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1027 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1028 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1029 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1030 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1031 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1032 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1033 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1034 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1035 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1036 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1037 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1038 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1039 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1040 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1041 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1042 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1043 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1044 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1045 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1046 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1047 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1048 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1049 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1050 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1051 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1052 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1053 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1054 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1055 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1056 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1057 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1058 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1059 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1060 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1061 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1062 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1063 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1064 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1065 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1066 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1067 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1068 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1069 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1070 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1071 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1072 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1073 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1074 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1075 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1076 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1077 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1078 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1079 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1080 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  10 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
 1081 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1082 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1083 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1084 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
 1085 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1086 * 7	 03 07 01 10 00 A1 00
// ID 11 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 962) has not been used.
 1087 * 6	 01 07 2D FF 01 00
 1088 art\ae_nabs4.png 5 941 09 31 64 -31 0
 1089 art\ae_nabs5.png 5 5 09 82 64 -31 -51
 1090 art\ae_nabs5.png 84 5 09 91 64 -31 -60
 1091 art\ae_nabs5.png 163 5 09 91 64 -31 -60
 1092 art\ae_nabs5.png 242 5 09 31 65 -31 0
 1093 art\ae_nabs5.png 322 5 09 94 65 -31 -63
 1094 art\ae_nabs5.png 402 5 09 94 65 -31 -63
 1095 art\ae_nabs5.png 482 5 09 91 64 -31 -60
 1096 art\ae_nabs5.png 561 5 09 108 64 -31 -77
 1097 art\ae_nabs5.png 640 5 09 94 66 -32 -63
 1098 art\ae_nabs5.png 5 118 09 94 66 -32 -63
 1099 art\ae_nabs5.png 86 118 09 91 65 -32 -60
 1100 art\ae_nabs5.png 166 118 09 108 65 -32 -77
 1101 art\ae_nabs5.png 246 118 09 94 65 -31 -63
 1102 art\ae_nabs5.png 326 118 09 94 65 -31 -63
 1103 art\ae_nabs5.png 406 118 09 91 64 -31 -60
 1104 art\ae_nabs5.png 485 118 09 108 64 -31 -77
 1105 art\ae_nabs5.png 564 118 09 94 66 -32 -63
 1106 art\ae_nabs5.png 645 118 09 94 66 -32 -63
 1107 art\ae_nabs5.png 5 231 09 91 65 -32 -60
 1108 art\ae_nabs5.png 85 231 09 108 65 -32 -77
 1109 art\ae_nabs5.png 165 231 09 94 65 -31 -63
 1110 art\ae_nabs5.png 245 231 09 94 65 -31 -63
 1111 art\ae_nabs5.png 325 231 09 91 64 -31 -60
 1112 art\ae_nabs5.png 404 231 09 108 64 -31 -77
 1113 art\ae_nabs5.png 483 231 09 94 65 -31 -63
 1114 art\ae_nabs5.png 563 231 09 94 65 -31 -63
 1115 art\ae_nabs5.png 643 231 09 91 64 -31 -60
 1116 art\ae_nabs5.png 5 344 09 108 64 -31 -77
 1117 art\ae_nabs5.png 84 344 09 94 66 -32 -63
 1118 art\ae_nabs5.png 165 344 09 94 66 -32 -63
 1119 art\ae_nabs5.png 246 344 09 91 65 -32 -60
 1120 art\ae_nabs5.png 326 344 09 108 65 -32 -77
 1121 art\ae_nabs5.png 406 344 09 94 65 -31 -63
 1122 art\ae_nabs5.png 486 344 09 94 65 -31 -63
 1123 art\ae_nabs5.png 566 344 09 91 64 -31 -60
 1124 art\ae_nabs5.png 645 344 09 108 64 -31 -77
 1125 art\ae_nabs5.png 5 457 09 95 66 -32 -64
 1126 art\ae_nabs5.png 86 457 09 94 66 -32 -63
 1127 art\ae_nabs5.png 167 457 09 91 65 -32 -60
 1128 art\ae_nabs5.png 247 457 09 108 65 -32 -77
 1129 art\ae_nabs5.png 327 457 09 94 64 -31 -63
 1130 art\ae_nabs5.png 406 457 09 94 65 -31 -63
 1131 art\ae_nabs5.png 486 457 09 91 64 -31 -60
 1132 art\ae_nabs5.png 565 457 09 108 64 -31 -77
 1133 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  11 // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
 // Action 4 to set name:  

 1134 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1135 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1136 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1137 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1138 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1139 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1140 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1141 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1142 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1143 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1144 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1145 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1146 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1147 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1148 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1149 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1150 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1151 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1152 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1153 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1154 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1155 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1156 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1157 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1158 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1159 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1160 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1161 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1162 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1163 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1164 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1165 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1166 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1167 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1168 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1169 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1170 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1171 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1172 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1173 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1174 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1175 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1176 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1177 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1178 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1179 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1180 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1181 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1182 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1183 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1184 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1185 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1186 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1187 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1188 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1189 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1190 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1191 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1192 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1193 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1194 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1195 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1196 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1197 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1198 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1199 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1200 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1201 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1202 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1203 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1204 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1205 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  11 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
 1206 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1207 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1208 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1209 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
 1210 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1211 * 7	 03 07 01 11 00 A1 00
// ID 12 Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1087) has not been used.
 1212 * 6	 01 07 2D FF 01 00
 1213 art\ae_nabs5.png 644 457 09 36 64 -31 -5
 1214 art\ae_nabs5.png 5 570 09 82 64 -31 -51
 1215 art\ae_nabs5.png 84 570 09 82 64 -31 -51
 1216 art\ae_nabs5.png 163 570 09 82 64 -31 -51
 1217 art\ae_nabs5.png 242 570 09 31 65 -31 0
 1218 art\ae_nabs5.png 322 570 09 94 65 -31 -63
 1219 art\ae_nabs5.png 402 570 09 94 65 -31 -63
 1220 art\ae_nabs5.png 482 570 09 91 64 -31 -60
 1221 art\ae_nabs5.png 561 570 09 108 64 -31 -77
 1222 art\ae_nabs5.png 640 570 09 94 66 -32 -63
 1223 art\ae_nabs5.png 5 683 09 94 66 -32 -63
 1224 art\ae_nabs5.png 86 683 09 91 65 -32 -60
 1225 art\ae_nabs5.png 166 683 09 108 65 -32 -77
 1226 art\ae_nabs5.png 246 683 09 94 65 -31 -63
 1227 art\ae_nabs5.png 326 683 09 94 65 -31 -63
 1228 art\ae_nabs5.png 406 683 09 91 64 -31 -60
 1229 art\ae_nabs5.png 485 683 09 108 64 -31 -77
 1230 art\ae_nabs5.png 564 683 09 94 66 -32 -63
 1231 art\ae_nabs5.png 645 683 09 94 66 -32 -63
 1232 art\ae_nabs5.png 5 796 09 91 65 -32 -60
 1233 art\ae_nabs5.png 85 796 09 108 65 -32 -77
 1234 art\ae_nabs5.png 165 796 09 94 65 -31 -63
 1235 art\ae_nabs5.png 245 796 09 94 65 -31 -63
 1236 art\ae_nabs5.png 325 796 09 91 64 -31 -60
 1237 art\ae_nabs5.png 404 796 09 108 64 -31 -77
 1238 art\ae_nabs5.png 483 796 09 94 65 -31 -63
 1239 art\ae_nabs5.png 563 796 09 94 65 -31 -63
 1240 art\ae_nabs5.png 643 796 09 91 64 -31 -60
 1241 art\ae_nabs6.png 5 5 09 108 64 -31 -77
 1242 art\ae_nabs6.png 84 5 09 94 66 -32 -63
 1243 art\ae_nabs6.png 165 5 09 94 66 -32 -63
 1244 art\ae_nabs6.png 246 5 09 91 65 -32 -60
 1245 art\ae_nabs6.png 326 5 09 108 65 -32 -77
 1246 art\ae_nabs6.png 406 5 09 94 65 -31 -63
 1247 art\ae_nabs6.png 486 5 09 94 65 -31 -63
 1248 art\ae_nabs6.png 566 5 09 91 64 -31 -60
 1249 art\ae_nabs6.png 645 5 09 108 64 -31 -77
 1250 art\ae_nabs6.png 5 118 09 95 66 -32 -64
 1251 art\ae_nabs6.png 86 118 09 94 66 -32 -63
 1252 art\ae_nabs6.png 167 118 09 91 65 -32 -60
 1253 art\ae_nabs6.png 247 118 09 108 65 -32 -77
 1254 art\ae_nabs6.png 327 118 09 94 64 -31 -63
 1255 art\ae_nabs6.png 406 118 09 94 65 -31 -63
 1256 art\ae_nabs6.png 486 118 09 91 64 -31 -60
 1257 art\ae_nabs6.png 565 118 09 108 64 -31 -77
 1258 * 26	 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  12 // ID number
  08 34
     09 03
     0A 0A 27
     10 30 75
     11 9B
     13 10 38
     14 01
     18 04
     1D 04
 // Action 4 to set name:  

 1259 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1260 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1261 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1262 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1263 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1264 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1265 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1266 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1267 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1268 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1269 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1270 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1271 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1272 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1273 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1274 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1275 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1276 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1277 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1278 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1279 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1280 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1281 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1282 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1283 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1284 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1285 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1286 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1287 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1288 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1289 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1290 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1291 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1292 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1293 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1294 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1295 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1296 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1297 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1298 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1299 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1300 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1301 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1302 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1303 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1304 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1305 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1306 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1307 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1308 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1309 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1310 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1311 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1312 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1313 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1314 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1315 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1316 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1317 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1318 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1319 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1320 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1321 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1322 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1323 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1324 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1325 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1326 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1327 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1328 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1329 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1330 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  12 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
 1331 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1332 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1333 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1334 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
 1335 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1336 * 7	 03 07 01 12 00 A1 00
// ID 13 - 14 Large Deco Building (North and South)
// Large Deco Building (NW)
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1212) has not been used.
 1337 * 6	 01 07 06 FF 01 00
 1338 art\ae_nabs6.png 644 118 09 31 64 -31 0
 1339 art\ae_nabs6.png 5 231 09 112 64 -31 -81
 1340 art\ae_nabs6.png 84 231 09 158 64 -31 -127
 1341 art\ae_nabs6.png 163 231 09 155 64 -31 -124
 1342 art\ae_nabs6.png 242 231 09 31 64 -31 0
 1343 art\ae_nabs6.png 321 231 09 155 64 -31 -124
// Action 0
 1344 * 28	 00 07 0A 01 13
     08 42
     09 0A
     0A 0A 27
     10 60 EA
     11 FF
     13 10 38
     14 01
     18 20
     19 02
     1D 04
// Action 4 to set name:  

 1345 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  13 C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1346 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1347 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1348 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1349 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1350 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1351 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1352 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1353 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  13 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
 1354 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  13 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
 1355 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1356 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1357 * 7	 03 07 01 13 00 1C 00
// Large Deco Building (SE)
// Action 1
 1358 * 6	 01 07 06 FF 01 00
 1359 art\ae_nabs6.png 400 231 09 31 64 -31 0
 1360 art\ae_nabs6.png 479 231 09 115 64 -31 -84
 1361 art\ae_nabs6.png 558 231 09 171 64 -31 -140
 1362 art\ae_nabs6.png 637 231 09 165 64 -31 -134
 1363 art\ae_nabs6.png 716 231 09 31 64 -31 0
 1364 art\ae_nabs6.png 5 407 09 165 64 -31 -134
// Action 0
 1365 * 16	 00 07 05 01 14 08 43 10 60 EA 11 FF 19 02 1D 04
// Action 4 to set name:  
 1366 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  14 C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1367 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1368 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1369 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1370 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1371 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1372 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1373 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1374 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  14 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
 1375 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  14 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
 1376 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1377 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1378 * 7	 03 07 01 14 00 1C 00
// ID 15 Deco Buildings
// Deco Buildings
 1379 * 6	 01 07 06 FF 01 00
 1380 art\ae_nabs6.png 84 407 09 31 64 -31 0
 1381 art\ae_nabs6.png 163 407 09 109 64 -31 -78
 1382 art\ae_nabs6.png 242 407 09 143 66 -32 -112
 1383 art\ae_nabs6.png 323 407 09 153 66 -32 -122
 1384 art\ae_nabs6.png 404 407 09 31 64 -31 0
 1385 art\ae_nabs6.png 483 407 09 153 66 -32 -122
 1386 * 28	 00 07 0A 01 15
     08 34
     09 01
     0A 0A 27
     10 60 EA
     11 FF
     13 10 38
     14 01
     18 04
     19 02 // Flat out protected.
   1D 04
 // Action 4 to set name:  

 1387 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 15 C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 1388 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1389 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1390 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1391 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1392 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1393 * 18	 02 07 1E 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1394 * 22	 02 07 1F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     1E 00
 1395 * 6	 01 07 06 FF 01 00
 1396 art\ae_nabs6.png 564 407 09 38 64 -31 -7
 1397 art\ae_nabs6.png 643 407 09 113 64 -31 -82
 1398 art\ae_nabs6.png 5 577 09 161 64 -31 -130
 1399 art\ae_nabs6.png 84 577 09 165 66 -32 -134
 1400 art\ae_nabs6.png 165 577 09 31 66 -32 0
 1401 art\ae_nabs6.png 246 577 09 165 66 -32 -134
 1402 * 17	 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1403 * 17	 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1404 * 17	 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1405 * 17	 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1406 * 17	 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1407 * 18	 02 07 20 81 43 00 FF 02
     08 00 00 03
     09 00 04 04
     03 00
 1408 * 22	 02 07 21 81 40 00 03 03
     05 00 00 00
     06 00 01 01
     07 00 02 02
     20 00
 1409 * 6	 01 07 06 FF 01 00
 1410 art\ae_nabs6.png 327 577 09 38 64 -31 -7
 1411 art\ae_nabs6.png 406 577 09 104 64 -31 -73
 1412 art\ae_nabs6.png 485 577 09 146 64 -31 -115
 1413 art\ae_nabs6.png 564 577 09 156 65 -31 -125
 1414 art\ae_nabs6.png 644 577 09 31 65 -32 0
 1415 art\ae_nabs6.png 5 747 09 156 65 -31 -125
 1416 * 17	 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1417 * 17	 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1418 * 17	 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1419 * 17	 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1420 * 17	 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1421 * 18	 02 07 22 81 43 00 FF 02
     0D 00 00 03
     0E 00 04 04
     03 00
 1422 * 22	 02 07 23 81 40 00 03 03
     0A 00 00 00
     0B 00 01 01
     0C 00 02 02
     22 00
 1423 * 6	 01 07 06 FF 01 00
 1424 art\ae_nabs6.png 85 747 09 45 64 -31 -14
 1425 art\ae_nabs6.png 164 747 09 107 64 -31 -76
 1426 art\ae_nabs6.png 243 747 09 150 64 -31 -119
 1427 art\ae_nabs6.png 322 747 09 167 64 -31 -136
 1428 art\ae_nabs6.png 401 747 09 31 64 -31 0
 1429 art\ae_nabs6.png 480 747 09 167 64 -31 -136
 1430 * 17	 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1431 * 17	 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1432 * 17	 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1433 * 17	 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1434 * 17	 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1435 * 18	 02 07 24 81 43 00 FF 02
     12 00 00 03
     13 00 04 04
     03 00
 1436 * 22	 02 07 25 81 40 00 03 03
     0F 00 00 00
     10 00 01 01
     11 00 02 02
     24 00
 1437 * 6	 01 07 06 FF 01 00
 1438 art\ae_nabs6.png 559 747 09 35 64 -31 -4
 1439 art\ae_nabs6.png 638 747 09 114 64 -31 -83
 1440 art\ae_nabs6.png 717 747 09 146 64 -31 -115
 1441 art\ae_nabs7.png 5 5 09 159 64 -31 -128
 1442 art\ae_nabs7.png 84 5 09 31 64 -31 0
 1443 art\ae_nabs7.png 163 5 09 159 64 -31 -128
 1444 * 17	 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1445 * 17	 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1446 * 17	 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1447 * 17	 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1448 * 17	 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1449 * 18	 02 07 26 81 43 00 FF 02
     17 00 00 03
     18 00 04 04
     03 00
 1450 * 22	 02 07 27 81 40 00 03 03
     14 00 00 00
     15 00 01 01
     16 00 02 02
     26 00
 1451 * 6	 01 07 06 FF 01 00
 1452 art\ae_nabs7.png 242 5 09 33 64 -31 -2
 1453 art\ae_nabs7.png 321 5 09 103 64 -31 -72
 1454 art\ae_nabs7.png 400 5 09 138 64 -31 -107
 1455 art\ae_nabs7.png 479 5 09 151 64 -31 -120
 1456 art\ae_nabs7.png 558 5 09 31 64 -31 0
 1457 art\ae_nabs7.png 637 5 09 151 64 -31 -120
 1458 * 17	 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1459 * 17	 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1460 * 17	 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1461 * 17	 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1462 * 17	 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1463 * 18	 02 07 28 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1464 * 22	 02 07 29 81 40 00 03 03
     19 00 00 00
     1A 00 01 01
     1B 00 02 02
     28 00
 // Pick random variation
 1465 * 23	 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1466 * 19	 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  15 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  05 // maxval
  00 FF // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1467 * 23	 02 07 2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
 1468 * 23	 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  2A 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1469 * 7	 03 07 01 15 00 3C 00
// ID 16 small building 04
// Small Building 4 - More flats.
// Action 1:
 1470 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1471 art\smallbuilding04.png 82 11 09 34 64 -31 -3
 1472 art\smallbuilding04.png 162 11 09 57 64 -31 -26
 1473 art\smallbuilding04.png 242 11 09 57 64 -31 -26
 1474 art\smallbuilding04.png 322 11 09 57 64 -31 -26
 1475 art\smallbuilding04.png 2 11 09 32 64 -31 -1
 1476 art\smallbuilding04.png 402 11 09 57 64 -31 -26
// Action 0 to set properties:   
 1477 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  16 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:

 1478 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  16 C9 // Offset
  "Small Building 04" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1479 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1480 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1481 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1482 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1483 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1484 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1485 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1486 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  16 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 17 small building 04
// Small Building 5 - More flats.
// Action 1:
 1487 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1488 art\smallbuilding05.png 85 10 09 34 64 -31 -3
 1489 art\smallbuilding05.png 165 10 09 63 68 -31 -32
 1490 art\smallbuilding05.png 245 10 09 66 64 -31 -35
 1491 art\smallbuilding05.png 325 10 09 66 64 -31 -35
 1492 art\smallbuilding05.png 5 10 09 32 64 -31 -1
 1493 art\smallbuilding05.png 405 10 09 66 64 -31 -35
// Action 0 to set properties:   
 1494 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  17 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:

 1495 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  17 C9 // Offset
  "Small Building 05" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1496 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1497 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1498 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1499 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1500 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1501 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1502 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1503 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  17 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 18 small building 06
// Small Building 6 - More flats.
// Action 1:
 1504 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1505 art\smallbuilding06.png 92 20 09 34 64 -31 -3
 1506 art\smallbuilding06.png 167 20 09 57 64 -31 -28
 1507 art\smallbuilding06.png 247 20 09 59 64 -31 -28
 1508 art\smallbuilding06.png 327 20 09 59 64 -31 -28
 1509 art\smallbuilding06.png 12 20 09 31 64 -31 0
 1510 art\smallbuilding06.png 407 20 09 59 64 -31 -28
// Action 0 to set properties:   
 1511 * 19	 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  18 // ID
  08 46 // Substitute type
   09 01 // Building flags
   0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
   18 02 // Probability
   1D 04 // Set prop 1D to 4 
// Action 4 to set name:

 1512 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  18 C9 // Offset
  "Small Building 06" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1513 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1514 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1515 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1516 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1517 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1518 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1519 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1520 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  18 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 19 - 1A Flatiron (North and South)
// Flatiron (NW)
// Action 1
 1521 * 6	 01 07 06 FF 01 00
 1522 art\flatiron.png 6 3 09 119 64 -31 -88
 1523 art\flatiron.png 144 3 09 119 64 -31 -88
 1524 art\flatiron.png 284 3 09 119 64 -31 -88
 1525 art\flatiron.png 425 3 09 119 64 -31 -88
 1526 art\flatiron.png 564 3 09 119 64 -31 -88
 1527 art\flatiron.png 702 3 09 119 64 -31 -88
// Action 0
 1528 * 28	 00 07 0A 01 19
     08 42
     09 0A
     0A 0A 27
     10 60 EA
     11 FF
     13 10 38
     14 01
     18 20
     19 02 // must protec
   1D 04
// Action 4 to set name:  

 1529 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  19 C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 1530 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1531 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1532 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1533 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1534 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1535 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1536 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1537 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
 1538 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
 1539 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1540 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1541 * 7	 03 07 01 19 00 1C 00
// Flatiron (SE)
// Action 1
 1542 * 6	 01 07 06 FF 01 00
 1543 art\flatiron.png 76 3 09 119 64 -31 -88
 1544 art\flatiron.png 213 3 09 119 64 -31 -88
 1545 art\flatiron.png 354 3 09 119 64 -31 -88
 1546 art\flatiron.png 495 3 09 119 64 -31 -88
 1547 art\flatiron.png 633 3 09 119 64 -31 -88
 1548 art\flatiron.png 773 3 09 119 64 -31 -88
// Action 0
 1549 * 16	 00 07 05 01 1A 08 43 10 60 EA 11 FF 19 02 // must protec
  1D 04
// Action 4 to set name:  
 1550 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1A C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 1551 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1552 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1553 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1554 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1555 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1556 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1557 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1558 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
 1559 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
 1560 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1561 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1562 * 7	 03 07 01 1A 00 1C 00
// ID 1B - 1E Department Store (North, East, West and South)
// Department Store (N)
// Action 1
 1563 * 6	 01 07 06 FF 01 00
 1564 art\departmentstore.png 5 7 09 35 64 -31 -4
 1565 art\departmentstore.png 85 7 09 84 64 -31 -53
 1566 art\departmentstore.png 165 7 09 76 64 -31 -45
 1567 art\departmentstore.png 245 7 09 79 64 -31 -48
 1568 art\departmentstore.png 319 7 09 31 64 -31 0
 1569 art\departmentstore.png 394 7 09 79 64 -31 -48
// Action 0
 1570 * 28	 00 07 0A 01 1B
     08 20
     09 12
     0A 0A 27
     10 60 EA
     11 FF
     13 10 38
     14 01
     18 04
     19 02
     1D 04
// Action 4 to set name:  

 1571 * 29	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1B C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1572 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1573 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1574 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1575 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1576 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1577 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1578 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1579 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1580 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
 1581 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1582 * 7	 03 07 01 1B 00 1C 00
// Department Store (E)
// Action 1
 1583 * 6	 01 07 06 FF 01 00
 1584 art\departmentstore.png 5 109 09 35 64 -31 -4
 1585 art\departmentstore.png 85 109 09 80 64 -31 -49
 1586 art\departmentstore.png 165 109 09 78 64 -31 -47
 1587 art\departmentstore.png 245 109 09 78 64 -31 -47
 1588 art\departmentstore.png 319 109 09 31 64 -31 0
 1589 art\departmentstore.png 394 109 09 78 64 -31 -47
// Action 0
 1590 * 16	 00 07 05 01 1C 08 21 10 60 EA 11 FF 19 02 1D 04
// Action 4 to set name:  
 1591 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1C C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 1592 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1593 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1594 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1595 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1596 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1597 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1598 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1599 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1600 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
 1601 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1602 * 7	 03 07 01 1C 00 1C 00
// Department Store (W)
// Action 1
 1603 * 6	 01 07 06 FF 01 00
 1604 art\departmentstore.png 5 206 09 35 64 -31 -4
 1605 art\departmentstore.png 85 206 09 70 64 -31 -39
 1606 art\departmentstore.png 165 206 09 74 64 -31 -43
 1607 art\departmentstore.png 245 206 09 74 64 -31 -43
 1608 art\departmentstore.png 319 206 09 31 64 -31 0
 1609 art\departmentstore.png 394 206 09 74 64 -31 -43
// Action 0
 1610 * 16	 00 07 05 01 1D 08 22 10 60 EA 11 FF 19 02 1D 04
// Action 4 to set name:  
 1611 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1D C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1612 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1613 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1614 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1615 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1616 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1617 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1618 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1619 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1620 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
 1621 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1622 * 7	 03 07 01 1D 00 1C 00
// Department Store (S)
// Action 1
 1623 * 6	 01 07 06 FF 01 00
 1624 art\departmentstore.png 5 308 09 31 64 -31 0
 1625 art\departmentstore.png 85 308 09 31 64 -31 0
 1626 art\departmentstore.png 163 308 09 31 64 -31 0
 1627 art\departmentstore.png 243 308 09 31 64 -31 0
 1628 art\departmentstore.png 316 308 09 31 64 -31 0
 1629 art\departmentstore.png 392 308 09 31 64 -31 0
// Action 0
 1630 * 16	 00 07 05 01 1E 08 23 10 60 EA 11 FF 19 02 1D 04
// Action 4 to set name:  
 1631 * 29	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1E C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1632 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1633 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1634 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1635 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1636 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1637 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1638 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1639 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1640 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
 1641 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1642 * 7	 03 07 01 1E 00 1C 00
// Fin
//!!For feature 7 the following cargoIDs have not been used since their most recent definition:
//!!27 (last defined at sprite 1450)
