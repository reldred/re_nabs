// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Escapes: 2+ 2- 2< 2> 2u< 2u> 2/ 2% 2u/ 2u% 2* 2& 2| 2^ 2sto = 2s 2rst = 2r 2psto 2ror = 2rot 2cmp 2ucmp 2<< 2u>> 2>>
// Escapes: 71 70 7= 7! 7< 7> 7G 7g 7gG 7GG 7gg 7c 7C
// Escapes: D= = DR D+ = DF D- = DC Du* = DM D* = DnF Du<< = DnC D<< = DO D& D| Du/ D/ Du% D%
// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags
    0 * 4	 1D 0C 00 00
// Total number of sprites (Let nforenum deal with this):
// Action 8 for description, copyright notice, and grfid:
//!!Warning (219): There was no Action 14 specifying the palette.
    1 * 409	 08 08 "RJ" 45 01 "North American Buildings Set" 00
     "Coded by reldred (the belligerent formerly known as Aegir). Artwork by Oz, lifeblood, reldred. reldreds North American Building "
           "Set is the continuation of Aegir's original NABS. For support go bug reldred on #openttd. Special thanks to patchman, dalestan, "
           "csaboka, eis_os and all the other #tycoon OG's I've forgotten from whom I owe a great deal and have learnt even more." 00
// ID 00 Small House 1:
// Small House 1 - Twin houses with brown roofs.
// Action 1:
    2 * 6	 01 07 06 FF 01 00
// Real Sprites:
    3 art/house01.png 8bpp 3 2 64 37 -31 -6 normal
    4 art/house01.png 8bpp 79 2 64 45 -31 -14 normal
    5 art/house01.png 8bpp 149 2 64 45 -31 -14 normal
    6 art/house01.png 8bpp 222 2 64 44 -31 -13 normal
    7 art/house01.png 8bpp 298 2 64 31 -31 0 normal
    8 art/house01.png 8bpp 367 2 64 44 -31 -13 normal
// Action 0 to set properties:
    9 * 20	 00 07 // Action 0, Feature 07
                 06 // Properties to Change
                 01 // Change properties for how many ID's
                 00 // ID
                 08 2E // Substitute type
                 09 01 // Building flags
//                 0A 00 1D // Set years availible
                 13 03 78 // Set availibilty mask
                 1D 04 // Set prop 1D to 4
    21 \w1895 22 \w1949
// Action 4 to set name:  
   10 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 00 C9 // Offset
                 "Suburban House 01" 00 // String
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   11 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   12 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   13 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   14 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   15 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   16 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   17 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.0:
   18 * 7	 03 07 01 00 00 11 00
// Fin
// ID 01 Small House 2:
// Small House 2 - Grey roof, small corner shops
// Action 1:
   19 * 6	 01 07 06 FF 01 00
// Real Sprites:
   20 art/house02.png 8bpp 7 3 64 31 -31 0 normal
   21 art/house02.png 8bpp 83 3 64 38 -31 -7 normal
   22 art/house02.png 8bpp 159 3 64 33 -31 -2 normal
   23 art/house02.png 8bpp 230 3 64 34 -31 -3 normal
   24 art/house02.png 8bpp 306 3 64 31 -31 0 normal
   25 art/house02.png 8bpp 376 3 64 34 -31 -3 normal
 // Action 0 to set properties:
   26 * 20	 00 07 // Action 0, Feature 07
 06 // Properties to Change
  01 // Change properties for how many ID's
  01 // ID
  08 2E // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 03 78 // Set availibilty mask
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:  
   27 * 23	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 01 C9 // Offset
                 "Suburban Shop 01" 00 // String
// Action 2 Chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   28 * 17	 02 07 // Action 2, Feature 07
  00 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  00 00 00 80 // Building Sprite (00)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 2nd stage action 2:
   29 * 17	 02 07 // Action 2, Feature 07
  01 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  01 00 00 80 // Building Sprite (01)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 3rd stage action 2:
   30 * 17	 02 07 // Action 2, Feature 07
  02 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  02 00 00 80 // Building Sprite (02)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Finished stage action 2:
   31 * 17	 02 07 // Action 2, Feature 07
  03 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  03 00 00 80 // Building Sprite (03)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Snowy stage action 2:
   32 * 17	 02 07 // Action 2, Feature 07
  04 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  05 00 00 80 // Building Sprite (05)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   33 * 18	 02 07 // Action 2, Feature 07
  10 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  43 // Variable (Terrain Type)
  00 FF // Varadjust (AND FF)
  02 // Nuber of ranges
  // Range Checks:
  03 00 // Use Set ID 3...
  00 03 // If ground type between 0 and 3
  04 00 // Use Set ID 4...
  04 04 // If ground type between 4 and 4
  03 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   34 * 22	 02 07 // Action 2, Feature 07
  11 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  40 // Variable (Construction stages)
  00 03 // Varadjust (AND FF)
  03 // Number of ranges
  // Range Checks:
  00 00 // Use Set ID 0...
  00 00 // If construction stage 0
  01 00 // Use Set ID 1...
  01 01 // If construction stage 1
  02 00 // Use Set ID 2...
  02 02 // If construction stage 2
  10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   35 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  01 // id.1
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 02 Small Building 1:
// Small Building 1 - Two shops side by side
// Action 1:
   36 * 6	 01 07 06 FF 01 00
// Real Sprites:    
   37 art/smallbuilding01.png 8bpp 5 6 64 34 -31 -3 normal
   38 art/smallbuilding01.png 8bpp 81 6 64 58 -31 -27 normal
   39 art/smallbuilding01.png 8bpp 157 6 64 60 -31 -29 normal
   40 art/smallbuilding01.png 8bpp 230 6 64 59 -31 -28 normal
   41 art/smallbuilding01.png 8bpp 306 6 64 32 -31 -1 normal
   42 art/smallbuilding01.png 8bpp 377 6 64 59 -31 -28 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
   43 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  02 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:  
   44 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  02 C9 // Offset
  "Small Building 01" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   45 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   46 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   47 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   48 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   49 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   50 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   51 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   52 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  02 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 03 Small Building 2:
// Small Building 2 - Small Flats
// Action 1:
   53 * 6	 01 07 06 FF 01 00
// Real Sprites:
   54 art/ae_nabs1.png 8bpp 637 55 64 41 -31 -10 normal
   55 art/ae_nabs1.png 8bpp 716 55 64 39 -31 -8 normal
   56 art/ae_nabs1.png 8bpp 5 120 64 53 -31 -22 normal
   57 art/ae_nabs1.png 8bpp 84 120 64 53 -31 -22 normal
   58 art/ae_nabs1.png 8bpp 163 120 64 32 -31 -1 normal
   59 art/ae_nabs1.png 8bpp 242 120 64 52 -31 -22 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
   60 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  03 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
   61 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  03 C9 // Offset
  "Small Building 02" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   62 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   63 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   64 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   65 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   66 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   67 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   68 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   69 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  03 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 04 Small Building 3:
// Small Building 3 - More flats.
// Action 1:
   70 * 6	 01 07 06 FF 01 00
// Real Sprites:
   71 art/ae_nabs1.png 8bpp 321 120 63 35 -31 -4 normal
   72 art/ae_nabs1.png 8bpp 399 120 64 44 -31 -13 normal
   73 art/ae_nabs1.png 8bpp 478 120 64 52 -31 -21 normal
   74 art/ae_nabs1.png 8bpp 557 120 64 52 -31 -21 normal
   75 art/ae_nabs1.png 8bpp 636 120 63 31 -30 0 normal
   76 art/ae_nabs1.png 8bpp 714 120 64 52 -31 -21 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
   77 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  04 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
   78 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  04 C9 // Offset
  "Small Building 03" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
   79 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   80 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   81 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   82 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
   83 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
   84 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
   85 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
   86 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  04 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 05 - 06 School (North and South)
// School (N)
// Action 1:
   87 * 6	 01 07 06 FF 01 00
// Real Sprites:
   88 art/ae_nabs1.png 8bpp 5 178 64 36 -31 -5 normal
   89 art/ae_nabs1.png 8bpp 84 178 63 42 -31 -11 normal
   90 art/ae_nabs1.png 8bpp 162 178 64 51 -31 -20 normal
   91 art/ae_nabs1.png 8bpp 241 178 59 44 -31 -13 normal
   92 art/ae_nabs1.png 8bpp 315 178 64 40 -31 -9 normal
   93 art/ae_nabs1.png 8bpp 394 178 64 44 -31 -13 normal
// Action 0 to set properties:  
   94 * 27	 00 07 // Action 0, Feature 7
  09 // Properties to change
  01 // Change properties for how many ID's
  05 // ID
  08 42 // Substitute type
  09 08 // Building flags
// 0A 00 1D // Set years availible
  10 \w45000 // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  13 03 78 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
   95 * 13	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  05 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
   96 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
   97 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
   98 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
   99 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
  100 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  101 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
  102 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
//!!Warning (170): Default result cannot be reached.
  103 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 80 // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
//!!Warning (170): Default result cannot be reached.
  104 * 18	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 80 // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
//!!Warning (170): Default result cannot be reached.
  105 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 80 // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
//!!Warning (170): Default result cannot be reached.
  106 * 18	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 80 // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
  107 * 15	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
  108 * 17	 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.25:
  109 * 7	 03 07 01 05 00 25 00
// Fin
// School (S)
// Action 1:
  110 * 6	 01 07 06 FF 01 00
// Real Sprites:
  111 art/ae_nabs1.png 8bpp 473 178 64 31 -31 0 normal
  112 art/ae_nabs1.png 8bpp 552 178 64 51 -31 -20 normal
  113 art/ae_nabs1.png 8bpp 631 178 64 58 -31 -27 normal
  114 art/ae_nabs1.png 8bpp 710 178 64 53 -31 -22 normal
  115 art/ae_nabs1.png 8bpp 5 241 64 31 -31 0 normal
  116 art/ae_nabs1.png 8bpp 84 241 64 53 -31 -22 normal
// Action 0 to set properties:   
  117 * 14	 00 07 // Action 0, Feature 7
  04 // Properties to change
  01 // Change properties for how many ID's
  06 // ID
  08 43 // Substitute type
  10 \w45000 // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
  118 * 13	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  06 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
  119 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  120 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
  121 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
  122 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
  123 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  124 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
  125 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
//!!Warning (170): Default result cannot be reached.
  126 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 80 // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
//!!Warning (170): Default result cannot be reached.
  127 * 18	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 80 // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
//!!Warning (170): Default result cannot be reached.
  128 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 80 // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
//!!Warning (170): Default result cannot be reached.
  129 * 18	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 80 // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
  130 * 15	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
  131 * 17	 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.2:
  132 * 7	 03 07 01 06 00 25 00
// Fin
// ID 07 - 08 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
  133 * 6	 01 07 0C FF 01 00
// Real Sprites:   
  134 art/ae_nabs1.png 8bpp 163 241 32 35 -31 -4 normal
  135 art/ae_nabs1.png 8bpp 210 241 32 54 -31 -23 normal
  136 art/ae_nabs1.png 8bpp 257 241 32 54 -31 -23 normal
  137 art/ae_nabs1.png 8bpp 304 241 32 54 -31 -23 normal
  138 art/ae_nabs1.png 8bpp 351 241 32 54 -31 -23 normal
  139 art/ae_nabs1.png 8bpp 398 241 32 54 -31 -23 normal
  140 art/ae_nabs1.png 8bpp 445 241 32 54 -31 -23 normal
  141 art/ae_nabs1.png 8bpp 492 241 64 31 -31 0 normal
  142 art/ae_nabs1.png 8bpp 571 241 64 54 -31 -23 normal
  143 art/ae_nabs1.png 8bpp 650 241 64 54 -31 -23 normal
  144 art/ae_nabs1.png 8bpp 5 300 64 54 -31 -23 normal
  145 art/ae_nabs1.png 8bpp 84 300 64 54 -31 -23 normal
// Action 0 to set properties:  
  146 * 27	 00 07 // Action 0, Feature 07
                09 // Properties to Change
                01 // Change properties for how many ID's
                07 // ID
                08 42 // Substitute type
                09 0A // Building flags
//                0A 00 1D // Set years availible
                10 \w20000 // Local Authority rating decrease
                11 64 // Removal cost multiplier
                13 0C 78 // Set availibilty mask
                18 04 // Probability
                1D 04 // Set prop 1D to 4
    21 \w1895 22 \w1949
// Action 4 to set name:  
  147 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 07 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  148 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  149 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  150 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  151 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  152 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  153 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  154 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  155 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  156 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  157 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  158 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  159 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  160 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  161 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  162 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  163 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  164 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  165 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  166 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  167 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  168 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  169 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  170 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  171 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  172 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  173 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  174 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  175 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  176 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  177 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  178 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
  179 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
  180 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  181 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  182 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
  183 * 7	 03 07 01 07 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
  184 * 6	 01 07 0C FF 01 00
// Real Sprites:
  185 art/ae_nabs1.png 8bpp 163 300 64 61 -31 -30 normal
  186 art/ae_nabs1.png 8bpp 242 300 64 70 -31 -39 normal
  187 art/ae_nabs1.png 8bpp 321 300 64 70 -31 -39 normal
  188 art/ae_nabs1.png 8bpp 400 300 64 70 -31 -39 normal
  189 art/ae_nabs1.png 8bpp 479 300 64 71 -31 -39 normal
  190 art/ae_nabs1.png 8bpp 558 300 64 70 -31 -39 normal
  191 art/ae_nabs1.png 8bpp 637 300 64 70 -31 -39 normal
  192 art/ae_nabs1.png 8bpp 716 300 64 31 -31 0 normal
  193 art/ae_nabs1.png 8bpp 5 376 64 54 -31 -23 normal
  194 art/ae_nabs1.png 8bpp 84 376 64 54 -31 -23 normal
  195 art/ae_nabs1.png 8bpp 163 376 64 54 -31 -23 normal
  196 art/ae_nabs1.png 8bpp 242 376 64 54 -31 -23 normal
// Action 0 to set properties: 
  197 * 14	 00 07 // Action 0, Feature 7
                 04 // Properties to change
                 01 // Change properties for how many ID's
                 08 // ID
                 08 43 // Substitute type
                 10 \w20000 // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
                 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
  198 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 08 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  199 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  200 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  201 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  202 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  203 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  204 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  205 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  206 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  207 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  208 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  209 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  210 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  211 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  212 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  213 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  214 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  215 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  216 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  217 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  218 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  219 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  220 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  221 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  222 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  223 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  224 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  225 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  226 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  227 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  228 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  229 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
  230 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
  231 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  232 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  233 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  234 * 7	 03 07 01 08 00 35 00
// Fin
// ID 09 - 0A Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
  235 * 6	 01 07 0C FF 01 00
// Real Sprites:  
  236 art/ae_nabs1.png 8bpp 321 376 32 47 1 -16 normal
  237 art/ae_nabs1.png 8bpp 368 376 32 54 1 -23 normal
  238 art/ae_nabs1.png 8bpp 415 376 32 54 1 -23 normal
  239 art/ae_nabs1.png 8bpp 462 376 32 54 1 -23 normal
  240 art/ae_nabs1.png 8bpp 509 376 32 54 1 -23 normal
  241 art/ae_nabs1.png 8bpp 556 376 32 54 1 -23 normal
  242 art/ae_nabs1.png 8bpp 603 376 32 54 1 -23 normal
  243 art/ae_nabs1.png 8bpp 650 376 64 31 -31 0 normal
  244 art/ae_nabs1.png 8bpp 5 435 64 54 -31 -23 normal
  245 art/ae_nabs1.png 8bpp 84 435 64 54 -31 -23 normal
  246 art/ae_nabs1.png 8bpp 163 435 64 54 -31 -23 normal
  247 art/ae_nabs1.png 8bpp 242 435 54 64 -31 -23 normal
// Action 0 to set properties: 
  248 * 27	 00 07 // Action 0, Feature 07
                 09 // Properties to change
                 01 // Change properties for how many ID's
                 09 // ID
                 08 4A // Substitute type
                 09 06 // Building flags
//                 0A 00 1D // Set years availible
                 10 \w20000 // Local authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 78 // Set availibility mask
                 18 04 // Probability
                 1D 04 // Set prop 1D to 4
    21 \w1895 22 \w1949
// Action 4 to set name:  
  249 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 09 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  250 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  251 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  252 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  253 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  254 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  255 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  256 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  257 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  258 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  259 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  260 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  261 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  262 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  263 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  264 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  265 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  266 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  267 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  268 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  269 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  270 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  271 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  272 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  273 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  274 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  275 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  276 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  277 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  278 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  279 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  280 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
  281 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
  282 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  283 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  284 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  285 * 7	 03 07 01 09 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
  286 * 6	 01 07 0C FF 01 00
// Real Sprites:      
  287 art/ae_nabs1.png 8bpp 321 435 64 63 -31 -32 normal
  288 art/ae_nabs1.png 8bpp 400 435 64 70 -31 -39 normal
  289 art/ae_nabs1.png 8bpp 479 435 64 70 -31 -39 normal
  290 art/ae_nabs1.png 8bpp 558 435 64 70 -31 -39 normal
  291 art/ae_nabs1.png 8bpp 637 435 64 70 -31 -39 normal
  292 art/ae_nabs1.png 8bpp 716 435 64 70 -31 -39 normal
  293 art/ae_nabs1.png 8bpp 5 510 64 70 -31 -39 normal
  294 art/ae_nabs1.png 8bpp 84 510 64 31 -31 0 normal
  295 art/ae_nabs1.png 8bpp 163 510 64 54 -31 -23 normal
  296 art/ae_nabs1.png 8bpp 242 510 64 54 -31 -23 normal
  297 art/ae_nabs1.png 8bpp 321 510 64 54 -31 -23 normal
  298 art/ae_nabs1.png 8bpp 400 510 64 54 -31 -23 normal
// Action 0 to set properties:    
  299 * 14	 00 07 04 01 0A 08 4B 10 \w20000 11 64 1D 04
// Action 4 to set name:  
  300 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 0A C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
  301 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  302 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  303 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  304 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  305 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  306 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  307 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
  308 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  309 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  310 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  311 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  312 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
  313 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  314 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
  315 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
  316 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  317 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  318 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  319 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
  320 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
  321 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
  322 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
  323 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
  324 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
  325 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
  326 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
  327 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
  328 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
  329 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
  330 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
  331 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
  332 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
  333 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  334 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
  335 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  336 * 7	 03 07 01 0A 00 35 00
// Fin  
// ID 0B Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
  337 * 6	 01 07 2D FF 01 00
  338 art/ae_nabs1.png 8bpp 479 510 65 31 -32 0 normal
  339 art/ae_nabs1.png 8bpp 559 510 64 89 -31 -58 normal
  340 art/ae_nabs1.png 8bpp 638 510 64 86 -31 -55 normal
  341 art/ae_nabs1.png 8bpp 717 510 64 86 -31 -55 normal
  342 art/ae_nabs1.png 8bpp 5 604 64 31 -31 0 normal
  343 art/ae_nabs1.png 8bpp 84 604 65 86 -31 -55 normal
  344 art/ae_nabs1.png 8bpp 164 604 65 86 -31 -55 normal
  345 art/ae_nabs1.png 8bpp 244 604 64 86 -31 -55 normal
  346 art/ae_nabs1.png 8bpp 323 604 64 99 -31 -68 normal
  347 art/ae_nabs1.png 8bpp 402 604 66 85 -32 -54 normal
  348 art/ae_nabs1.png 8bpp 483 604 66 85 -32 -54 normal
  349 art/ae_nabs1.png 8bpp 564 604 65 90 -32 -59 normal
  350 art/ae_nabs1.png 8bpp 644 604 65 99 -32 -68 normal
  351 art/ae_nabs1.png 8bpp 5 708 66 88 -32 -57 normal
  352 art/ae_nabs1.png 8bpp 86 708 66 90 -32 -59 normal
  353 art/ae_nabs1.png 8bpp 167 708 65 88 -32 -57 normal
  354 art/ae_nabs1.png 8bpp 247 708 65 99 -32 -68 normal
  355 art/ae_nabs1.png 8bpp 327 708 66 93 -32 -62 normal
  356 art/ae_nabs1.png 8bpp 408 708 66 93 -32 -62 normal
  357 art/ae_nabs1.png 8bpp 489 708 65 93 -32 -62 normal
  358 art/ae_nabs1.png 8bpp 569 708 65 99 -32 -68 normal
  359 art/ae_nabs1.png 8bpp 649 708 65 95 -31 -65 normal
  360 art/ae_nabs1.png 8bpp 5 812 66 96 -32 -65 normal
  361 art/ae_nabs1.png 8bpp 86 812 64 96 -31 -65 normal
  362 art/ae_nabs1.png 8bpp 165 812 64 99 -31 -68 normal
  363 art/ae_nabs1.png 8bpp 244 812 65 86 -31 -55 normal
  364 art/ae_nabs1.png 8bpp 324 812 65 86 -31 -55 normal
  365 art/ae_nabs1.png 8bpp 404 812 64 86 -31 -55 normal
  366 art/ae_nabs1.png 8bpp 483 812 64 99 -31 -68 normal
  367 art/ae_nabs1.png 8bpp 562 812 66 85 -32 -54 normal
  368 art/ae_nabs1.png 8bpp 643 812 66 85 -32 -54 normal
  369 art/ae_nabs2.png 8bpp 5 5 65 84 -32 -53 normal
  370 art/ae_nabs2.png 8bpp 85 5 65 99 -32 -68 normal
  371 art/ae_nabs2.png 8bpp 165 5 66 88 -32 -57 normal
  372 art/ae_nabs2.png 8bpp 246 5 66 88 -32 -57 normal
  373 art/ae_nabs2.png 8bpp 327 5 65 88 -32 -57 normal
  374 art/ae_nabs2.png 8bpp 407 5 65 99 -32 -68 normal
  375 art/ae_nabs2.png 8bpp 487 5 66 93 -32 -62 normal
  376 art/ae_nabs2.png 8bpp 568 5 67 92 -33 -61 normal
  377 art/ae_nabs2.png 8bpp 650 5 65 93 -32 -62 normal
  378 art/ae_nabs2.png 8bpp 5 109 65 99 -32 -68 normal
  379 art/ae_nabs2.png 8bpp 85 109 65 95 -31 -64 normal
  380 art/ae_nabs2.png 8bpp 165 109 65 95 -31 -64 normal
  381 art/ae_nabs2.png 8bpp 245 109 64 95 -31 -64 normal
  382 art/ae_nabs2.png 8bpp 324 109 64 99 -31 -68 normal
//!!Error (63): Expected 7 more properties.
  383 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0B // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
// Action 4 to set name:  
  384 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         0B C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  385 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  386 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  387 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  388 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  389 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  390 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  391 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  392 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  393 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  394 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  395 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  396 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  397 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  398 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  399 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  400 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  401 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  402 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  403 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  404 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  405 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  406 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  407 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  408 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  409 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  410 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  411 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  412 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  413 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  414 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  415 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  416 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  417 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  418 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  419 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  420 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  421 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  422 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  423 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  424 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  425 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  426 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  427 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  428 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  429 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  430 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  431 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  432 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  433 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  434 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  435 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  436 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  437 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  438 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  439 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  440 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  441 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  442 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  443 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  444 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  445 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  446 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  447 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  448 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  449 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  450 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  451 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  452 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  453 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  454 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  455 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
  456 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  457 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  458 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  459 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
  460 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  461 * 7	 03 07 01 0B 00 A1 00
// ID 0C Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 337) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 337) has not been used.
  462 * 6	 01 07 2D FF 01 00
  463 art/ae_nabs2.png 8bpp 403 109 63 38 -31 -7 normal
  464 art/ae_nabs2.png 8bpp 481 109 64 81 -31 -50 normal
  465 art/ae_nabs2.png 8bpp 560 109 64 89 -31 -58 normal
  466 art/ae_nabs2.png 8bpp 639 109 64 89 -31 -58 normal
  467 art/ae_nabs2.png 8bpp 718 109 64 31 -31 0 normal
  468 art/ae_nabs2.png 8bpp 5 213 65 86 -31 -55 normal
  469 art/ae_nabs2.png 8bpp 85 213 65 86 -31 -55 normal
  470 art/ae_nabs2.png 8bpp 165 213 64 86 -31 -55 normal
  471 art/ae_nabs2.png 8bpp 244 213 64 99 -31 -68 normal
  472 art/ae_nabs2.png 8bpp 323 213 66 85 -32 -54 normal
  473 art/ae_nabs2.png 8bpp 404 213 66 85 -32 -54 normal
  474 art/ae_nabs2.png 8bpp 485 213 65 90 -32 -59 normal
  475 art/ae_nabs2.png 8bpp 565 213 65 99 -32 -68 normal
  476 art/ae_nabs2.png 8bpp 645 213 66 88 -32 -57 normal
  477 art/ae_nabs2.png 8bpp 5 317 66 90 -32 -59 normal
  478 art/ae_nabs2.png 8bpp 86 317 65 88 -32 -57 normal
  479 art/ae_nabs2.png 8bpp 166 317 65 99 -32 -68 normal
  480 art/ae_nabs2.png 8bpp 246 317 66 93 -32 -62 normal
  481 art/ae_nabs2.png 8bpp 327 317 66 93 -32 -62 normal
  482 art/ae_nabs2.png 8bpp 408 317 65 93 -32 -62 normal
  483 art/ae_nabs2.png 8bpp 488 317 65 99 -32 -68 normal
  484 art/ae_nabs2.png 8bpp 568 317 65 95 -31 -65 normal
  485 art/ae_nabs2.png 8bpp 648 317 66 96 -32 -65 normal
  486 art/ae_nabs2.png 8bpp 5 421 64 96 -31 -65 normal
  487 art/ae_nabs2.png 8bpp 84 421 64 99 -31 -68 normal
  488 art/ae_nabs2.png 8bpp 163 421 65 86 -31 -55 normal
  489 art/ae_nabs2.png 8bpp 243 421 65 86 -31 -55 normal
  490 art/ae_nabs2.png 8bpp 323 421 64 86 -31 -55 normal
  491 art/ae_nabs2.png 8bpp 402 421 64 99 -31 -68 normal
  492 art/ae_nabs2.png 8bpp 481 421 66 85 -32 -54 normal
  493 art/ae_nabs2.png 8bpp 562 421 66 85 -32 -54 normal
  494 art/ae_nabs2.png 8bpp 643 421 65 84 -32 -53 normal
  495 art/ae_nabs2.png 8bpp 5 525 65 99 -32 -68 normal
  496 art/ae_nabs2.png 8bpp 85 525 66 88 -32 -57 normal
  497 art/ae_nabs2.png 8bpp 166 525 66 88 -32 -57 normal
  498 art/ae_nabs2.png 8bpp 247 525 65 88 -32 -57 normal
  499 art/ae_nabs2.png 8bpp 327 525 65 99 -32 -68 normal
  500 art/ae_nabs2.png 8bpp 407 525 66 93 -32 -62 normal
  501 art/ae_nabs2.png 8bpp 488 525 67 92 -33 -61 normal
  502 art/ae_nabs2.png 8bpp 570 525 65 93 -32 -62 normal
  503 art/ae_nabs2.png 8bpp 650 525 65 99 -32 -68 normal
  504 art/ae_nabs2.png 8bpp 5 629 65 95 -31 -64 normal
  505 art/ae_nabs2.png 8bpp 85 629 65 95 -31 -64 normal
  506 art/ae_nabs2.png 8bpp 165 629 64 95 -31 -64 normal
  507 art/ae_nabs2.png 8bpp 244 629 64 99 -31 -68 normal
//!!Error (63): Expected 7 more properties.
  508 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0C // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
  // Action 4 to set name:  
  509 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0C C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  510 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  511 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  512 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  513 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  514 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  515 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  516 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  517 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  518 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  519 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  520 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  521 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  522 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  523 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  524 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  525 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  526 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  527 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  528 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  529 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  530 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  531 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  532 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  533 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  534 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  535 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  536 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  537 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  538 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  539 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  540 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  541 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  542 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  543 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  544 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  545 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  546 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  547 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  548 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  549 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  550 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  551 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  552 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  553 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  554 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  555 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  556 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  557 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  558 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  559 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  560 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  561 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  562 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  563 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  564 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  565 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  566 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  567 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  568 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  569 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  570 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  571 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  572 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  573 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  574 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  575 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  576 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  577 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  578 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  579 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  580 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
  581 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  582 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  583 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  584 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
  585 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  586 * 7	 03 07 01 0C 00 A1 00
// ID 0D Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 462) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 462) has not been used.
  587 * 6	 01 07 2D FF 01 00
  588 art/ae_nabs2.png 8bpp 323 629 64 31 -31 0 normal
  589 art/ae_nabs2.png 8bpp 402 629 64 90 -31 -59 normal
  590 art/ae_nabs2.png 8bpp 481 629 64 91 -31 -60 normal
  591 art/ae_nabs2.png 8bpp 560 629 64 91 -31 -60 normal
  592 art/ae_nabs2.png 8bpp 639 629 64 31 -31 0 normal
  593 art/ae_nabs2.png 8bpp 718 629 65 94 -32 -63 normal
  594 art/ae_nabs2.png 8bpp 5 733 65 94 -32 -63 normal
  595 art/ae_nabs2.png 8bpp 85 733 64 91 -31 -60 normal
  596 art/ae_nabs2.png 8bpp 164 733 64 109 -31 -78 normal
  597 art/ae_nabs2.png 8bpp 243 733 66 94 -32 -63 normal
  598 art/ae_nabs2.png 8bpp 324 733 66 94 -32 -63 normal
  599 art/ae_nabs2.png 8bpp 405 733 65 91 -31 -60 normal
  600 art/ae_nabs2.png 8bpp 485 733 65 108 -31 -77 normal
  601 art/ae_nabs2.png 8bpp 565 733 65 94 -32 -63 normal
  602 art/ae_nabs2.png 8bpp 645 733 64 94 -32 -63 normal
  603 art/ae_nabs2.png 8bpp 5 847 64 91 -31 -60 normal
  604 art/ae_nabs2.png 8bpp 84 847 64 108 -31 -78 normal
  605 art/ae_nabs2.png 8bpp 163 847 66 94 -32 -63 normal
  606 art/ae_nabs2.png 8bpp 244 847 66 94 -32 -63 normal
  607 art/ae_nabs2.png 8bpp 325 847 65 91 -31 -60 normal
  608 art/ae_nabs2.png 8bpp 405 847 64 108 -31 -77 normal
  609 art/ae_nabs2.png 8bpp 484 847 65 94 -32 -63 normal
  610 art/ae_nabs2.png 8bpp 564 847 65 94 -31 -63 normal
  611 art/ae_nabs2.png 8bpp 644 847 64 91 -31 -60 normal
  612 art/ae_nabs3.png 8bpp 5 5 64 108 -31 -77 normal
  613 art/ae_nabs3.png 8bpp 84 5 65 94 -32 -63 normal
  614 art/ae_nabs3.png 8bpp 164 5 65 94 -32 -63 normal
  615 art/ae_nabs3.png 8bpp 244 5 64 91 -31 -60 normal
  616 art/ae_nabs3.png 8bpp 323 5 64 108 -30 -77 normal
  617 art/ae_nabs3.png 8bpp 402 5 66 94 -32 -63 normal
  618 art/ae_nabs3.png 8bpp 483 5 66 94 -32 -63 normal
  619 art/ae_nabs3.png 8bpp 564 5 65 91 -31 -60 normal
  620 art/ae_nabs3.png 8bpp 644 5 65 108 -31 -77 normal
  621 art/ae_nabs3.png 8bpp 5 118 65 94 -32 -63 normal
  622 art/ae_nabs3.png 8bpp 85 118 65 94 -32 -63 normal
  623 art/ae_nabs3.png 8bpp 165 118 64 91 -31 -60 normal
  624 art/ae_nabs3.png 8bpp 244 118 63 108 -31 -77 normal
  625 art/ae_nabs3.png 8bpp 322 118 66 94 -32 -63 normal
  626 art/ae_nabs3.png 8bpp 403 118 66 94 -32 -63 normal
  627 art/ae_nabs3.png 8bpp 484 118 65 91 -31 -60 normal
  628 art/ae_nabs3.png 8bpp 564 118 65 108 -31 -77 normal
  629 art/ae_nabs3.png 8bpp 644 118 65 94 -32 -63 normal
  630 art/ae_nabs3.png 8bpp 5 231 65 94 -32 -63 normal
  631 art/ae_nabs3.png 8bpp 85 231 64 91 -31 -60 normal
  632 art/ae_nabs3.png 8bpp 164 231 64 108 -30 -77 normal
//!!Error (63): Expected 7 more properties.
  633 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0D // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
  // Action 4 to set name:  
  634 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0D C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  635 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  636 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  637 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  638 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  639 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  640 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  641 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  642 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  643 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  644 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  645 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  646 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  647 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  648 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  649 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  650 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  651 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  652 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  653 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  654 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  655 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  656 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  657 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  658 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  659 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  660 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  661 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  662 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  663 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  664 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  665 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  666 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  667 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  668 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  669 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  670 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  671 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  672 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  673 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  674 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  675 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  676 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  677 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  678 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  679 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  680 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  681 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  682 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  683 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  684 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  685 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  686 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  687 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  688 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  689 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  690 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  691 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  692 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  693 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  694 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  695 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  696 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  697 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  698 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  699 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  700 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  701 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  702 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  703 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  704 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  705 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
  706 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  707 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  708 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  709 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
  710 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  711 * 7	 03 07 01 0D 00 A1 00
// ID 0E Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 587) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 587) has not been used.
  712 * 6	 01 07 2D FF 01 00
  713 art/ae_nabs3.png 8bpp 243 231 65 36 -31 -5 normal
  714 art/ae_nabs3.png 8bpp 323 231 64 82 -31 -51 normal
  715 art/ae_nabs3.png 8bpp 402 231 64 90 -31 -59 normal
  716 art/ae_nabs3.png 8bpp 481 231 64 90 -31 -59 normal
  717 art/ae_nabs3.png 8bpp 560 231 64 31 -31 0 normal
  718 art/ae_nabs3.png 8bpp 639 231 65 94 -32 -63 normal
  719 art/ae_nabs3.png 8bpp 719 231 65 94 -32 -63 normal
  720 art/ae_nabs3.png 8bpp 5 344 64 91 -31 -60 normal
  721 art/ae_nabs3.png 8bpp 84 344 64 109 -31 -78 normal
  722 art/ae_nabs3.png 8bpp 163 344 66 94 -32 -63 normal
  723 art/ae_nabs3.png 8bpp 244 344 66 94 -32 -63 normal
  724 art/ae_nabs3.png 8bpp 325 344 65 91 -31 -60 normal
  725 art/ae_nabs3.png 8bpp 405 344 65 108 -31 -77 normal
  726 art/ae_nabs3.png 8bpp 485 344 65 94 -32 -63 normal
  727 art/ae_nabs3.png 8bpp 565 344 64 94 -32 -63 normal
  728 art/ae_nabs3.png 8bpp 644 344 64 91 -31 -60 normal
  729 art/ae_nabs3.png 8bpp 5 458 64 108 -31 -78 normal
  730 art/ae_nabs3.png 8bpp 84 458 66 94 -32 -63 normal
  731 art/ae_nabs3.png 8bpp 165 458 66 94 -32 -63 normal
  732 art/ae_nabs3.png 8bpp 246 458 65 91 -31 -60 normal
  733 art/ae_nabs3.png 8bpp 326 458 64 108 -31 -77 normal
  734 art/ae_nabs3.png 8bpp 405 458 65 94 -32 -63 normal
  735 art/ae_nabs3.png 8bpp 485 458 65 94 -31 -63 normal
  736 art/ae_nabs3.png 8bpp 565 458 64 91 -31 -60 normal
  737 art/ae_nabs3.png 8bpp 644 458 64 108 -31 -77 normal
  738 art/ae_nabs3.png 8bpp 5 571 65 94 -32 -63 normal
  739 art/ae_nabs3.png 8bpp 85 571 65 94 -32 -63 normal
  740 art/ae_nabs3.png 8bpp 165 571 64 91 -31 -60 normal
  741 art/ae_nabs3.png 8bpp 244 571 64 108 -30 -77 normal
  742 art/ae_nabs3.png 8bpp 323 571 66 94 -32 -63 normal
  743 art/ae_nabs3.png 8bpp 404 571 66 94 -32 -63 normal
  744 art/ae_nabs3.png 8bpp 485 571 65 91 -31 -60 normal
  745 art/ae_nabs3.png 8bpp 565 571 65 108 -31 -77 normal
  746 art/ae_nabs3.png 8bpp 645 571 65 94 -32 -63 normal
  747 art/ae_nabs3.png 8bpp 5 684 65 94 -32 -63 normal
  748 art/ae_nabs3.png 8bpp 85 684 64 91 -31 -60 normal
  749 art/ae_nabs3.png 8bpp 164 684 63 108 -31 -77 normal
  750 art/ae_nabs3.png 8bpp 242 684 66 94 -32 -63 normal
  751 art/ae_nabs3.png 8bpp 323 684 66 94 -32 -63 normal
  752 art/ae_nabs3.png 8bpp 404 684 65 91 -31 -60 normal
  753 art/ae_nabs3.png 8bpp 484 684 65 108 -31 -77 normal
  754 art/ae_nabs3.png 8bpp 564 684 65 94 -32 -63 normal
  755 art/ae_nabs3.png 8bpp 644 684 65 94 -32 -63 normal
  756 art/ae_nabs3.png 8bpp 5 797 64 91 -31 -60 normal
  757 art/ae_nabs3.png 8bpp 84 797 64 108 -30 -77 normal
//!!Error (63): Expected 7 more properties.
  758 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0E // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
  // Action 4 to set name:  
  759 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0E C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  760 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  761 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  762 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  763 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  764 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  765 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  766 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  767 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  768 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  769 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  770 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  771 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  772 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  773 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  774 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  775 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  776 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  777 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  778 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  779 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  780 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  781 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  782 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  783 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  784 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  785 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  786 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  787 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  788 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  789 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  790 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  791 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  792 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  793 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  794 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  795 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  796 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  797 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  798 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  799 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  800 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  801 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  802 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  803 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  804 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  805 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  806 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  807 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  808 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  809 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  810 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  811 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  812 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  813 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  814 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  815 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  816 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  817 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  818 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  819 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  820 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  821 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  822 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  823 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  824 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  825 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  826 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  827 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  828 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  829 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  830 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
  831 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  832 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  833 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  834 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
  835 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  836 * 7	 03 07 01 0E 00 A1 00
// ID 0F Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 712) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 712) has not been used.
  837 * 6	 01 07 2D FF 01 00
  838 art/ae_nabs3.png 8bpp 163 797 64 31 -31 0 normal
  839 art/ae_nabs3.png 8bpp 242 797 64 90 -31 -58 normal
  840 art/ae_nabs3.png 8bpp 321 797 64 81 -31 -50 normal
  841 art/ae_nabs3.png 8bpp 400 797 64 82 -31 -51 normal
  842 art/ae_nabs3.png 8bpp 479 797 64 31 -31 0 normal
  843 art/ae_nabs3.png 8bpp 558 797 65 86 -32 -55 normal
  844 art/ae_nabs3.png 8bpp 638 797 65 86 -32 -55 normal
  845 art/ae_nabs3.png 8bpp 718 797 64 86 -31 -55 normal
  846 art/ae_nabs4.png 8bpp 5 5 64 99 -31 -68 normal
  847 art/ae_nabs4.png 8bpp 84 5 66 85 -32 -54 normal
  848 art/ae_nabs4.png 8bpp 165 5 66 85 -32 -54 normal
  849 art/ae_nabs4.png 8bpp 246 5 65 84 -31 -53 normal
  850 art/ae_nabs4.png 8bpp 326 5 65 98 -31 -68 normal
  851 art/ae_nabs4.png 8bpp 406 5 66 88 -32 -57 normal
  852 art/ae_nabs4.png 8bpp 487 5 66 88 -32 -57 normal
  853 art/ae_nabs4.png 8bpp 568 5 65 88 -31 -57 normal
  854 art/ae_nabs4.png 8bpp 648 5 65 99 -31 -68 normal
  855 art/ae_nabs4.png 8bpp 5 109 66 93 -32 -62 normal
  856 art/ae_nabs4.png 8bpp 86 109 65 93 -32 -62 normal
  857 art/ae_nabs4.png 8bpp 166 109 65 93 -31 -62 normal
  858 art/ae_nabs4.png 8bpp 246 109 65 99 -31 -68 normal
  859 art/ae_nabs4.png 8bpp 326 109 65 96 -32 -65 normal
  860 art/ae_nabs4.png 8bpp 406 109 65 96 -32 -65 normal
  861 art/ae_nabs4.png 8bpp 486 109 64 96 -31 -65 normal
  862 art/ae_nabs4.png 8bpp 565 109 64 99 -31 -68 normal
  863 art/ae_nabs4.png 8bpp 644 109 65 86 -32 -55 normal
  864 art/ae_nabs4.png 8bpp 5 213 65 86 -32 -55 normal
  865 art/ae_nabs4.png 8bpp 85 213 64 86 -31 -55 normal
  866 art/ae_nabs4.png 8bpp 164 213 64 99 -31 -68 normal
  867 art/ae_nabs4.png 8bpp 243 213 66 85 -32 -54 normal
  868 art/ae_nabs4.png 8bpp 324 213 66 85 -32 -54 normal
  869 art/ae_nabs4.png 8bpp 405 213 65 84 -31 -53 normal
  870 art/ae_nabs4.png 8bpp 485 213 65 99 -31 -68 normal
  871 art/ae_nabs4.png 8bpp 565 213 66 88 -32 -57 normal
  872 art/ae_nabs4.png 8bpp 646 213 66 88 -32 -57 normal
  873 art/ae_nabs4.png 8bpp 5 317 65 88 -31 -57 normal
  874 art/ae_nabs4.png 8bpp 85 317 65 99 -31 -68 normal
  875 art/ae_nabs4.png 8bpp 165 317 66 93 -32 -62 normal
  876 art/ae_nabs4.png 8bpp 246 317 66 93 -32 -62 normal
  877 art/ae_nabs4.png 8bpp 327 317 65 93 -31 -62 normal
  878 art/ae_nabs4.png 8bpp 407 317 65 99 -31 -68 normal
  879 art/ae_nabs4.png 8bpp 487 317 65 96 -32 -65 normal
  880 art/ae_nabs4.png 8bpp 567 317 65 96 -32 -65 normal
  881 art/ae_nabs4.png 8bpp 647 317 64 96 -31 -65 normal
  882 art/ae_nabs4.png 8bpp 5 421 64 99 -31 -68 normal
//!!Error (63): Expected 7 more properties.
  883 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0F // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
 // Action 4 to set name:  
  884 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0F C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
  885 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
  886 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
  887 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
  888 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
  889 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
  890 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
  891 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
  892 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
  893 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
  894 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
  895 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
  896 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
  897 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
  898 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
  899 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
  900 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
  901 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
  902 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
  903 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
  904 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
  905 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
  906 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
  907 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
  908 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
  909 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
  910 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
  911 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
  912 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
  913 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
  914 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
  915 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
  916 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
  917 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
  918 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
  919 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
  920 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
  921 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
  922 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
  923 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
  924 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
  925 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
  926 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
  927 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
  928 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
  929 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
  930 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
  931 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
  932 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
  933 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
  934 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
  935 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
  936 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
  937 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
  938 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
  939 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
  940 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
  941 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
  942 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
  943 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
  944 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
  945 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
  946 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
  947 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
  948 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
  949 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
  950 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
  951 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
  952 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
  953 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  954 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  955 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
  956 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
  957 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
  958 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
  959 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
  960 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  961 * 7	 03 07 01 0F 00 A1 00
// ID 10 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 837) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 837) has not been used.
  962 * 6	 01 07 2D FF 01 00
  963 art/ae_nabs4.png 8bpp 84 421 64 38 -31 -7 normal
  964 art/ae_nabs4.png 8bpp 163 421 64 73 -31 -42 normal
  965 art/ae_nabs4.png 8bpp 242 421 64 89 -31 -58 normal
  966 art/ae_nabs4.png 8bpp 321 421 64 89 -31 -58 normal
  967 art/ae_nabs4.png 8bpp 400 421 64 31 -31 0 normal
  968 art/ae_nabs4.png 8bpp 479 421 65 86 -32 -55 normal
  969 art/ae_nabs4.png 8bpp 559 421 65 86 -32 -55 normal
  970 art/ae_nabs4.png 8bpp 639 421 64 86 -31 -55 normal
  971 art/ae_nabs4.png 8bpp 718 421 64 99 -31 -68 normal
  972 art/ae_nabs4.png 8bpp 5 525 66 85 -32 -54 normal
  973 art/ae_nabs4.png 8bpp 86 525 66 85 -32 -54 normal
  974 art/ae_nabs4.png 8bpp 167 525 65 84 -31 -53 normal
  975 art/ae_nabs4.png 8bpp 247 525 65 98 -31 -68 normal
  976 art/ae_nabs4.png 8bpp 327 525 66 88 -32 -57 normal
  977 art/ae_nabs4.png 8bpp 408 525 66 88 -32 -57 normal
  978 art/ae_nabs4.png 8bpp 489 525 65 88 -31 -57 normal
  979 art/ae_nabs4.png 8bpp 569 525 65 99 -31 -68 normal
  980 art/ae_nabs4.png 8bpp 649 525 66 93 -32 -62 normal
  981 art/ae_nabs4.png 8bpp 5 629 65 93 -32 -62 normal
  982 art/ae_nabs4.png 8bpp 85 629 65 93 -31 -62 normal
  983 art/ae_nabs4.png 8bpp 165 629 65 99 -31 -68 normal
  984 art/ae_nabs4.png 8bpp 245 629 65 96 -32 -65 normal
  985 art/ae_nabs4.png 8bpp 325 629 65 96 -32 -65 normal
  986 art/ae_nabs4.png 8bpp 405 629 64 96 -31 -65 normal
  987 art/ae_nabs4.png 8bpp 484 629 64 99 -31 -68 normal
  988 art/ae_nabs4.png 8bpp 563 629 65 86 -32 -55 normal
  989 art/ae_nabs4.png 8bpp 643 629 65 86 -32 -55 normal
  990 art/ae_nabs4.png 8bpp 5 733 64 86 -31 -55 normal
  991 art/ae_nabs4.png 8bpp 84 733 64 99 -31 -68 normal
  992 art/ae_nabs4.png 8bpp 163 733 66 85 -32 -54 normal
  993 art/ae_nabs4.png 8bpp 244 733 66 85 -32 -54 normal
  994 art/ae_nabs4.png 8bpp 325 733 65 84 -31 -53 normal
  995 art/ae_nabs4.png 8bpp 405 733 65 99 -31 -68 normal
  996 art/ae_nabs4.png 8bpp 485 733 66 88 -32 -57 normal
  997 art/ae_nabs4.png 8bpp 566 733 66 88 -32 -57 normal
  998 art/ae_nabs4.png 8bpp 647 733 65 88 -31 -57 normal
  999 art/ae_nabs4.png 8bpp 5 837 65 99 -31 -68 normal
 1000 art/ae_nabs4.png 8bpp 85 837 66 93 -32 -62 normal
 1001 art/ae_nabs4.png 8bpp 166 837 66 93 -32 -62 normal
 1002 art/ae_nabs4.png 8bpp 247 837 65 93 -31 -62 normal
 1003 art/ae_nabs4.png 8bpp 327 837 65 99 -31 -68 normal
 1004 art/ae_nabs4.png 8bpp 407 837 65 96 -32 -65 normal
 1005 art/ae_nabs4.png 8bpp 487 837 65 96 -32 -65 normal
 1006 art/ae_nabs4.png 8bpp 567 837 64 96 -31 -65 normal
 1007 art/ae_nabs4.png 8bpp 646 837 64 99 -31 -68 normal
//!!Error (63): Expected 7 more properties.
 1008 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  10 // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
 // Action 4 to set name:  
 1009 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1010 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1011 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1012 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1013 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1014 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1015 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1016 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1017 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1018 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1019 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1020 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1021 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1022 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1023 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1024 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1025 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1026 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1027 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1028 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1029 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1030 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1031 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1032 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1033 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1034 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1035 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1036 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1037 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1038 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1039 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1040 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1041 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1042 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1043 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1044 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1045 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1046 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1047 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1048 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1049 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1050 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1051 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1052 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1053 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1054 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1055 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1056 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1057 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1058 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1059 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1060 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1061 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1062 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1063 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1064 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1065 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1066 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1067 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1068 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1069 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1070 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1071 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1072 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1073 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1074 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1075 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1076 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1077 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1078 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1079 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1080 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  10 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 1081 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1082 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1083 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1084 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 1085 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1086 * 7	 03 07 01 10 00 A1 00
// ID 11 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 962) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 962) has not been used.
 1087 * 6	 01 07 2D FF 01 00
 1088 art/ae_nabs4.png 8bpp 5 941 64 31 -31 0 normal
 1089 art/ae_nabs5.png 8bpp 5 5 64 82 -31 -51 normal
 1090 art/ae_nabs5.png 8bpp 84 5 64 91 -31 -60 normal
 1091 art/ae_nabs5.png 8bpp 163 5 64 91 -31 -60 normal
 1092 art/ae_nabs5.png 8bpp 242 5 65 31 -31 0 normal
 1093 art/ae_nabs5.png 8bpp 322 5 65 94 -31 -63 normal
 1094 art/ae_nabs5.png 8bpp 402 5 65 94 -31 -63 normal
 1095 art/ae_nabs5.png 8bpp 482 5 64 91 -31 -60 normal
 1096 art/ae_nabs5.png 8bpp 561 5 64 108 -31 -77 normal
 1097 art/ae_nabs5.png 8bpp 640 5 66 94 -32 -63 normal
 1098 art/ae_nabs5.png 8bpp 5 118 66 94 -32 -63 normal
 1099 art/ae_nabs5.png 8bpp 86 118 65 91 -32 -60 normal
 1100 art/ae_nabs5.png 8bpp 166 118 65 108 -32 -77 normal
 1101 art/ae_nabs5.png 8bpp 246 118 65 94 -31 -63 normal
 1102 art/ae_nabs5.png 8bpp 326 118 65 94 -31 -63 normal
 1103 art/ae_nabs5.png 8bpp 406 118 64 91 -31 -60 normal
 1104 art/ae_nabs5.png 8bpp 485 118 64 108 -31 -77 normal
 1105 art/ae_nabs5.png 8bpp 564 118 66 94 -32 -63 normal
 1106 art/ae_nabs5.png 8bpp 645 118 66 94 -32 -63 normal
 1107 art/ae_nabs5.png 8bpp 5 231 65 91 -32 -60 normal
 1108 art/ae_nabs5.png 8bpp 85 231 65 108 -32 -77 normal
 1109 art/ae_nabs5.png 8bpp 165 231 65 94 -31 -63 normal
 1110 art/ae_nabs5.png 8bpp 245 231 65 94 -31 -63 normal
 1111 art/ae_nabs5.png 8bpp 325 231 64 91 -31 -60 normal
 1112 art/ae_nabs5.png 8bpp 404 231 64 108 -31 -77 normal
 1113 art/ae_nabs5.png 8bpp 483 231 65 94 -31 -63 normal
 1114 art/ae_nabs5.png 8bpp 563 231 65 94 -31 -63 normal
 1115 art/ae_nabs5.png 8bpp 643 231 64 91 -31 -60 normal
 1116 art/ae_nabs5.png 8bpp 5 344 64 108 -31 -77 normal
 1117 art/ae_nabs5.png 8bpp 84 344 66 94 -32 -63 normal
 1118 art/ae_nabs5.png 8bpp 165 344 66 94 -32 -63 normal
 1119 art/ae_nabs5.png 8bpp 246 344 65 91 -32 -60 normal
 1120 art/ae_nabs5.png 8bpp 326 344 65 108 -32 -77 normal
 1121 art/ae_nabs5.png 8bpp 406 344 65 94 -31 -63 normal
 1122 art/ae_nabs5.png 8bpp 486 344 65 94 -31 -63 normal
 1123 art/ae_nabs5.png 8bpp 566 344 64 91 -31 -60 normal
 1124 art/ae_nabs5.png 8bpp 645 344 64 108 -31 -77 normal
 1125 art/ae_nabs5.png 8bpp 5 457 66 95 -32 -64 normal
 1126 art/ae_nabs5.png 8bpp 86 457 66 94 -32 -63 normal
 1127 art/ae_nabs5.png 8bpp 167 457 65 91 -32 -60 normal
 1128 art/ae_nabs5.png 8bpp 247 457 65 108 -32 -77 normal
 1129 art/ae_nabs5.png 8bpp 327 457 64 94 -31 -63 normal
 1130 art/ae_nabs5.png 8bpp 406 457 65 94 -31 -63 normal
 1131 art/ae_nabs5.png 8bpp 486 457 64 91 -31 -60 normal
 1132 art/ae_nabs5.png 8bpp 565 457 64 108 -31 -77 normal
//!!Error (63): Expected 7 more properties.
 1133 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  11 // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
 // Action 4 to set name:  
 1134 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1135 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1136 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1137 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1138 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1139 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1140 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1141 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1142 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1143 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1144 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1145 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1146 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1147 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1148 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1149 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1150 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1151 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1152 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1153 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1154 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1155 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1156 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1157 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1158 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1159 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1160 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1161 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1162 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1163 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1164 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1165 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1166 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1167 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1168 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1169 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1170 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1171 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1172 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1173 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1174 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1175 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1176 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1177 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1178 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1179 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1180 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1181 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1182 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1183 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1184 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1185 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1186 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1187 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1188 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1189 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1190 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1191 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1192 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1193 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1194 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1195 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1196 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1197 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1198 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1199 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1200 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1201 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1202 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1203 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1204 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1205 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  11 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 1206 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1207 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1208 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1209 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 1210 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1211 * 7	 03 07 01 11 00 A1 00
// ID 12 Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1087) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1087) has not been used.
 1212 * 6	 01 07 2D FF 01 00
 1213 art/ae_nabs5.png 8bpp 644 457 64 36 -31 -5 normal
 1214 art/ae_nabs5.png 8bpp 5 570 64 82 -31 -51 normal
 1215 art/ae_nabs5.png 8bpp 84 570 64 82 -31 -51 normal
 1216 art/ae_nabs5.png 8bpp 163 570 64 82 -31 -51 normal
 1217 art/ae_nabs5.png 8bpp 242 570 65 31 -31 0 normal
 1218 art/ae_nabs5.png 8bpp 322 570 65 94 -31 -63 normal
 1219 art/ae_nabs5.png 8bpp 402 570 65 94 -31 -63 normal
 1220 art/ae_nabs5.png 8bpp 482 570 64 91 -31 -60 normal
 1221 art/ae_nabs5.png 8bpp 561 570 64 108 -31 -77 normal
 1222 art/ae_nabs5.png 8bpp 640 570 66 94 -32 -63 normal
 1223 art/ae_nabs5.png 8bpp 5 683 66 94 -32 -63 normal
 1224 art/ae_nabs5.png 8bpp 86 683 65 91 -32 -60 normal
 1225 art/ae_nabs5.png 8bpp 166 683 65 108 -32 -77 normal
 1226 art/ae_nabs5.png 8bpp 246 683 65 94 -31 -63 normal
 1227 art/ae_nabs5.png 8bpp 326 683 65 94 -31 -63 normal
 1228 art/ae_nabs5.png 8bpp 406 683 64 91 -31 -60 normal
 1229 art/ae_nabs5.png 8bpp 485 683 64 108 -31 -77 normal
 1230 art/ae_nabs5.png 8bpp 564 683 66 94 -32 -63 normal
 1231 art/ae_nabs5.png 8bpp 645 683 66 94 -32 -63 normal
 1232 art/ae_nabs5.png 8bpp 5 796 65 91 -32 -60 normal
 1233 art/ae_nabs5.png 8bpp 85 796 65 108 -32 -77 normal
 1234 art/ae_nabs5.png 8bpp 165 796 65 94 -31 -63 normal
 1235 art/ae_nabs5.png 8bpp 245 796 65 94 -31 -63 normal
 1236 art/ae_nabs5.png 8bpp 325 796 64 91 -31 -60 normal
 1237 art/ae_nabs5.png 8bpp 404 796 64 108 -31 -77 normal
 1238 art/ae_nabs5.png 8bpp 483 796 65 94 -31 -63 normal
 1239 art/ae_nabs5.png 8bpp 563 796 65 94 -31 -63 normal
 1240 art/ae_nabs5.png 8bpp 643 796 64 91 -31 -60 normal
 1241 art/ae_nabs6.png 8bpp 5 5 64 108 -31 -77 normal
 1242 art/ae_nabs6.png 8bpp 84 5 66 94 -32 -63 normal
 1243 art/ae_nabs6.png 8bpp 165 5 66 94 -32 -63 normal
 1244 art/ae_nabs6.png 8bpp 246 5 65 91 -32 -60 normal
 1245 art/ae_nabs6.png 8bpp 326 5 65 108 -32 -77 normal
 1246 art/ae_nabs6.png 8bpp 406 5 65 94 -31 -63 normal
 1247 art/ae_nabs6.png 8bpp 486 5 65 94 -31 -63 normal
 1248 art/ae_nabs6.png 8bpp 566 5 64 91 -31 -60 normal
 1249 art/ae_nabs6.png 8bpp 645 5 64 108 -31 -77 normal
 1250 art/ae_nabs6.png 8bpp 5 118 66 95 -32 -64 normal
 1251 art/ae_nabs6.png 8bpp 86 118 66 94 -32 -63 normal
 1252 art/ae_nabs6.png 8bpp 167 118 65 91 -32 -60 normal
 1253 art/ae_nabs6.png 8bpp 247 118 65 108 -32 -77 normal
 1254 art/ae_nabs6.png 8bpp 327 118 64 94 -31 -63 normal
 1255 art/ae_nabs6.png 8bpp 406 118 65 94 -31 -63 normal
 1256 art/ae_nabs6.png 8bpp 486 118 64 91 -31 -60 normal
 1257 art/ae_nabs6.png 8bpp 565 118 64 108 -31 -77 normal
//!!Error (63): Expected 7 more properties.
 1258 * 29	 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  12 // ID number
  08 34 09 01
// 0A 00 1D 
  10 \w30000 11 9B 13 10 78 14 01 18 08 1D 04 21 \w1895 22 \w1949
 // Action 4 to set name:  
 1259 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1260 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1261 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1262 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1263 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1264 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1265 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1266 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1267 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1268 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1269 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1270 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1271 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1272 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1273 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1274 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1275 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1276 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1277 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1278 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1279 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1280 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1281 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1282 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1283 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1284 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1285 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1286 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1287 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1288 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1289 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1290 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1291 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1292 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1293 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1294 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1295 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1296 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1297 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1298 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1299 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1300 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1301 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1302 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1303 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1304 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1305 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1306 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1307 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1308 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1309 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1310 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1311 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1312 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1313 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1314 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1315 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1316 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1317 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1318 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1319 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1320 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1321 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1322 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1323 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1324 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1325 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1326 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1327 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1328 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1329 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1330 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  12 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 1331 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1332 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1333 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1334 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 1335 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1336 * 7	 03 07 01 12 00 A1 00
// ID 13 - 14 Large Deco Building (North and South)
// Large Deco Building (NW)
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1212) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1212) has not been used.
 1337 * 6	 01 07 06 FF 01 00
 1338 art/ae_nabs6.png 8bpp 644 118 64 31 -31 0 normal
 1339 art/ae_nabs6.png 8bpp 5 231 64 112 -31 -81 normal
 1340 art/ae_nabs6.png 8bpp 84 231 64 158 -31 -127 normal
 1341 art/ae_nabs6.png 8bpp 163 231 64 155 -31 -124 normal
 1342 art/ae_nabs6.png 8bpp 242 231 64 31 -31 0 normal
 1343 art/ae_nabs6.png 8bpp 321 231 64 155 -31 -124 normal
// Action 0
 1344 * 31	 00 07 0B 01 13 08 42 09 0A
// 0A 00 1D 
  10 \w60000 11 FF 13 10 78 14 01 18 20 19 02 1D 04 21 \w1895 22 \w1949
// Action 4 to set name:  
 1345 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  13 C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1346 * 17	 02 07 // Act 2 feat 7
   00 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   00 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1347 * 17	 02 07 // Act 2 feat 7
   01 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   01 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1348 * 17	 02 07 // Act 2 feat 7
   02 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   02 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1349 * 17	 02 07 // Act 2 feat 7
   03 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   03 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1350 * 17	 02 07 // Act 2 feat 7
   04 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   05 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
//!!Warning (100): Default ID appears earlier in sprite.
 1351 * 18	 02 07 // Act 2 feat 7
   10 // setid
   81 // town var
   43 // terrain type
   00 // shift
   FF // and mask
   02 // ranges to follow
   03 00 // setid to use for not snowy
   00 // minval
   03 // maxval
   04 00 // setid to use for snowy
   04 // minval for snow
   04 // maxval for snow
   03 00 // default setid to use
 1352 * 22	 02 07 // Act 2 feat 7
   11 // setid
   81 // town var
   40 // construction stage
   00 // shift
   03 // and mask (only get the contrustion stages not the rest of the bits
   03 // ranges to follow
   00 00 // set id to use
   00 // minval const stage 0
   00 // maxval const stage 0
   01 00 // set id to use
   01 // minval const stage 1
   01 // maxval const stage 1
   02 00 // setid to use
   02 // maxval const stage 2
   02 // maxval const stage 2
   10 00 // defualt setid to use - building finished
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1353 * 19	 02 07 // Act 2 feat 7
   14 // setid
   81 // town var
   61 // how many of a building id exist
   13 // the building id to check, ours!
   00 // shift
   FF // and mask
   02 // ranges to follow
   01 80 // setid to use (protec)
   00 // minval
   01 // maxval
   00 80 // setid to use (unprotec)
   02 // minval
   FF // maxval
   00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 1354 * 15	 02 07 // Act 2 feat 7
   15 // setid
   81 // town var
   61 // how many of a building id exist
   13 // the building id to check, ours!
   00 // shift
   FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   01 // minval
   FF // maxval
   01 80 // setid to use (allow building)
 1355 * 17	 02 07 // Act 2 feat 7
   16 // setid
   86 // another type of town var I forget which
   82 // how many people exist
   00 // shift
   FF FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   00 00 // minval
   B7 0B // maxval
   15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1356 * 23	 02 07 // act 2 feat 7
   1C // setid
   85 // type, variable of building
   0C // variable 0c current callback
   00 // shift
   FF FF // and mask
   02 // ranges to follow
   16 00 // setid
   17 00 // callback 17 on build
   17 00 // callback 17 on build
   14 00 // setid check how many are left
   43 01 // callback 143 on destruct
   43 01 // callback 143 on destruct
   11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1357 * 7	 03 07 01 13 00 1C 00
// Large Deco Building (SE)
// Action 1
 1358 * 6	 01 07 06 FF 01 00
 1359 art/ae_nabs6.png 8bpp 400 231 64 31 -31 0 normal
 1360 art/ae_nabs6.png 8bpp 479 231 64 115 -31 -84 normal
 1361 art/ae_nabs6.png 8bpp 558 231 64 171 -31 -140 normal
 1362 art/ae_nabs6.png 8bpp 637 231 64 165 -31 -134 normal
 1363 art/ae_nabs6.png 8bpp 716 231 64 31 -31 0 normal
 1364 art/ae_nabs6.png 8bpp 5 407 64 165 -31 -134 normal
// Action 0
 1365 * 16	 00 07 05 01 14 08 43 10 \w60000 11 FF 19 02 1D 04
// Action 4 to set name:  
 1366 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  14 C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1367 * 17	 02 07 // Act 2 feat 7
   00 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   00 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1368 * 17	 02 07 // Act 2 feat 7
   01 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   01 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1369 * 17	 02 07 // Act 2 feat 7
   02 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   02 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1370 * 17	 02 07 // Act 2 feat 7
   03 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   03 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
 1371 * 17	 02 07 // Act 2 feat 7
   04 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   05 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
//!!Warning (100): Default ID appears earlier in sprite.
 1372 * 18	 02 07 // Act 2 feat 7
   10 // setid
   81 // town var
   43 // terrain type
   00 // shift
   FF // and mask
   02 // ranges to follow
   03 00 // setid to use for not snowy
   00 // minval
   03 // maxval
   04 00 // setid to use for snowy
   04 // minval for snow
   04 // maxval for snow
   03 00 // default setid to use
 1373 * 22	 02 07 // Act 2 feat 7
   11 // setid
   81 // town var
   40 // construction stage
   00 // shift
   03 // and mask (only get the contrustion stages not the rest of the bits
   03 // ranges to follow
   00 00 // set id to use
   00 // minval const stage 0
   00 // maxval const stage 0
   01 00 // set id to use
   01 // minval const stage 1
   01 // maxval const stage 1
   02 00 // setid to use
   02 // maxval const stage 2
   02 // maxval const stage 2
   10 00 // defualt setid to use - building finished
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1374 * 19	 02 07 // Act 2 feat 7
   14 // setid
   81 // town var
   61 // how many of a building id exist
   14 // the building id to check, ours!
   00 // shift
   FF // and mask
   02 // ranges to follow
   01 80 // setid to use (protec)
   00 // minval
   01 // maxval
   00 80 // setid to use (unprotec)
   02 // minval
   FF // maxval
   00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 1375 * 15	 02 07 // Act 2 feat 7
   15 // setid
   81 // town var
   61 // how many of a building id exist
   14 // the building id to check, ours!
   00 // shift
   FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   01 // minval
   FF // maxval
   01 80 // setid to use (allow building)
 1376 * 17	 02 07 // Act 2 feat 7
   16 // setid
   86 // another type of town var I forget which
   82 // how many people exist
   00 // shift
   FF FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   00 00 // minval
   B7 0B // maxval
   15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1377 * 23	 02 07 // act 2 feat 7
   1C // setid
   85 // type, variable of building
   0C // variable 0c current callback
   00 // shift
   FF FF // and mask
   02 // ranges to follow
   16 00 // setid
   17 00 // callback 17 on build
   17 00 // callback 17 on build
   14 00 // setid check how many are left
   43 01 // callback 143 on destruct
   43 01 // callback 143 on destruct
   11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1378 * 7	 03 07 01 14 00 1C 00
// ID 15 Deco Buildings
// Deco Buildings
 1379 * 6	 01 07 06 FF 01 00
 1380 art/ae_nabs6.png 8bpp 84 407 64 31 -31 0 normal
 1381 art/ae_nabs6.png 8bpp 163 407 64 109 -31 -78 normal
 1382 art/ae_nabs6.png 8bpp 242 407 66 143 -32 -112 normal
 1383 art/ae_nabs6.png 8bpp 323 407 66 153 -32 -122 normal
 1384 art/ae_nabs6.png 8bpp 404 407 64 31 -31 0 normal
 1385 art/ae_nabs6.png 8bpp 483 407 66 153 -32 -122 normal
 1386 * 31	 00 07 0B 01 15 08 34 09 01
// 0A 00 1D 
  10 \w60000 11 FF 13 10 78 14 01 18 04 19 02 // Flat out protected.
  1D 04 21 \w1895 22 \w1949
 // Action 4 to set name:  
 1387 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 15 C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 1388 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1389 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1390 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1391 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1392 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1393 * 18	 02 07 1E 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1394 * 22	 02 07 1F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     1E 00
 1395 * 6	 01 07 06 FF 01 00
 1396 art/ae_nabs6.png 8bpp 564 407 64 38 -31 -7 normal
 1397 art/ae_nabs6.png 8bpp 643 407 64 113 -31 -82 normal
 1398 art/ae_nabs6.png 8bpp 5 577 64 161 -31 -130 normal
 1399 art/ae_nabs6.png 8bpp 84 577 66 165 -32 -134 normal
 1400 art/ae_nabs6.png 8bpp 165 577 66 31 -32 0 normal
 1401 art/ae_nabs6.png 8bpp 246 577 66 165 -32 -134 normal
 1402 * 17	 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1403 * 17	 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1404 * 17	 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1405 * 17	 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1406 * 17	 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1407 * 18	 02 07 20 81 43 00 FF 02
     08 00 00 03
     09 00 04 04
     03 00
 1408 * 22	 02 07 21 81 40 00 03 03
     05 00 00 00
     06 00 01 01
     07 00 02 02
     20 00
 1409 * 6	 01 07 06 FF 01 00
 1410 art/ae_nabs6.png 8bpp 327 577 64 38 -31 -7 normal
 1411 art/ae_nabs6.png 8bpp 406 577 64 104 -31 -73 normal
 1412 art/ae_nabs6.png 8bpp 485 577 64 146 -31 -115 normal
 1413 art/ae_nabs6.png 8bpp 564 577 65 156 -31 -125 normal
 1414 art/ae_nabs6.png 8bpp 644 577 65 31 -32 0 normal
 1415 art/ae_nabs6.png 8bpp 5 747 65 156 -31 -125 normal
 1416 * 17	 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1417 * 17	 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1418 * 17	 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1419 * 17	 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1420 * 17	 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1421 * 18	 02 07 22 81 43 00 FF 02
     0D 00 00 03
     0E 00 04 04
     03 00
 1422 * 22	 02 07 23 81 40 00 03 03
     0A 00 00 00
     0B 00 01 01
     0C 00 02 02
     22 00
 1423 * 6	 01 07 06 FF 01 00
 1424 art/ae_nabs6.png 8bpp 85 747 64 45 -31 -14 normal
 1425 art/ae_nabs6.png 8bpp 164 747 64 107 -31 -76 normal
 1426 art/ae_nabs6.png 8bpp 243 747 64 150 -31 -119 normal
 1427 art/ae_nabs6.png 8bpp 322 747 64 167 -31 -136 normal
 1428 art/ae_nabs6.png 8bpp 401 747 64 31 -31 0 normal
 1429 art/ae_nabs6.png 8bpp 480 747 64 167 -31 -136 normal
 1430 * 17	 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1431 * 17	 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1432 * 17	 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1433 * 17	 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1434 * 17	 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1435 * 18	 02 07 24 81 43 00 FF 02
     12 00 00 03
     13 00 04 04
     03 00
 1436 * 22	 02 07 25 81 40 00 03 03
     0F 00 00 00
     10 00 01 01
     11 00 02 02
     24 00
 1437 * 6	 01 07 06 FF 01 00
 1438 art/ae_nabs6.png 8bpp 559 747 64 35 -31 -4 normal
 1439 art/ae_nabs6.png 8bpp 638 747 64 114 -31 -83 normal
 1440 art/ae_nabs6.png 8bpp 717 747 64 146 -31 -115 normal
 1441 art/ae_nabs7.png 8bpp 5 5 64 159 -31 -128 normal
 1442 art/ae_nabs7.png 8bpp 84 5 64 31 -31 0 normal
 1443 art/ae_nabs7.png 8bpp 163 5 64 159 -31 -128 normal
 1444 * 17	 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1445 * 17	 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1446 * 17	 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1447 * 17	 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1448 * 17	 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1449 * 18	 02 07 26 81 43 00 FF 02
     17 00 00 03
     18 00 04 04
     03 00
 1450 * 22	 02 07 27 81 40 00 03 03
     14 00 00 00
     15 00 01 01
     16 00 02 02
     26 00
 1451 * 6	 01 07 06 FF 01 00
 1452 art/ae_nabs7.png 8bpp 242 5 64 33 -31 -2 normal
 1453 art/ae_nabs7.png 8bpp 321 5 64 103 -31 -72 normal
 1454 art/ae_nabs7.png 8bpp 400 5 64 138 -31 -107 normal
 1455 art/ae_nabs7.png 8bpp 479 5 64 151 -31 -120 normal
 1456 art/ae_nabs7.png 8bpp 558 5 64 31 -31 0 normal
 1457 art/ae_nabs7.png 8bpp 637 5 64 151 -31 -120 normal
 1458 * 17	 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1459 * 17	 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1460 * 17	 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1461 * 17	 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1462 * 17	 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1463 * 18	 02 07 28 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1464 * 22	 02 07 29 81 40 00 03 03
     19 00 00 00
     1A 00 01 01
     1B 00 02 02
     28 00
 // Pick random variation
 1465 * 23	 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1466 * 19	 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  15 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  05 // maxval
  00 80 // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1467 * 23	 02 07 2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 1468 * 23	 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  2A 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1469 * 7	 03 07 01 15 00 3C 00
// ID 16 small building 04
// Small Building 4 - More flats.
// Action 1:
 1470 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1471 art/smallbuilding04.png 8bpp 82 11 64 34 -31 -3 normal
 1472 art/smallbuilding04.png 8bpp 162 11 64 57 -31 -26 normal
 1473 art/smallbuilding04.png 8bpp 242 11 64 57 -31 -26 normal
 1474 art/smallbuilding04.png 8bpp 322 11 64 57 -31 -26 normal
 1475 art/smallbuilding04.png 8bpp 2 11 64 32 -31 -1 normal
 1476 art/smallbuilding04.png 8bpp 402 11 64 57 -31 -26 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
 1477 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  16 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
 1478 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  16 C9 // Offset
  "Small Building 04" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1479 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1480 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1481 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1482 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1483 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1484 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1485 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1486 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  16 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 17 small building 04
// Small Building 5 - More flats.
// Action 1:
 1487 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1488 art/smallbuilding05.png 8bpp 85 10 64 34 -31 -3 normal
 1489 art/smallbuilding05.png 8bpp 165 10 68 63 -31 -32 normal
 1490 art/smallbuilding05.png 8bpp 245 10 64 66 -31 -35 normal
 1491 art/smallbuilding05.png 8bpp 325 10 64 66 -31 -35 normal
 1492 art/smallbuilding05.png 8bpp 5 10 64 32 -31 -1 normal
 1493 art/smallbuilding05.png 8bpp 405 10 64 66 -31 -35 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
 1494 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  17 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
 1495 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  17 C9 // Offset
  "Small Building 05" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1496 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1497 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1498 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1499 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1500 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1501 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1502 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1503 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  17 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 18 small building 06
// Small Building 6 - More flats.
// Action 1:
 1504 * 6	 01 07 06 FF 01 00
// Real Sprites:
 1505 art/smallbuilding06.png 8bpp 92 20 64 34 -31 -3 normal
 1506 art/smallbuilding06.png 8bpp 167 20 64 57 -31 -28 normal
 1507 art/smallbuilding06.png 8bpp 247 20 64 59 -31 -28 normal
 1508 art/smallbuilding06.png 8bpp 327 20 64 59 -31 -28 normal
 1509 art/smallbuilding06.png 8bpp 12 20 64 31 -31 0 normal
 1510 art/smallbuilding06.png 8bpp 407 20 64 59 -31 -28 normal
// Action 0 to set properties:   
//!!Error (63): Expected 1 more properties.
 1511 * 22	 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  18 // ID
  08 46 // Substitute type
  09 01 // Building flags
// 0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 \w1895 22 \w1949
// Action 4 to set name:
 1512 * 24	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  18 C9 // Offset
  "Small Building 06" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
 1513 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1514 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
 1515 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
 1516 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
 1517 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
//!!Warning (100): Default ID appears earlier in sprite.
 1518 * 18	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 1519 * 22	 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 1520 * 7	 03 07 // Action 3, Feature 07
  01 // 1 id associated
  18 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 19 - 1A Flatiron (North and South)
// Flatiron (NW)
// Action 1
 1521 * 6	 01 07 06 FF 01 00
 1522 art/flatiron.png 8bpp 6 3 64 119 -31 -88 normal
 1523 art/flatiron.png 8bpp 144 3 64 119 -31 -88 normal
 1524 art/flatiron.png 8bpp 284 3 64 119 -31 -88 normal
 1525 art/flatiron.png 8bpp 425 3 64 119 -31 -88 normal
 1526 art/flatiron.png 8bpp 564 3 64 119 -31 -88 normal
 1527 art/flatiron.png 8bpp 702 3 64 119 -31 -88 normal
// Action 0
 1528 * 31	 00 07 0B 01 19 08 42 09 0A
// 0A 00 1D 
  10 \w60000 11 FF 13 10 78 14 01 18 20 19 02 // must protec
  1D 04 21 \w1895 22 \w1949
// Action 4 to set name:  
 1529 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  19 C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 1530 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1531 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1532 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1533 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1534 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1535 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1536 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1537 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 1538 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 1539 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1540 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1541 * 7	 03 07 01 19 00 1C 00
// Flatiron (SE)
// Action 1
 1542 * 6	 01 07 06 FF 01 00
 1543 art/flatiron.png 8bpp 76 3 64 119 -31 -88 normal
 1544 art/flatiron.png 8bpp 213 3 64 119 -31 -88 normal
 1545 art/flatiron.png 8bpp 354 3 64 119 -31 -88 normal
 1546 art/flatiron.png 8bpp 495 3 64 119 -31 -88 normal
 1547 art/flatiron.png 8bpp 633 3 64 119 -31 -88 normal
 1548 art/flatiron.png 8bpp 773 3 64 119 -31 -88 normal
// Action 0
 1549 * 16	 00 07 05 01 1A 08 43 10 \w60000 11 FF 19 02 // must protec
  1D 04
// Action 4 to set name:  
 1550 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1A C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 1551 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1552 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1553 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1554 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1555 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1556 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1557 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1558 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 1559 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 1560 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 1561 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1562 * 7	 03 07 01 1A 00 1C 00
// ID 1B - 1E Department Store (North, East, West and South)
// Department Store (N)
// Action 1
 1563 * 6	 01 07 06 FF 01 00
 1564 art/departmentstore.png 8bpp 5 7 64 35 -31 -4 normal
 1565 art/departmentstore.png 8bpp 85 7 64 84 -31 -53 normal
 1566 art/departmentstore.png 8bpp 165 7 64 76 -31 -45 normal
 1567 art/departmentstore.png 8bpp 245 7 64 79 -31 -48 normal
 1568 art/departmentstore.png 8bpp 319 7 64 31 -31 0 normal
 1569 art/departmentstore.png 8bpp 394 7 64 79 -31 -48 normal
// Action 0
 1570 * 31	 00 07 0B 01 1B 08 20 09 12
// 0A 00 1D
  10 \w60000 11 FF 13 10 78 14 01 18 04 19 02 1D 04 21 \w1895 22 \w1949
// Action 4 to set name:  
 1571 * 29	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1B C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1572 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1573 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1574 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1575 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1576 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1577 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1578 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1579 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1580 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 1581 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1582 * 7	 03 07 01 1B 00 1C 00
// Department Store (E)
// Action 1
 1583 * 6	 01 07 06 FF 01 00
 1584 art/departmentstore.png 8bpp 5 109 64 35 -31 -4 normal
 1585 art/departmentstore.png 8bpp 85 109 64 80 -31 -49 normal
 1586 art/departmentstore.png 8bpp 165 109 64 78 -31 -47 normal
 1587 art/departmentstore.png 8bpp 245 109 64 78 -31 -47 normal
 1588 art/departmentstore.png 8bpp 316 109 64 31 -31 0 normal
 1589 art/departmentstore.png 8bpp 394 109 64 78 -31 -47 normal
// Action 0
 1590 * 16	 00 07 05 01 1C 08 21 10 \w60000 11 FF 19 02 1D 04
// Action 4 to set name:  
 1591 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1C C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 1592 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1593 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1594 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1595 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1596 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1597 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1598 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1599 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1600 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 1601 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1602 * 7	 03 07 01 1C 00 1C 00
// Department Store (W)
// Action 1
 1603 * 6	 01 07 06 FF 01 00
 1604 art/departmentstore.png 8bpp 5 206 64 35 -31 -4 normal
 1605 art/departmentstore.png 8bpp 85 206 64 70 -31 -39 normal
 1606 art/departmentstore.png 8bpp 165 206 64 74 -31 -43 normal
 1607 art/departmentstore.png 8bpp 245 206 64 74 -31 -43 normal
 1608 art/departmentstore.png 8bpp 316 206 64 31 -31 0 normal
 1609 art/departmentstore.png 8bpp 394 206 64 74 -31 -43 normal
// Action 0
 1610 * 16	 00 07 05 01 1D 08 22 10 \w60000 11 FF 19 02 1D 04
// Action 4 to set name:  
 1611 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1D C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1612 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1613 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1614 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1615 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1616 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1617 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1618 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1619 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1620 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 1621 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1622 * 7	 03 07 01 1D 00 1C 00
// Department Store (S)
// Action 1
 1623 * 6	 01 07 06 FF 01 00
 1624 art/departmentstore.png 8bpp 5 308 64 31 -31 0 normal
 1625 art/departmentstore.png 8bpp 85 308 64 31 -31 0 normal
 1626 art/departmentstore.png 8bpp 163 308 64 31 -31 0 normal
 1627 art/departmentstore.png 8bpp 243 308 64 31 -31 0 normal
 1628 art/departmentstore.png 8bpp 316 308 64 31 -31 0 normal
 1629 art/departmentstore.png 8bpp 392 308 64 31 -31 0 normal
// Action 0
 1630 * 16	 00 07 05 01 1E 08 23 10 \w60000 11 FF 19 02 1D 04
// Action 4 to set name:  
 1631 * 29	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1E C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1632 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1633 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1634 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1635 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1636 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 1637 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 1638 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1639 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 1640 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 1641 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 1642 * 7	 03 07 01 1E 00 1C 00
// Special ones for scenario editor after 1950
// ID 1F - 20 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
 1643 * 6	 01 07 0C FF 01 00
// Real Sprites:   
 1644 art/ae_nabs1.png 8bpp 163 241 32 35 -31 -4 normal
 1645 art/ae_nabs1.png 8bpp 210 241 32 54 -31 -23 normal
 1646 art/ae_nabs1.png 8bpp 257 241 32 54 -31 -23 normal
 1647 art/ae_nabs1.png 8bpp 304 241 32 54 -31 -23 normal
 1648 art/ae_nabs1.png 8bpp 351 241 32 54 -31 -23 normal
 1649 art/ae_nabs1.png 8bpp 398 241 32 54 -31 -23 normal
 1650 art/ae_nabs1.png 8bpp 445 241 32 54 -31 -23 normal
 1651 art/ae_nabs1.png 8bpp 492 241 64 31 -31 0 normal
 1652 art/ae_nabs1.png 8bpp 571 241 64 54 -31 -23 normal
 1653 art/ae_nabs1.png 8bpp 650 241 64 54 -31 -23 normal
 1654 art/ae_nabs1.png 8bpp 5 300 64 54 -31 -23 normal
 1655 art/ae_nabs1.png 8bpp 84 300 64 54 -31 -23 normal
// Action 0 to set properties:  
//!!Warning (99): No more data was expected. Found 26 bytes, expected 24 bytes.
 1656 * 26	 00 07 // Action 0, Feature 07
                 08 // Properties to Change
                 01 // Change properties for how many ID's
                 1F // ID
                 08 42 // Substitute type
                  09 0A // Building flags
                  0A \b1950 \b2175 // Set years availible
                 10 \w20000 // Local Authority rating decrease
                  11 64 // Removal cost multiplier
                  13 0C 78 // Set availibilty mask
                  18 04 // Probability
                  19 03  1D 04 // Set prop 1D to 4
// Action 4 to set name:  
 1657 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1F C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
 1658 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1659 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1660 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1661 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1662 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1663 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1664 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
 1665 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1666 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1667 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1668 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1669 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1670 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1671 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
 1672 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1673 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1674 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1675 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1676 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
 1677 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1678 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
 1679 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1680 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1681 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1682 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1683 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
 1684 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
//!!Warning (94): Redefining ID 27 not used since previous definition at sprite 1450.
 1685 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
 1686 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
 1687 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
 1688 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
 1689 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
 1690 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1691 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
 1692 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
 1693 * 7	 03 07 01 1F 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
 1694 * 6	 01 07 0C FF 01 00
// Real Sprites:
 1695 art/ae_nabs1.png 8bpp 163 300 64 61 -31 -30 normal
 1696 art/ae_nabs1.png 8bpp 242 300 64 70 -31 -39 normal
 1697 art/ae_nabs1.png 8bpp 321 300 64 70 -31 -39 normal
 1698 art/ae_nabs1.png 8bpp 400 300 64 70 -31 -39 normal
 1699 art/ae_nabs1.png 8bpp 479 300 64 71 -31 -39 normal
 1700 art/ae_nabs1.png 8bpp 558 300 64 70 -31 -39 normal
 1701 art/ae_nabs1.png 8bpp 637 300 64 70 -31 -39 normal
 1702 art/ae_nabs1.png 8bpp 716 300 64 31 -31 0 normal
 1703 art/ae_nabs1.png 8bpp 5 376 64 54 -31 -23 normal
 1704 art/ae_nabs1.png 8bpp 84 376 64 54 -31 -23 normal
 1705 art/ae_nabs1.png 8bpp 163 376 64 54 -31 -23 normal
 1706 art/ae_nabs1.png 8bpp 242 376 64 54 -31 -23 normal
// Action 0 to set properties: 
 1707 * 16	 00 07 // Action 0, Feature 7
                 05 // Properties to change
                 01 // Change properties for how many ID's
                 20 // ID
                 08 43 // Substitute type
                 10 \w20000 // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
   19 03 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
 1708 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 20 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
 1709 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1710 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1711 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1712 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1713 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1714 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1715 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
 1716 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1717 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1718 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1719 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1720 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1721 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1722 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
 1723 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1724 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1725 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1726 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1727 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
 1728 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1729 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
 1730 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1731 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1732 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1733 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1734 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
 1735 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1736 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
 1737 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
 1738 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
 1739 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
 1740 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
 1741 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1742 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
 1743 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
 1744 * 7	 03 07 01 20 00 35 00
// Fin
// ID 21 - 22 Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
 1745 * 6	 01 07 0C FF 01 00
// Real Sprites:  
 1746 art/ae_nabs1.png 8bpp 321 376 32 47 1 -16 normal
 1747 art/ae_nabs1.png 8bpp 368 376 32 54 1 -23 normal
 1748 art/ae_nabs1.png 8bpp 415 376 32 54 1 -23 normal
 1749 art/ae_nabs1.png 8bpp 462 376 32 54 1 -23 normal
 1750 art/ae_nabs1.png 8bpp 509 376 32 54 1 -23 normal
 1751 art/ae_nabs1.png 8bpp 556 376 32 54 1 -23 normal
 1752 art/ae_nabs1.png 8bpp 603 376 32 54 1 -23 normal
 1753 art/ae_nabs1.png 8bpp 650 376 64 31 -31 0 normal
 1754 art/ae_nabs1.png 8bpp 5 435 64 54 -31 -23 normal
 1755 art/ae_nabs1.png 8bpp 84 435 64 54 -31 -23 normal
 1756 art/ae_nabs1.png 8bpp 163 435 64 54 -31 -23 normal
 1757 art/ae_nabs1.png 8bpp 242 435 64 54 -31 -23 normal
// Action 0 to set properties: 
//!!Warning (99): No more data was expected. Found 26 bytes, expected 24 bytes.
 1758 * 26	 00 07 // Action 0, Feature 07
                 08 // Properties to change
                 01 // Change properties for how many ID's
                 21 // ID
                 08 4A // Substitute type
                  09 06 // Building flags
                  0A \b1950 \b2175 // Set years availible
                 10 \w20000 // Local authority rating decrease
                  11 64 // Removal cost multiplier
                  13 0C 78 // Set availibility mask
                  18 04 // Probability
                  19 03  1D 04 // Set prop 1D to 4
// Action 4 to set name:  
 1759 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 21 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
 1760 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1761 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1762 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1763 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1764 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1765 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1766 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
 1767 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1768 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1769 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1770 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1771 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1772 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1773 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
 1774 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1775 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1776 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1777 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1778 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
 1779 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1780 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
 1781 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1782 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1783 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1784 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1785 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
 1786 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1787 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
 1788 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
 1789 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
 1790 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
 1791 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
 1792 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1793 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
 1794 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
 1795 * 7	 03 07 01 21 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
 1796 * 6	 01 07 0C FF 01 00
// Real Sprites:      
 1797 art/ae_nabs1.png 8bpp 321 435 64 63 -31 -32 normal
 1798 art/ae_nabs1.png 8bpp 400 435 64 70 -31 -39 normal
 1799 art/ae_nabs1.png 8bpp 479 435 64 70 -31 -39 normal
 1800 art/ae_nabs1.png 8bpp 558 435 64 70 -31 -39 normal
 1801 art/ae_nabs1.png 8bpp 637 435 64 70 -31 -39 normal
 1802 art/ae_nabs1.png 8bpp 716 435 64 70 -31 -39 normal
 1803 art/ae_nabs1.png 8bpp 5 510 64 70 -31 -39 normal
 1804 art/ae_nabs1.png 8bpp 84 510 64 31 -31 0 normal
 1805 art/ae_nabs1.png 8bpp 163 510 64 54 -31 -23 normal
 1806 art/ae_nabs1.png 8bpp 242 510 64 54 -31 -23 normal
 1807 art/ae_nabs1.png 8bpp 321 510 64 54 -31 -23 normal
 1808 art/ae_nabs1.png 8bpp 400 510 64 54 -31 -23 normal
// Action 0 to set properties:    
 1809 * 16	 00 07 05 01 22 08 4B 10 \w20000 11 64 19 03 1D 04
// Action 4 to set name:  
 1810 * 18	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 22 C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
 1811 * 17	 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1812 * 17	 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1813 * 17	 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1814 * 17	 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1815 * 17	 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1816 * 18	 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1817 * 22	 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
 1818 * 17	 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1819 * 17	 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1820 * 17	 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1821 * 17	 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1822 * 17	 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
//!!Warning (100): Default ID appears earlier in sprite.
 1823 * 18	 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1824 * 22	 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
 1825 * 17	 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
 1826 * 17	 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1827 * 17	 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1828 * 17	 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1829 * 17	 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
 1830 * 18	 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
 1831 * 22	 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
 1832 * 17	 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
 1833 * 17	 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
 1834 * 17	 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
 1835 * 17	 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
 1836 * 17	 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
 1837 * 18	 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
 1838 * 22	 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
 1839 * 15	 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
//!!Warning (170): Default result cannot be reached.
 1840 * 23	 02 07 29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
 1841 * 15	 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
 1842 * 11	 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
 1843 * 15	 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1844 * 30	 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
 1845 * 23	 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
 1846 * 7	 03 07 01 22 00 35 00
// Fin  
// ID 23 Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
 1847 * 6	 01 07 2D FF 01 00
 1848 art/ae_nabs1.png 8bpp 479 510 65 31 -32 0 normal
 1849 art/ae_nabs1.png 8bpp 559 510 64 89 -31 -58 normal
 1850 art/ae_nabs1.png 8bpp 638 510 64 86 -31 -55 normal
 1851 art/ae_nabs1.png 8bpp 717 510 64 86 -31 -55 normal
 1852 art/ae_nabs1.png 8bpp 5 604 64 31 -31 0 normal
 1853 art/ae_nabs1.png 8bpp 84 604 65 86 -31 -55 normal
 1854 art/ae_nabs1.png 8bpp 164 604 65 86 -31 -55 normal
 1855 art/ae_nabs1.png 8bpp 244 604 64 86 -31 -55 normal
 1856 art/ae_nabs1.png 8bpp 323 604 64 99 -31 -68 normal
 1857 art/ae_nabs1.png 8bpp 402 604 66 85 -32 -54 normal
 1858 art/ae_nabs1.png 8bpp 483 604 66 85 -32 -54 normal
 1859 art/ae_nabs1.png 8bpp 564 604 65 90 -32 -59 normal
 1860 art/ae_nabs1.png 8bpp 644 604 65 99 -32 -68 normal
 1861 art/ae_nabs1.png 8bpp 5 708 66 88 -32 -57 normal
 1862 art/ae_nabs1.png 8bpp 86 708 66 90 -32 -59 normal
 1863 art/ae_nabs1.png 8bpp 167 708 65 88 -32 -57 normal
 1864 art/ae_nabs1.png 8bpp 247 708 65 99 -32 -68 normal
 1865 art/ae_nabs1.png 8bpp 327 708 66 93 -32 -62 normal
 1866 art/ae_nabs1.png 8bpp 408 708 66 93 -32 -62 normal
 1867 art/ae_nabs1.png 8bpp 489 708 65 93 -32 -62 normal
 1868 art/ae_nabs1.png 8bpp 569 708 65 99 -32 -68 normal
 1869 art/ae_nabs1.png 8bpp 649 708 65 95 -31 -65 normal
 1870 art/ae_nabs1.png 8bpp 5 812 66 96 -32 -65 normal
 1871 art/ae_nabs1.png 8bpp 86 812 64 96 -31 -65 normal
 1872 art/ae_nabs1.png 8bpp 165 812 64 99 -31 -68 normal
 1873 art/ae_nabs1.png 8bpp 244 812 65 86 -31 -55 normal
 1874 art/ae_nabs1.png 8bpp 324 812 65 86 -31 -55 normal
 1875 art/ae_nabs1.png 8bpp 404 812 64 86 -31 -55 normal
 1876 art/ae_nabs1.png 8bpp 483 812 64 99 -31 -68 normal
 1877 art/ae_nabs1.png 8bpp 562 812 66 85 -32 -54 normal
 1878 art/ae_nabs1.png 8bpp 643 812 66 85 -32 -54 normal
 1879 art/ae_nabs2.png 8bpp 5 5 65 84 -32 -53 normal
 1880 art/ae_nabs2.png 8bpp 85 5 65 99 -32 -68 normal
 1881 art/ae_nabs2.png 8bpp 165 5 66 88 -32 -57 normal
 1882 art/ae_nabs2.png 8bpp 246 5 66 88 -32 -57 normal
 1883 art/ae_nabs2.png 8bpp 327 5 65 88 -32 -57 normal
 1884 art/ae_nabs2.png 8bpp 407 5 65 99 -32 -68 normal
 1885 art/ae_nabs2.png 8bpp 487 5 66 93 -32 -62 normal
 1886 art/ae_nabs2.png 8bpp 568 5 67 92 -33 -61 normal
 1887 art/ae_nabs2.png 8bpp 650 5 65 93 -32 -62 normal
 1888 art/ae_nabs2.png 8bpp 5 109 65 99 -32 -68 normal
 1889 art/ae_nabs2.png 8bpp 85 109 65 95 -31 -64 normal
 1890 art/ae_nabs2.png 8bpp 165 109 65 95 -31 -64 normal
 1891 art/ae_nabs2.png 8bpp 245 109 64 95 -31 -64 normal
 1892 art/ae_nabs2.png 8bpp 324 109 64 99 -31 -68 normal
 1893 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  23 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
// Action 4 to set name:  

 1894 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         23 C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 1895 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 1896 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 1897 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 1898 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 1899 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 1900 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 1901 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 1902 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 1903 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 1904 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 1905 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 1906 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 1907 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 1908 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 1909 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 1910 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 1911 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 1912 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 1913 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 1914 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 1915 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 1916 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 1917 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 1918 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 1919 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 1920 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 1921 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 1922 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 1923 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 1924 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 1925 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 1926 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 1927 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 1928 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 1929 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 1930 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 1931 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 1932 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 1933 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 1934 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 1935 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 1936 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 1937 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 1938 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 1939 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 1940 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 1941 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 1942 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 1943 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 1944 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 1945 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 1946 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 1947 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 1948 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 1949 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 1950 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 1951 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 1952 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 1953 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 1954 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 1955 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 1956 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 1957 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 1958 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 1959 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 1960 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 1961 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 1962 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 1963 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1964 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1965 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  23 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 1966 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 1967 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 1968 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 1969 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 1970 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1971 * 7	 03 07 01 23 00 A1 00
// ID 24 Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1847) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1847) has not been used.
 1972 * 6	 01 07 2D FF 01 00
 1973 art/ae_nabs2.png 8bpp 403 109 63 38 -31 -7 normal
 1974 art/ae_nabs2.png 8bpp 481 109 64 81 -31 -50 normal
 1975 art/ae_nabs2.png 8bpp 560 109 64 89 -31 -58 normal
 1976 art/ae_nabs2.png 8bpp 639 109 64 89 -31 -58 normal
 1977 art/ae_nabs2.png 8bpp 718 109 64 31 -31 0 normal
 1978 art/ae_nabs2.png 8bpp 5 213 65 86 -31 -55 normal
 1979 art/ae_nabs2.png 8bpp 85 213 65 86 -31 -55 normal
 1980 art/ae_nabs2.png 8bpp 165 213 64 86 -31 -55 normal
 1981 art/ae_nabs2.png 8bpp 244 213 64 99 -31 -68 normal
 1982 art/ae_nabs2.png 8bpp 323 213 66 85 -32 -54 normal
 1983 art/ae_nabs2.png 8bpp 404 213 66 85 -32 -54 normal
 1984 art/ae_nabs2.png 8bpp 485 213 65 90 -32 -59 normal
 1985 art/ae_nabs2.png 8bpp 565 213 65 99 -32 -68 normal
 1986 art/ae_nabs2.png 8bpp 645 213 66 88 -32 -57 normal
 1987 art/ae_nabs2.png 8bpp 5 317 66 90 -32 -59 normal
 1988 art/ae_nabs2.png 8bpp 86 317 65 88 -32 -57 normal
 1989 art/ae_nabs2.png 8bpp 166 317 65 99 -32 -68 normal
 1990 art/ae_nabs2.png 8bpp 246 317 66 93 -32 -62 normal
 1991 art/ae_nabs2.png 8bpp 327 317 66 93 -32 -62 normal
 1992 art/ae_nabs2.png 8bpp 408 317 65 93 -32 -62 normal
 1993 art/ae_nabs2.png 8bpp 488 317 65 99 -32 -68 normal
 1994 art/ae_nabs2.png 8bpp 568 317 65 95 -31 -65 normal
 1995 art/ae_nabs2.png 8bpp 648 317 66 96 -32 -65 normal
 1996 art/ae_nabs2.png 8bpp 5 421 64 96 -31 -65 normal
 1997 art/ae_nabs2.png 8bpp 84 421 64 99 -31 -68 normal
 1998 art/ae_nabs2.png 8bpp 163 421 65 86 -31 -55 normal
 1999 art/ae_nabs2.png 8bpp 243 421 65 86 -31 -55 normal
 2000 art/ae_nabs2.png 8bpp 323 421 64 86 -31 -55 normal
 2001 art/ae_nabs2.png 8bpp 402 421 64 99 -31 -68 normal
 2002 art/ae_nabs2.png 8bpp 481 421 66 85 -32 -54 normal
 2003 art/ae_nabs2.png 8bpp 562 421 66 85 -32 -54 normal
 2004 art/ae_nabs2.png 8bpp 643 421 65 84 -32 -53 normal
 2005 art/ae_nabs2.png 8bpp 5 525 65 99 -32 -68 normal
 2006 art/ae_nabs2.png 8bpp 85 525 66 88 -32 -57 normal
 2007 art/ae_nabs2.png 8bpp 166 525 66 88 -32 -57 normal
 2008 art/ae_nabs2.png 8bpp 247 525 65 88 -32 -57 normal
 2009 art/ae_nabs2.png 8bpp 327 525 65 99 -32 -68 normal
 2010 art/ae_nabs2.png 8bpp 407 525 66 93 -32 -62 normal
 2011 art/ae_nabs2.png 8bpp 488 525 67 92 -33 -61 normal
 2012 art/ae_nabs2.png 8bpp 570 525 65 93 -32 -62 normal
 2013 art/ae_nabs2.png 8bpp 650 525 65 99 -32 -68 normal
 2014 art/ae_nabs2.png 8bpp 5 629 65 95 -31 -64 normal
 2015 art/ae_nabs2.png 8bpp 85 629 65 95 -31 -64 normal
 2016 art/ae_nabs2.png 8bpp 165 629 64 95 -31 -64 normal
 2017 art/ae_nabs2.png 8bpp 244 629 64 99 -31 -68 normal
 2018 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  24 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
  // Action 4 to set name:  

 2019 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             24 C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2020 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2021 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2022 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2023 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2024 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2025 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2026 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2027 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2028 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2029 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2030 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2031 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2032 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2033 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2034 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2035 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2036 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2037 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2038 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2039 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2040 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2041 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2042 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2043 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2044 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2045 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2046 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2047 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2048 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2049 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2050 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2051 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2052 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2053 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2054 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2055 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2056 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2057 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2058 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2059 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2060 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2061 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2062 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2063 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2064 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2065 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2066 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2067 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2068 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2069 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2070 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2071 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2072 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2073 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2074 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2075 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2076 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2077 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2078 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2079 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2080 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2081 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2082 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2083 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2084 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2085 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2086 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2087 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2088 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2089 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2090 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  24 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2091 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2092 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2093 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2094 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2095 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2096 * 7	 03 07 01 24 00 A1 00
// ID 25 Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 1972) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 1972) has not been used.
 2097 * 6	 01 07 2D FF 01 00
 2098 art/ae_nabs2.png 8bpp 323 629 64 31 -31 0 normal
 2099 art/ae_nabs2.png 8bpp 402 629 64 90 -31 -59 normal
 2100 art/ae_nabs2.png 8bpp 481 629 64 91 -31 -60 normal
 2101 art/ae_nabs2.png 8bpp 560 629 64 91 -31 -60 normal
 2102 art/ae_nabs2.png 8bpp 639 629 64 31 -31 0 normal
 2103 art/ae_nabs2.png 8bpp 718 629 65 94 -32 -63 normal
 2104 art/ae_nabs2.png 8bpp 5 733 65 94 -32 -63 normal
 2105 art/ae_nabs2.png 8bpp 85 733 64 91 -31 -60 normal
 2106 art/ae_nabs2.png 8bpp 164 733 64 109 -31 -78 normal
 2107 art/ae_nabs2.png 8bpp 243 733 66 94 -32 -63 normal
 2108 art/ae_nabs2.png 8bpp 324 733 66 94 -32 -63 normal
 2109 art/ae_nabs2.png 8bpp 405 733 65 91 -31 -60 normal
 2110 art/ae_nabs2.png 8bpp 485 733 65 108 -31 -77 normal
 2111 art/ae_nabs2.png 8bpp 565 733 65 94 -32 -63 normal
 2112 art/ae_nabs2.png 8bpp 645 733 64 94 -32 -63 normal
 2113 art/ae_nabs2.png 8bpp 5 847 64 91 -31 -60 normal
 2114 art/ae_nabs2.png 8bpp 84 847 64 108 -31 -78 normal
 2115 art/ae_nabs2.png 8bpp 163 847 66 94 -32 -63 normal
 2116 art/ae_nabs2.png 8bpp 244 847 66 94 -32 -63 normal
 2117 art/ae_nabs2.png 8bpp 325 847 65 91 -31 -60 normal
 2118 art/ae_nabs2.png 8bpp 405 847 64 108 -31 -77 normal
 2119 art/ae_nabs2.png 8bpp 484 847 65 94 -32 -63 normal
 2120 art/ae_nabs2.png 8bpp 564 847 65 94 -31 -63 normal
 2121 art/ae_nabs2.png 8bpp 644 847 64 91 -31 -60 normal
 2122 art/ae_nabs3.png 8bpp 5 5 64 108 -31 -77 normal
 2123 art/ae_nabs3.png 8bpp 84 5 65 94 -32 -63 normal
 2124 art/ae_nabs3.png 8bpp 164 5 65 94 -32 -63 normal
 2125 art/ae_nabs3.png 8bpp 244 5 64 91 -31 -60 normal
 2126 art/ae_nabs3.png 8bpp 323 5 64 108 -30 -77 normal
 2127 art/ae_nabs3.png 8bpp 402 5 66 94 -32 -63 normal
 2128 art/ae_nabs3.png 8bpp 483 5 66 94 -32 -63 normal
 2129 art/ae_nabs3.png 8bpp 564 5 65 91 -31 -60 normal
 2130 art/ae_nabs3.png 8bpp 644 5 65 108 -31 -77 normal
 2131 art/ae_nabs3.png 8bpp 5 118 65 94 -32 -63 normal
 2132 art/ae_nabs3.png 8bpp 85 118 65 94 -32 -63 normal
 2133 art/ae_nabs3.png 8bpp 165 118 64 91 -31 -60 normal
 2134 art/ae_nabs3.png 8bpp 244 118 63 108 -31 -77 normal
 2135 art/ae_nabs3.png 8bpp 322 118 66 94 -32 -63 normal
 2136 art/ae_nabs3.png 8bpp 403 118 66 94 -32 -63 normal
 2137 art/ae_nabs3.png 8bpp 484 118 65 91 -31 -60 normal
 2138 art/ae_nabs3.png 8bpp 564 118 65 108 -31 -77 normal
 2139 art/ae_nabs3.png 8bpp 644 118 65 94 -32 -63 normal
 2140 art/ae_nabs3.png 8bpp 5 231 65 94 -32 -63 normal
 2141 art/ae_nabs3.png 8bpp 85 231 64 91 -31 -60 normal
 2142 art/ae_nabs3.png 8bpp 164 231 64 108 -30 -77 normal
 2143 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  25 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
  // Action 4 to set name:  

 2144 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             25 C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2145 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2146 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2147 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2148 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2149 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2150 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2151 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2152 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2153 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2154 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2155 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2156 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2157 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2158 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2159 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2160 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2161 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2162 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2163 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2164 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2165 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2166 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2167 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2168 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2169 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2170 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2171 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2172 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2173 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2174 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2175 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2176 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2177 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2178 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2179 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2180 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2181 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2182 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2183 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2184 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2185 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2186 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2187 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2188 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2189 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2190 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2191 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2192 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2193 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2194 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2195 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2196 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2197 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2198 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2199 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2200 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2201 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2202 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2203 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2204 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2205 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2206 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2207 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2208 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2209 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2210 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2211 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2212 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2213 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2214 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2215 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  25 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2216 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2217 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2218 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2219 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2220 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2221 * 7	 03 07 01 25 00 A1 00
// ID 26 Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2097) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2097) has not been used.
 2222 * 6	 01 07 2D FF 01 00
 2223 art/ae_nabs3.png 8bpp 243 231 65 36 -31 -5 normal
 2224 art/ae_nabs3.png 8bpp 323 231 64 82 -31 -51 normal
 2225 art/ae_nabs3.png 8bpp 402 231 64 90 -31 -59 normal
 2226 art/ae_nabs3.png 8bpp 481 231 64 90 -31 -59 normal
 2227 art/ae_nabs3.png 8bpp 560 231 64 31 -31 0 normal
 2228 art/ae_nabs3.png 8bpp 639 231 65 94 -32 -63 normal
 2229 art/ae_nabs3.png 8bpp 719 231 65 94 -32 -63 normal
 2230 art/ae_nabs3.png 8bpp 5 344 64 91 -31 -60 normal
 2231 art/ae_nabs3.png 8bpp 84 344 64 109 -31 -78 normal
 2232 art/ae_nabs3.png 8bpp 163 344 66 94 -32 -63 normal
 2233 art/ae_nabs3.png 8bpp 244 344 66 94 -32 -63 normal
 2234 art/ae_nabs3.png 8bpp 325 344 65 91 -31 -60 normal
 2235 art/ae_nabs3.png 8bpp 405 344 65 108 -31 -77 normal
 2236 art/ae_nabs3.png 8bpp 485 344 65 94 -32 -63 normal
 2237 art/ae_nabs3.png 8bpp 565 344 64 94 -32 -63 normal
 2238 art/ae_nabs3.png 8bpp 644 344 64 91 -31 -60 normal
 2239 art/ae_nabs3.png 8bpp 5 458 64 108 -31 -78 normal
 2240 art/ae_nabs3.png 8bpp 84 458 66 94 -32 -63 normal
 2241 art/ae_nabs3.png 8bpp 165 458 66 94 -32 -63 normal
 2242 art/ae_nabs3.png 8bpp 246 458 65 91 -31 -60 normal
 2243 art/ae_nabs3.png 8bpp 326 458 64 108 -31 -77 normal
 2244 art/ae_nabs3.png 8bpp 405 458 65 94 -32 -63 normal
 2245 art/ae_nabs3.png 8bpp 485 458 65 94 -31 -63 normal
 2246 art/ae_nabs3.png 8bpp 565 458 64 91 -31 -60 normal
 2247 art/ae_nabs3.png 8bpp 644 458 64 108 -31 -77 normal
 2248 art/ae_nabs3.png 8bpp 5 571 65 94 -32 -63 normal
 2249 art/ae_nabs3.png 8bpp 85 571 65 94 -32 -63 normal
 2250 art/ae_nabs3.png 8bpp 165 571 64 91 -31 -60 normal
 2251 art/ae_nabs3.png 8bpp 244 571 64 108 -30 -77 normal
 2252 art/ae_nabs3.png 8bpp 323 571 66 94 -32 -63 normal
 2253 art/ae_nabs3.png 8bpp 404 571 66 94 -32 -63 normal
 2254 art/ae_nabs3.png 8bpp 485 571 65 91 -31 -60 normal
 2255 art/ae_nabs3.png 8bpp 565 571 65 108 -31 -77 normal
 2256 art/ae_nabs3.png 8bpp 645 571 65 94 -32 -63 normal
 2257 art/ae_nabs3.png 8bpp 5 684 65 94 -32 -63 normal
 2258 art/ae_nabs3.png 8bpp 85 684 64 91 -31 -60 normal
 2259 art/ae_nabs3.png 8bpp 164 684 63 108 -31 -77 normal
 2260 art/ae_nabs3.png 8bpp 242 684 66 94 -32 -63 normal
 2261 art/ae_nabs3.png 8bpp 323 684 66 94 -32 -63 normal
 2262 art/ae_nabs3.png 8bpp 404 684 65 91 -31 -60 normal
 2263 art/ae_nabs3.png 8bpp 484 684 65 108 -31 -77 normal
 2264 art/ae_nabs3.png 8bpp 564 684 65 94 -32 -63 normal
 2265 art/ae_nabs3.png 8bpp 644 684 65 94 -32 -63 normal
 2266 art/ae_nabs3.png 8bpp 5 797 64 91 -31 -60 normal
 2267 art/ae_nabs3.png 8bpp 84 797 64 108 -30 -77 normal
 2268 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  26 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
  // Action 4 to set name:  

 2269 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             26 C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2270 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2271 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2272 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2273 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2274 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2275 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2276 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2277 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2278 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2279 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2280 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2281 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2282 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2283 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2284 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2285 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2286 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2287 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2288 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2289 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2290 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2291 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2292 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2293 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2294 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2295 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2296 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2297 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2298 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2299 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2300 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2301 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2302 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2303 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2304 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2305 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2306 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2307 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2308 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2309 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2310 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2311 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2312 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2313 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2314 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2315 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2316 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2317 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2318 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2319 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2320 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2321 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2322 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2323 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2324 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2325 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2326 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2327 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2328 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2329 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2330 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2331 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2332 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2333 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2334 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2335 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2336 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2337 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2338 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2339 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2340 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  26 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2341 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2342 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2343 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2344 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2345 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2346 * 7	 03 07 01 26 00 A1 00
// ID 27 Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2222) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2222) has not been used.
 2347 * 6	 01 07 2D FF 01 00
 2348 art/ae_nabs3.png 8bpp 163 797 64 31 -31 0 normal
 2349 art/ae_nabs3.png 8bpp 242 797 64 90 -31 -58 normal
 2350 art/ae_nabs3.png 8bpp 321 797 64 81 -31 -50 normal
 2351 art/ae_nabs3.png 8bpp 400 797 64 82 -31 -51 normal
 2352 art/ae_nabs3.png 8bpp 479 797 64 31 -31 0 normal
 2353 art/ae_nabs3.png 8bpp 558 797 65 86 -32 -55 normal
 2354 art/ae_nabs3.png 8bpp 638 797 65 86 -32 -55 normal
 2355 art/ae_nabs3.png 8bpp 718 797 64 86 -31 -55 normal
 2356 art/ae_nabs4.png 8bpp 5 5 64 99 -31 -68 normal
 2357 art/ae_nabs4.png 8bpp 84 5 66 85 -32 -54 normal
 2358 art/ae_nabs4.png 8bpp 165 5 66 85 -32 -54 normal
 2359 art/ae_nabs4.png 8bpp 246 5 65 84 -31 -53 normal
 2360 art/ae_nabs4.png 8bpp 326 5 65 98 -31 -68 normal
 2361 art/ae_nabs4.png 8bpp 406 5 66 88 -32 -57 normal
 2362 art/ae_nabs4.png 8bpp 487 5 66 88 -32 -57 normal
 2363 art/ae_nabs4.png 8bpp 568 5 65 88 -31 -57 normal
 2364 art/ae_nabs4.png 8bpp 648 5 65 99 -31 -68 normal
 2365 art/ae_nabs4.png 8bpp 5 109 66 93 -32 -62 normal
 2366 art/ae_nabs4.png 8bpp 86 109 65 93 -32 -62 normal
 2367 art/ae_nabs4.png 8bpp 166 109 65 93 -31 -62 normal
 2368 art/ae_nabs4.png 8bpp 246 109 65 99 -31 -68 normal
 2369 art/ae_nabs4.png 8bpp 326 109 65 96 -32 -65 normal
 2370 art/ae_nabs4.png 8bpp 406 109 65 96 -32 -65 normal
 2371 art/ae_nabs4.png 8bpp 486 109 64 96 -31 -65 normal
 2372 art/ae_nabs4.png 8bpp 565 109 64 99 -31 -68 normal
 2373 art/ae_nabs4.png 8bpp 644 109 65 86 -32 -55 normal
 2374 art/ae_nabs4.png 8bpp 5 213 65 86 -32 -55 normal
 2375 art/ae_nabs4.png 8bpp 85 213 64 86 -31 -55 normal
 2376 art/ae_nabs4.png 8bpp 164 213 64 99 -31 -68 normal
 2377 art/ae_nabs4.png 8bpp 243 213 66 85 -32 -54 normal
 2378 art/ae_nabs4.png 8bpp 324 213 66 85 -32 -54 normal
 2379 art/ae_nabs4.png 8bpp 405 213 65 84 -31 -53 normal
 2380 art/ae_nabs4.png 8bpp 485 213 65 99 -31 -68 normal
 2381 art/ae_nabs4.png 8bpp 565 213 66 88 -32 -57 normal
 2382 art/ae_nabs4.png 8bpp 646 213 66 88 -32 -57 normal
 2383 art/ae_nabs4.png 8bpp 5 317 65 88 -31 -57 normal
 2384 art/ae_nabs4.png 8bpp 85 317 65 99 -31 -68 normal
 2385 art/ae_nabs4.png 8bpp 165 317 66 93 -32 -62 normal
 2386 art/ae_nabs4.png 8bpp 246 317 66 93 -32 -62 normal
 2387 art/ae_nabs4.png 8bpp 327 317 65 93 -31 -62 normal
 2388 art/ae_nabs4.png 8bpp 407 317 65 99 -31 -68 normal
 2389 art/ae_nabs4.png 8bpp 487 317 65 96 -32 -65 normal
 2390 art/ae_nabs4.png 8bpp 567 317 65 96 -32 -65 normal
 2391 art/ae_nabs4.png 8bpp 647 317 64 96 -31 -65 normal
 2392 art/ae_nabs4.png 8bpp 5 421 64 99 -31 -68 normal
 2393 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  27 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
 // Action 4 to set name:  

 2394 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             27 C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2395 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2396 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2397 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2398 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2399 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2400 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2401 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2402 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2403 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2404 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2405 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2406 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2407 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2408 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2409 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2410 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2411 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2412 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2413 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2414 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2415 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2416 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2417 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2418 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2419 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2420 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2421 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2422 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2423 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2424 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2425 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2426 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2427 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2428 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2429 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2430 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2431 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2432 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2433 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2434 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2435 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2436 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2437 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2438 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2439 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2440 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2441 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2442 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2443 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2444 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2445 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2446 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2447 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2448 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2449 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2450 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2451 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2452 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2453 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2454 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2455 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2456 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2457 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2458 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2459 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2460 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2461 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2462 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2463 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2464 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2465 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  27 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2466 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2467 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2468 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2469 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2470 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2471 * 7	 03 07 01 27 00 A1 00
// ID 28 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2347) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2347) has not been used.
 2472 * 6	 01 07 2D FF 01 00
 2473 art/ae_nabs4.png 8bpp 84 421 64 38 -31 -7 normal
 2474 art/ae_nabs4.png 8bpp 163 421 64 73 -31 -42 normal
 2475 art/ae_nabs4.png 8bpp 242 421 64 89 -31 -58 normal
 2476 art/ae_nabs4.png 8bpp 321 421 64 89 -31 -58 normal
 2477 art/ae_nabs4.png 8bpp 400 421 64 31 -31 0 normal
 2478 art/ae_nabs4.png 8bpp 479 421 65 86 -32 -55 normal
 2479 art/ae_nabs4.png 8bpp 559 421 65 86 -32 -55 normal
 2480 art/ae_nabs4.png 8bpp 639 421 64 86 -31 -55 normal
 2481 art/ae_nabs4.png 8bpp 718 421 64 99 -31 -68 normal
 2482 art/ae_nabs4.png 8bpp 5 525 66 85 -32 -54 normal
 2483 art/ae_nabs4.png 8bpp 86 525 66 85 -32 -54 normal
 2484 art/ae_nabs4.png 8bpp 167 525 65 84 -31 -53 normal
 2485 art/ae_nabs4.png 8bpp 247 525 65 98 -31 -68 normal
 2486 art/ae_nabs4.png 8bpp 327 525 66 88 -32 -57 normal
 2487 art/ae_nabs4.png 8bpp 408 525 66 88 -32 -57 normal
 2488 art/ae_nabs4.png 8bpp 489 525 65 88 -31 -57 normal
 2489 art/ae_nabs4.png 8bpp 569 525 65 99 -31 -68 normal
 2490 art/ae_nabs4.png 8bpp 649 525 66 93 -32 -62 normal
 2491 art/ae_nabs4.png 8bpp 5 629 65 93 -32 -62 normal
 2492 art/ae_nabs4.png 8bpp 85 629 65 93 -31 -62 normal
 2493 art/ae_nabs4.png 8bpp 165 629 65 99 -31 -68 normal
 2494 art/ae_nabs4.png 8bpp 245 629 65 96 -32 -65 normal
 2495 art/ae_nabs4.png 8bpp 325 629 65 96 -32 -65 normal
 2496 art/ae_nabs4.png 8bpp 405 629 64 96 -31 -65 normal
 2497 art/ae_nabs4.png 8bpp 484 629 64 99 -31 -68 normal
 2498 art/ae_nabs4.png 8bpp 563 629 65 86 -32 -55 normal
 2499 art/ae_nabs4.png 8bpp 643 629 65 86 -32 -55 normal
 2500 art/ae_nabs4.png 8bpp 5 733 64 86 -31 -55 normal
 2501 art/ae_nabs4.png 8bpp 84 733 64 99 -31 -68 normal
 2502 art/ae_nabs4.png 8bpp 163 733 66 85 -32 -54 normal
 2503 art/ae_nabs4.png 8bpp 244 733 66 85 -32 -54 normal
 2504 art/ae_nabs4.png 8bpp 325 733 65 84 -31 -53 normal
 2505 art/ae_nabs4.png 8bpp 405 733 65 99 -31 -68 normal
 2506 art/ae_nabs4.png 8bpp 485 733 66 88 -32 -57 normal
 2507 art/ae_nabs4.png 8bpp 566 733 66 88 -32 -57 normal
 2508 art/ae_nabs4.png 8bpp 647 733 65 88 -31 -57 normal
 2509 art/ae_nabs4.png 8bpp 5 837 65 99 -31 -68 normal
 2510 art/ae_nabs4.png 8bpp 85 837 66 93 -32 -62 normal
 2511 art/ae_nabs4.png 8bpp 166 837 66 93 -32 -62 normal
 2512 art/ae_nabs4.png 8bpp 247 837 65 93 -31 -62 normal
 2513 art/ae_nabs4.png 8bpp 327 837 65 99 -31 -68 normal
 2514 art/ae_nabs4.png 8bpp 407 837 65 96 -32 -65 normal
 2515 art/ae_nabs4.png 8bpp 487 837 65 96 -32 -65 normal
 2516 art/ae_nabs4.png 8bpp 567 837 64 96 -31 -65 normal
 2517 art/ae_nabs4.png 8bpp 646 837 64 99 -31 -68 normal
 2518 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  28 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
 // Action 4 to set name:  

 2519 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2520 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2521 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2522 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2523 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2524 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2525 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2526 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2527 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2528 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2529 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2530 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2531 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2532 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2533 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2534 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2535 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2536 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2537 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2538 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2539 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2540 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2541 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2542 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2543 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2544 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2545 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2546 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2547 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2548 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2549 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2550 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2551 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2552 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2553 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2554 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2555 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2556 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2557 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2558 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2559 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2560 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2561 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2562 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2563 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2564 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2565 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2566 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2567 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2568 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2569 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2570 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2571 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2572 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2573 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2574 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2575 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2576 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2577 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2578 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2579 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2580 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2581 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2582 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2583 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2584 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2585 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2586 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2587 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2588 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2589 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2590 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  28 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2591 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2592 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2593 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2594 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2595 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2596 * 7	 03 07 01 28 00 A1 00
// ID 29 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2472) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2472) has not been used.
 2597 * 6	 01 07 2D FF 01 00
 2598 art/ae_nabs4.png 8bpp 5 941 64 31 -31 0 normal
 2599 art/ae_nabs5.png 8bpp 5 5 64 82 -31 -51 normal
 2600 art/ae_nabs5.png 8bpp 84 5 64 91 -31 -60 normal
 2601 art/ae_nabs5.png 8bpp 163 5 64 91 -31 -60 normal
 2602 art/ae_nabs5.png 8bpp 242 5 65 31 -31 0 normal
 2603 art/ae_nabs5.png 8bpp 322 5 65 94 -31 -63 normal
 2604 art/ae_nabs5.png 8bpp 402 5 65 94 -31 -63 normal
 2605 art/ae_nabs5.png 8bpp 482 5 64 91 -31 -60 normal
 2606 art/ae_nabs5.png 8bpp 561 5 64 108 -31 -77 normal
 2607 art/ae_nabs5.png 8bpp 640 5 66 94 -32 -63 normal
 2608 art/ae_nabs5.png 8bpp 5 118 66 94 -32 -63 normal
 2609 art/ae_nabs5.png 8bpp 86 118 65 91 -32 -60 normal
 2610 art/ae_nabs5.png 8bpp 166 118 65 108 -32 -77 normal
 2611 art/ae_nabs5.png 8bpp 246 118 65 94 -31 -63 normal
 2612 art/ae_nabs5.png 8bpp 326 118 65 94 -31 -63 normal
 2613 art/ae_nabs5.png 8bpp 406 118 64 91 -31 -60 normal
 2614 art/ae_nabs5.png 8bpp 485 118 64 108 -31 -77 normal
 2615 art/ae_nabs5.png 8bpp 564 118 66 94 -32 -63 normal
 2616 art/ae_nabs5.png 8bpp 645 118 66 94 -32 -63 normal
 2617 art/ae_nabs5.png 8bpp 5 231 65 91 -32 -60 normal
 2618 art/ae_nabs5.png 8bpp 85 231 65 108 -32 -77 normal
 2619 art/ae_nabs5.png 8bpp 165 231 65 94 -31 -63 normal
 2620 art/ae_nabs5.png 8bpp 245 231 65 94 -31 -63 normal
 2621 art/ae_nabs5.png 8bpp 325 231 64 91 -31 -60 normal
 2622 art/ae_nabs5.png 8bpp 404 231 64 108 -31 -77 normal
 2623 art/ae_nabs5.png 8bpp 483 231 65 94 -31 -63 normal
 2624 art/ae_nabs5.png 8bpp 563 231 65 94 -31 -63 normal
 2625 art/ae_nabs5.png 8bpp 643 231 64 91 -31 -60 normal
 2626 art/ae_nabs5.png 8bpp 5 344 64 108 -31 -77 normal
 2627 art/ae_nabs5.png 8bpp 84 344 66 94 -32 -63 normal
 2628 art/ae_nabs5.png 8bpp 165 344 66 94 -32 -63 normal
 2629 art/ae_nabs5.png 8bpp 246 344 65 91 -32 -60 normal
 2630 art/ae_nabs5.png 8bpp 326 344 65 108 -32 -77 normal
 2631 art/ae_nabs5.png 8bpp 406 344 65 94 -31 -63 normal
 2632 art/ae_nabs5.png 8bpp 486 344 65 94 -31 -63 normal
 2633 art/ae_nabs5.png 8bpp 566 344 64 91 -31 -60 normal
 2634 art/ae_nabs5.png 8bpp 645 344 64 108 -31 -77 normal
 2635 art/ae_nabs5.png 8bpp 5 457 66 95 -32 -64 normal
 2636 art/ae_nabs5.png 8bpp 86 457 66 94 -32 -63 normal
 2637 art/ae_nabs5.png 8bpp 167 457 65 91 -32 -60 normal
 2638 art/ae_nabs5.png 8bpp 247 457 65 108 -32 -77 normal
 2639 art/ae_nabs5.png 8bpp 327 457 64 94 -31 -63 normal
 2640 art/ae_nabs5.png 8bpp 406 457 65 94 -31 -63 normal
 2641 art/ae_nabs5.png 8bpp 486 457 64 91 -31 -60 normal
 2642 art/ae_nabs5.png 8bpp 565 457 64 108 -31 -77 normal
 2643 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  29 // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
 // Action 4 to set name:  

 2644 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2645 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2646 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2647 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2648 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2649 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2650 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2651 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2652 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2653 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2654 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2655 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2656 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2657 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2658 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2659 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2660 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2661 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2662 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2663 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2664 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2665 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2666 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2667 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2668 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2669 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2670 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2671 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2672 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2673 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2674 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2675 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2676 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2677 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2678 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2679 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2680 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2681 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2682 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2683 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2684 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2685 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2686 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2687 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2688 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2689 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2690 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2691 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2692 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2693 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2694 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2695 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2696 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2697 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2698 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2699 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2700 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2701 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2702 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2703 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2704 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2705 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2706 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2707 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2708 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2709 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2710 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2711 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2712 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2713 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2714 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2715 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  29 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2716 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2717 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2718 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2719 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2720 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2721 * 7	 03 07 01 29 00 A1 00
// ID 2A Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2597) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2597) has not been used.
 2722 * 6	 01 07 2D FF 01 00
 2723 art/ae_nabs5.png 8bpp 644 457 64 36 -31 -5 normal
 2724 art/ae_nabs5.png 8bpp 5 570 64 82 -31 -51 normal
 2725 art/ae_nabs5.png 8bpp 84 570 64 82 -31 -51 normal
 2726 art/ae_nabs5.png 8bpp 163 570 64 82 -31 -51 normal
 2727 art/ae_nabs5.png 8bpp 242 570 65 31 -31 0 normal
 2728 art/ae_nabs5.png 8bpp 322 570 65 94 -31 -63 normal
 2729 art/ae_nabs5.png 8bpp 402 570 65 94 -31 -63 normal
 2730 art/ae_nabs5.png 8bpp 482 570 64 91 -31 -60 normal
 2731 art/ae_nabs5.png 8bpp 561 570 64 108 -31 -77 normal
 2732 art/ae_nabs5.png 8bpp 640 570 66 94 -32 -63 normal
 2733 art/ae_nabs5.png 8bpp 5 683 66 94 -32 -63 normal
 2734 art/ae_nabs5.png 8bpp 86 683 65 91 -32 -60 normal
 2735 art/ae_nabs5.png 8bpp 166 683 65 108 -32 -77 normal
 2736 art/ae_nabs5.png 8bpp 246 683 65 94 -31 -63 normal
 2737 art/ae_nabs5.png 8bpp 326 683 65 94 -31 -63 normal
 2738 art/ae_nabs5.png 8bpp 406 683 64 91 -31 -60 normal
 2739 art/ae_nabs5.png 8bpp 485 683 64 108 -31 -77 normal
 2740 art/ae_nabs5.png 8bpp 564 683 66 94 -32 -63 normal
 2741 art/ae_nabs5.png 8bpp 645 683 66 94 -32 -63 normal
 2742 art/ae_nabs5.png 8bpp 5 796 65 91 -32 -60 normal
 2743 art/ae_nabs5.png 8bpp 85 796 65 108 -32 -77 normal
 2744 art/ae_nabs5.png 8bpp 165 796 65 94 -31 -63 normal
 2745 art/ae_nabs5.png 8bpp 245 796 65 94 -31 -63 normal
 2746 art/ae_nabs5.png 8bpp 325 796 64 91 -31 -60 normal
 2747 art/ae_nabs5.png 8bpp 404 796 64 108 -31 -77 normal
 2748 art/ae_nabs5.png 8bpp 483 796 65 94 -31 -63 normal
 2749 art/ae_nabs5.png 8bpp 563 796 65 94 -31 -63 normal
 2750 art/ae_nabs5.png 8bpp 643 796 64 91 -31 -60 normal
 2751 art/ae_nabs6.png 8bpp 5 5 64 108 -31 -77 normal
 2752 art/ae_nabs6.png 8bpp 84 5 66 94 -32 -63 normal
 2753 art/ae_nabs6.png 8bpp 165 5 66 94 -32 -63 normal
 2754 art/ae_nabs6.png 8bpp 246 5 65 91 -32 -60 normal
 2755 art/ae_nabs6.png 8bpp 326 5 65 108 -32 -77 normal
 2756 art/ae_nabs6.png 8bpp 406 5 65 94 -31 -63 normal
 2757 art/ae_nabs6.png 8bpp 486 5 65 94 -31 -63 normal
 2758 art/ae_nabs6.png 8bpp 566 5 64 91 -31 -60 normal
 2759 art/ae_nabs6.png 8bpp 645 5 64 108 -31 -77 normal
 2760 art/ae_nabs6.png 8bpp 5 118 66 95 -32 -64 normal
 2761 art/ae_nabs6.png 8bpp 86 118 66 94 -32 -63 normal
 2762 art/ae_nabs6.png 8bpp 167 118 65 91 -32 -60 normal
 2763 art/ae_nabs6.png 8bpp 247 118 65 108 -32 -77 normal
 2764 art/ae_nabs6.png 8bpp 327 118 64 94 -31 -63 normal
 2765 art/ae_nabs6.png 8bpp 406 118 65 94 -31 -63 normal
 2766 art/ae_nabs6.png 8bpp 486 118 64 91 -31 -60 normal
 2767 art/ae_nabs6.png 8bpp 565 118 64 108 -31 -77 normal
 2768 * 28	 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  2A // ID number
  08 34
     09 03
     0A \b1950 \b2175
     10 \w30000
     11 9B
     13 10 78
     14 01
     18 04
     19 03
     1D 04
 // Action 4 to set name:  

 2769 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
 2770 * 17	 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
 2771 * 17	 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
 2772 * 17	 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
 2773 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
 2774 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
 2775 * 17	 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
 2776 * 18	 02 07 64 81 43 00 FF 02
     04 00 00 03
     05 00 04 04
     03 00
 2777 * 22	 02 07 65 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     64 00
 2778 * 17	 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
 2779 * 17	 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
 2780 * 18	 02 07 66 81 43 00 FF 02
     0A 00 00 03
     0B 00 04 04
     03 00
 2781 * 22	 02 07 67 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     66 00
 2782 * 17	 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
 2783 * 17	 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
 2784 * 18	 02 07 68 81 43 00 FF 02
     10 00 00 03
     11 00 04 04
     03 00
 2785 * 22	 02 07 69 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     68 00
 2786 * 17	 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
 2787 * 17	 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
 2788 * 18	 02 07 6A 81 43 00 FF 02
     16 00 00 03
     17 00 04 04
     03 00
 2789 * 22	 02 07 6B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6A 00
// Row 2:
 2790 * 17	 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
 2791 * 17	 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
 2792 * 18	 02 07 6C 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2793 * 22	 02 07 6D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6C 00
 2794 * 17	 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
 2795 * 17	 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
 2796 * 18	 02 07 6E 81 43 00 FF 02
     22 00 00 03
     23 00 04 04
     03 00
 2797 * 22	 02 07 6F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     6E 00
 2798 * 17	 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
 2799 * 17	 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
 2800 * 18	 02 07 70 81 43 00 FF 02
     28 00 00 03
     29 00 04 04
     03 00
 2801 * 22	 02 07 71 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     70 00
 2802 * 17	 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
 2803 * 17	 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
 2804 * 18	 02 07 72 81 43 00 FF 02
     2E 00 00 03
     2F 00 04 04
     03 00
 2805 * 22	 02 07 73 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     72 00
// Row 3
 2806 * 17	 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
 2807 * 17	 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
 2808 * 18	 02 07 74 81 43 00 FF 02
     34 00 00 03
     35 00 04 04
     03 00
 2809 * 22	 02 07 75 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     74 00
 2810 * 17	 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
 2811 * 17	 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
 2812 * 18	 02 07 76 81 43 00 FF 02
     3A 00 00 03
     3B 00 04 04
     03 00
 2813 * 22	 02 07 77 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     76 00
 2814 * 17	 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
 2815 * 17	 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
 2816 * 18	 02 07 78 81 43 00 FF 02
     40 00 00 03
     41 00 04 04
     03 00
 2817 * 22	 02 07 79 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     78 00
 2818 * 17	 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
 2819 * 17	 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
 2820 * 18	 02 07 7A 81 43 00 FF 02
     46 00 00 03
     47 00 04 04
     03 00
 2821 * 22	 02 07 7B 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7A 00
// Row 4
 2822 * 17	 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
 2823 * 17	 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
 2824 * 18	 02 07 7C 81 43 00 FF 02
     4C 00 00 03
     4D 00 04 04
     03 00
 2825 * 22	 02 07 7D 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7C 00
 2826 * 17	 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
 2827 * 17	 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
 2828 * 18	 02 07 7E 81 43 00 FF 02
     52 00 00 03
     53 00 04 04
     03 00
 2829 * 22	 02 07 7F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     7E 00
 2830 * 17	 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
 2831 * 17	 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
 2832 * 18	 02 07 80 81 43 00 FF 02
     58 00 00 03
     59 00 04 04
     03 00
 2833 * 22	 02 07 81 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     80 00
 2834 * 17	 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
 2835 * 17	 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
 2836 * 18	 02 07 82 81 43 00 FF 02
     5E 00 00 03
     5F 00 04 04
     03 00
 2837 * 22	 02 07 83 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     82 00
// random varact2 to pick the building variant to spawn
 2838 * 39	 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00 75 00 73 00 71 00 6F 00 6D 00 6B 00 69 00 67 00 65 00
// varact2 to restrict building until a certain population
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2839 * 23	 02 07 9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2840 * 19	 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  2A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
 2841 * 15	 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
 2842 * 11	 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
 2843 * 15	 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2844 * 30	 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
 2845 * 23	 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 2846 * 7	 03 07 01 2A 00 A1 00
// ID 2B - 2C Large Deco Building (North and South)
// Large Deco Building (NW)
//!!Warning (97): Set 15 defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 16 defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 17 defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 18 defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 29 defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 2A defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 2B defined by the previous Action 1 (sprite 2722) has not been used.
//!!Warning (97): Set 2C defined by the previous Action 1 (sprite 2722) has not been used.
 2847 * 6	 01 07 06 FF 01 00
 2848 art/ae_nabs6.png 8bpp 644 118 64 31 -31 0 normal
 2849 art/ae_nabs6.png 8bpp 5 231 64 112 -31 -81 normal
 2850 art/ae_nabs6.png 8bpp 84 231 64 158 -31 -127 normal
 2851 art/ae_nabs6.png 8bpp 163 231 64 155 -31 -124 normal
 2852 art/ae_nabs6.png 8bpp 242 231 64 31 -31 0 normal
 2853 art/ae_nabs6.png 8bpp 321 231 64 155 -31 -124 normal
// Action 0
 2854 * 28	 00 07 0A 01 2B
     08 42
     09 0A
     0A \b1950 \b2175
     10 \w60000
     11 FF
     13 10 78
     14 01
     18 20
     19 03
     1D 04
// Action 4 to set name:  

 2855 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2B C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 2856 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2857 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2858 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2859 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2860 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 2861 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 2862 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2863 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 2864 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2B // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 2865 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 2866 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 2867 * 7	 03 07 01 2B 00 1C 00
// Large Deco Building (SE)
// Action 1
 2868 * 6	 01 07 06 FF 01 00
 2869 art/ae_nabs6.png 8bpp 400 231 64 31 -31 0 normal
 2870 art/ae_nabs6.png 8bpp 479 231 64 115 -31 -84 normal
 2871 art/ae_nabs6.png 8bpp 558 231 64 171 -31 -140 normal
 2872 art/ae_nabs6.png 8bpp 637 231 64 165 -31 -134 normal
 2873 art/ae_nabs6.png 8bpp 716 231 64 31 -31 0 normal
 2874 art/ae_nabs6.png 8bpp 5 407 64 165 -31 -134 normal
// Action 0
 2875 * 16	 00 07 05 01 2C 08 43 10 \w60000 11 FF 19 03 1D 04
// Action 4 to set name:  
 2876 * 23	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2C C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 2877 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2878 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2879 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2880 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2881 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 2882 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 2883 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2884 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 2885 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2C // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 2886 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 2887 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 2888 * 7	 03 07 01 2C 00 1C 00
// ID 2D Deco Buildings
// Deco Buildings
 2889 * 6	 01 07 06 FF 01 00
 2890 art/ae_nabs6.png 8bpp 84 407 64 31 -31 0 normal
 2891 art/ae_nabs6.png 8bpp 163 407 64 109 -31 -78 normal
 2892 art/ae_nabs6.png 8bpp 242 407 66 143 -32 -112 normal
 2893 art/ae_nabs6.png 8bpp 323 407 66 153 -32 -122 normal
 2894 art/ae_nabs6.png 8bpp 404 407 64 31 -31 0 normal
 2895 art/ae_nabs6.png 8bpp 483 407 66 153 -32 -122 normal
 2896 * 28	 00 07 0A 01 2D
     08 34
     09 01
     0A \b1950 \b2175
     10 \w60000
     11 FF
     13 10 78
     14 01
     18 08
     19 03 // Flat out protected.
   1D 04
 // Action 4 to set name:  

 2897 * 24	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 2D C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 2898 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2899 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2900 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2901 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2902 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 2903 * 18	 02 07 1E 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 2904 * 22	 02 07 1F 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     1E 00
 2905 * 6	 01 07 06 FF 01 00
 2906 art/ae_nabs6.png 8bpp 564 407 64 38 -31 -7 normal
 2907 art/ae_nabs6.png 8bpp 643 407 64 113 -31 -82 normal
 2908 art/ae_nabs6.png 8bpp 5 577 64 161 -31 -130 normal
 2909 art/ae_nabs6.png 8bpp 84 577 66 165 -32 -134 normal
 2910 art/ae_nabs6.png 8bpp 165 577 66 31 -32 0 normal
 2911 art/ae_nabs6.png 8bpp 246 577 66 165 -32 -134 normal
 2912 * 17	 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2913 * 17	 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2914 * 17	 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2915 * 17	 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2916 * 17	 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 2917 * 18	 02 07 20 81 43 00 FF 02
     08 00 00 03
     09 00 04 04
     03 00
 2918 * 22	 02 07 21 81 40 00 03 03
     05 00 00 00
     06 00 01 01
     07 00 02 02
     20 00
 2919 * 6	 01 07 06 FF 01 00
 2920 art/ae_nabs6.png 8bpp 327 577 64 38 -31 -7 normal
 2921 art/ae_nabs6.png 8bpp 406 577 64 104 -31 -73 normal
 2922 art/ae_nabs6.png 8bpp 485 577 64 146 -31 -115 normal
 2923 art/ae_nabs6.png 8bpp 564 577 65 156 -31 -125 normal
 2924 art/ae_nabs6.png 8bpp 644 577 65 31 -32 0 normal
 2925 art/ae_nabs6.png 8bpp 5 747 65 156 -31 -125 normal
 2926 * 17	 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2927 * 17	 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2928 * 17	 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2929 * 17	 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2930 * 17	 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 2931 * 18	 02 07 22 81 43 00 FF 02
     0D 00 00 03
     0E 00 04 04
     03 00
 2932 * 22	 02 07 23 81 40 00 03 03
     0A 00 00 00
     0B 00 01 01
     0C 00 02 02
     22 00
 2933 * 6	 01 07 06 FF 01 00
 2934 art/ae_nabs6.png 8bpp 85 747 64 45 -31 -14 normal
 2935 art/ae_nabs6.png 8bpp 164 747 64 107 -31 -76 normal
 2936 art/ae_nabs6.png 8bpp 243 747 64 150 -31 -119 normal
 2937 art/ae_nabs6.png 8bpp 322 747 64 167 -31 -136 normal
 2938 art/ae_nabs6.png 8bpp 401 747 64 31 -31 0 normal
 2939 art/ae_nabs6.png 8bpp 480 747 64 167 -31 -136 normal
 2940 * 17	 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2941 * 17	 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2942 * 17	 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2943 * 17	 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2944 * 17	 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 2945 * 18	 02 07 24 81 43 00 FF 02
     12 00 00 03
     13 00 04 04
     03 00
 2946 * 22	 02 07 25 81 40 00 03 03
     0F 00 00 00
     10 00 01 01
     11 00 02 02
     24 00
 2947 * 6	 01 07 06 FF 01 00
 2948 art/ae_nabs6.png 8bpp 559 747 64 35 -31 -4 normal
 2949 art/ae_nabs6.png 8bpp 638 747 64 114 -31 -83 normal
 2950 art/ae_nabs6.png 8bpp 717 747 64 146 -31 -115 normal
 2951 art/ae_nabs7.png 8bpp 5 5 64 159 -31 -128 normal
 2952 art/ae_nabs7.png 8bpp 84 5 64 31 -31 0 normal
 2953 art/ae_nabs7.png 8bpp 163 5 64 159 -31 -128 normal
 2954 * 17	 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2955 * 17	 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2956 * 17	 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2957 * 17	 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2958 * 17	 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 2959 * 18	 02 07 26 81 43 00 FF 02
     17 00 00 03
     18 00 04 04
     03 00
 2960 * 22	 02 07 27 81 40 00 03 03
     14 00 00 00
     15 00 01 01
     16 00 02 02
     26 00
 2961 * 6	 01 07 06 FF 01 00
 2962 art/ae_nabs7.png 8bpp 242 5 64 33 -31 -2 normal
 2963 art/ae_nabs7.png 8bpp 321 5 64 103 -31 -72 normal
 2964 art/ae_nabs7.png 8bpp 400 5 64 138 -31 -107 normal
 2965 art/ae_nabs7.png 8bpp 479 5 64 151 -31 -120 normal
 2966 art/ae_nabs7.png 8bpp 558 5 64 31 -31 0 normal
 2967 art/ae_nabs7.png 8bpp 637 5 64 151 -31 -120 normal
 2968 * 17	 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2969 * 17	 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2970 * 17	 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2971 * 17	 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2972 * 17	 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 2973 * 18	 02 07 28 81 43 00 FF 02
     1C 00 00 03
     1D 00 04 04
     03 00
 2974 * 22	 02 07 29 81 40 00 03 03
     19 00 00 00
     1A 00 01 01
     1B 00 02 02
     28 00
 // Pick random variation
 2975 * 23	 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2976 * 19	 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  2D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  05 // maxval
  00 80 // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 2977 * 23	 02 07 2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 2978 * 23	 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  2A 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 2979 * 7	 03 07 01 2D 00 3C 00
// ID 2E - 2F Flatiron (North and South)
// Flatiron (NW)
// Action 1
 2980 * 6	 01 07 06 FF 01 00
 2981 art/flatiron.png 8bpp 6 3 64 119 -31 -88 normal
 2982 art/flatiron.png 8bpp 144 3 64 119 -31 -88 normal
 2983 art/flatiron.png 8bpp 284 3 64 119 -31 -88 normal
 2984 art/flatiron.png 8bpp 425 3 64 119 -31 -88 normal
 2985 art/flatiron.png 8bpp 564 3 64 119 -31 -88 normal
 2986 art/flatiron.png 8bpp 702 3 64 119 -31 -88 normal
// Action 0
 2987 * 28	 00 07 0A 01 2E
     08 42
     09 0A
     0A \b1950 \b2175
     10 \w60000
     11 FF
     13 10 78
     14 01
     18 20
     19 03 // must protec
   1D 04
// Action 4 to set name:  

 2988 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2E C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 2989 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 2990 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 2991 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 2992 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 2993 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 2994 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 2995 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 2996 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 2997 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2E // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 2998 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 2999 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3000 * 7	 03 07 01 2E 00 1C 00
// Flatiron (SE)
// Action 1
 3001 * 6	 01 07 06 FF 01 00
 3002 art/flatiron.png 8bpp 76 3 64 119 -31 -88 normal
 3003 art/flatiron.png 8bpp 213 3 64 119 -31 -88 normal
 3004 art/flatiron.png 8bpp 354 3 64 119 -31 -88 normal
 3005 art/flatiron.png 8bpp 495 3 64 119 -31 -88 normal
 3006 art/flatiron.png 8bpp 633 3 64 119 -31 -88 normal
 3007 art/flatiron.png 8bpp 773 3 64 119 -31 -88 normal
// Action 0
 3008 * 16	 00 07 05 01 2F 08 43 10 \w60000 11 FF 19 03 // must protec
  1D 04
// Action 4 to set name:  
 3009 * 21	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2F C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain  
// Action 2 Chain:
 3010 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 3011 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 3012 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 3013 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 3014 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 3015 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 3016 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 3017 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
 3018 * 15	 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2F // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
 3019 * 17	 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
 3020 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3021 * 7	 03 07 01 2F 00 1C 00
// ID 30 - 33 Department Store (North, East, West and South)
// Department Store (N)
// Action 1
 3022 * 6	 01 07 06 FF 01 00
 3023 art/departmentstore.png 8bpp 5 7 64 35 -31 -4 normal
 3024 art/departmentstore.png 8bpp 85 7 64 84 -31 -53 normal
 3025 art/departmentstore.png 8bpp 165 7 64 76 -31 -45 normal
 3026 art/departmentstore.png 8bpp 245 7 64 79 -31 -48 normal
 3027 art/departmentstore.png 8bpp 319 7 64 31 -31 0 normal
 3028 art/departmentstore.png 8bpp 394 7 64 79 -31 -48 normal
// Action 0
 3029 * 28	 00 07 0A 01 30
     08 20
     09 12
     0A \b1950 \b2175
     10 \w60000
     11 FF
     13 10 78
     14 01
     18 04
     19 03
     1D 04
// Action 4 to set name:  

 3030 * 29	 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 30 C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 3031 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 3032 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 3033 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 3034 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 3035 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 3036 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 3037 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 3038 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  30 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 3039 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 3040 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3041 * 7	 03 07 01 30 00 1C 00
// Department Store (E)
// Action 1
 3042 * 6	 01 07 06 FF 01 00
 3043 art/departmentstore.png 8bpp 5 109 64 35 -31 -4 normal
 3044 art/departmentstore.png 8bpp 85 109 64 80 -31 -49 normal
 3045 art/departmentstore.png 8bpp 165 109 64 78 -31 -47 normal
 3046 art/departmentstore.png 8bpp 245 109 64 78 -31 -47 normal
 3047 art/departmentstore.png 8bpp 316 109 64 31 -31 0 normal
 3048 art/departmentstore.png 8bpp 394 109 64 78 -31 -47 normal
// Action 0
 3049 * 16	 00 07 05 01 31 08 21 10 \w60000 11 FF 19 03 1D 04
// Action 4 to set name:  
 3050 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  31 C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 3051 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 3052 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 3053 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 3054 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 3055 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 3056 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 3057 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 3058 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  31 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 3059 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 3060 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3061 * 7	 03 07 01 31 00 1C 00
// Department Store (W)
// Action 1
 3062 * 6	 01 07 06 FF 01 00
 3063 art/departmentstore.png 8bpp 5 206 64 35 -31 -4 normal
 3064 art/departmentstore.png 8bpp 85 206 64 70 -31 -39 normal
 3065 art/departmentstore.png 8bpp 165 206 64 74 -31 -43 normal
 3066 art/departmentstore.png 8bpp 245 206 64 74 -31 -43 normal
 3067 art/departmentstore.png 8bpp 316 206 64 31 -31 0 normal
 3068 art/departmentstore.png 8bpp 394 206 64 74 -31 -43 normal
// Action 0
 3069 * 16	 00 07 05 01 32 08 22 10 \w60000 11 FF 19 03 1D 04
// Action 4 to set name:  
 3070 * 28	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  32 C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 3071 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 3072 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 3073 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 3074 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 3075 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 3076 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 3077 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 3078 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  32 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 3079 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 3080 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3081 * 7	 03 07 01 32 00 1C 00
// Department Store (S)
// Action 1
 3082 * 6	 01 07 06 FF 01 00
 3083 art/departmentstore.png 8bpp 5 308 64 31 -31 0 normal
 3084 art/departmentstore.png 8bpp 85 308 64 31 -31 0 normal
 3085 art/departmentstore.png 8bpp 163 308 64 31 -31 0 normal
 3086 art/departmentstore.png 8bpp 243 308 64 31 -31 0 normal
 3087 art/departmentstore.png 8bpp 316 308 64 31 -31 0 normal
 3088 art/departmentstore.png 8bpp 392 308 64 31 -31 0 normal
// Action 0
 3089 * 16	 00 07 05 01 33 08 23 10 \w60000 11 FF 19 03 1D 04
// Action 4 to set name:  
 3090 * 29	 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  33 C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 3091 * 17	 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 3092 * 17	 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 3093 * 17	 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 3094 * 17	 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 3095 * 17	 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
//!!Warning (100): Default ID appears earlier in sprite.
 3096 * 18	 02 07 10 81 43 00 FF 02
     03 00 00 03
     04 00 04 04
     03 00
 3097 * 22	 02 07 11 81 40 00 03 03
     00 00 00 00
     01 00 01 01
     02 00 02 02
     10 00
// Check to see if one has already been built
//!!Warning (100): Default ID appears earlier in sprite.
//!!Warning (170): Default result cannot be reached.
 3098 * 19	 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  33 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
//!!Warning (100): Default ID appears earlier in sprite.
 3099 * 23	 02 07 15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
 3100 * 23	 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
 3101 * 7	 03 07 01 33 00 1C 00
// Fin
//!!For feature 7 the following cargoIDs have not been used since their most recent definition:
//!!27 (last defined at sprite 2960)
