// Automatically generated by GRFCODEC. Do not modify!
// (Info version 32)
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
// Total number of sprites (Let nforenum deal with this):
0 * 0 00 00 00 00
// Action 8 for description, copyright notice, and grfid:
0 * 0 08 08
  "RJE" 01
  "North American Buildings Set" 00
  "Coded by reldred (the belligerent formerly known as Aegir). Artwork by Oz, lifeblood, reldred. reldreds North American Building Set is the continuation of Aegir's original NABS. For support go bug reldred on #openttd. Special thanks to patchman, dalestan, csaboka, eis_os and all the other #tycoon OG's I've forgotten from whom I owe a great deal and have learnt even more." 00
// ID 00 Small House 1:
// Small House 1 - Twin houses with brown roofs.
// Action 1:
    0 * 0 01 07 06 FF 01 00
// Real Sprites:
    0 art/house01.png 8bpp 3 2 64 37 -31 -6 normal
    0 art/house01.png 8bpp 79 2 64 45 -31 -14 normal
    0 art/house01.png 8bpp 149 2 64 45 -31 -14 normal
    0 art/house01.png 8bpp 222 2 64 44 -31 -13 normal
    0 art/house01.png 8bpp 298 2 64 31 -31 0 normal
    0 art/house01.png 8bpp 367 2 64 44 -31 -13 normal
// Action 0 to set properties:
    0 * 0 00 07 // Action 0, Feature 07
                 06 // Properties to Change
                 01 // Change properties for how many ID's
                 00 // ID
                 08 2E // Substitute type
                 09 01 // Building flags
//                 0A 00 1D // Set years availible
                 13 03 78 // Set availibilty mask
                 1D 04 // Set prop 1D to 4
    21 67 07
    22 9D 07
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 00 C9 // Offset
                 "Suburban House 01" 00 // String
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.0:
    0 * 0 03 07 01 00 00 11 00
// Fin
// ID 01 Small House 2:
// Small House 2 - Grey roof, small corner shops
// Action 1:
 0 * 0 01 07 06 FF 01 00
// Real Sprites:
 0 art/house02.png 8bpp 7 3 64 31 -31 0 normal
 0 art/house02.png 8bpp 83 3 64 38 -31 -7 normal
 0 art/house02.png 8bpp 159 3 64 33 -31 -2 normal
 0 art/house02.png 8bpp 230 3 64 34 -31 -3 normal
 0 art/house02.png 8bpp 306 3 64 31 -31 0 normal
 0 art/house02.png 8bpp 376 3 64 34 -31 -3 normal
 // Action 0 to set properties:
 0 * 0 00 07 // Action 0, Feature 07
 06 // Properties to Change
  01 // Change properties for how many ID's
  01 // ID
  08 2E // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 03 78 // Set availibilty mask
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 01 C9 // Offset
                 "Suburban Shop 01" 00 // String
// Action 2 Chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  00 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  00 00 00 80 // Building Sprite (00)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 2nd stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  01 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  01 00 00 80 // Building Sprite (01)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 3rd stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  02 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  02 00 00 80 // Building Sprite (02)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Finished stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  03 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  03 00 00 80 // Building Sprite (03)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Snowy stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  04 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  05 00 00 80 // Building Sprite (05)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Check ground type and select either no.3 or no.4:
 0 * 0 02 07 // Action 2, Feature 07
  10 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  43 // Variable (Terrain Type)
  00 FF // Varadjust (AND FF)
  02 // Nuber of ranges
  // Range Checks:
  03 00 // Use Set ID 3...
  00 03 // If ground type between 0 and 3
  04 00 // Use Set ID 4...
  04 04 // If ground type between 4 and 4
  03 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 0 * 0 02 07 // Action 2, Feature 07
  11 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  40 // Variable (Construction stages)
  00 03 // Varadjust (AND FF)
  03 // Number of ranges
  // Range Checks:
  00 00 // Use Set ID 0...
  00 00 // If construction stage 0
  01 00 // Use Set ID 1...
  01 01 // If construction stage 1
  02 00 // Use Set ID 2...
  02 02 // If construction stage 2
  10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  01 // id.1
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 02 Small Building 1:
// Small Building 1 - Two shops side by side
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:    
0 art/smallbuilding01.png 8bpp 5 6 64 34 -31 -3 normal
0 art/smallbuilding01.png 8bpp 81 6 64 58 -31 -27 normal
0 art/smallbuilding01.png 8bpp 157 6 64 60 -31 -29 normal
0 art/smallbuilding01.png 8bpp 230 6 64 59 -31 -28 normal
0 art/smallbuilding01.png 8bpp 306 6 64 32 -31 -1 normal
0 art/smallbuilding01.png 8bpp 377 6 64 59 -31 -28 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  02 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  02 C9 // Offset
  "Small Building 01" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  02 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 03 Small Building 2:
// Small Building 2 - Small Flats
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/ae_nabs1.png 8bpp 637 55 64 41 -31 -10 normal
0 art/ae_nabs1.png 8bpp 716 55 64 39 -31 -8 normal
0 art/ae_nabs1.png 8bpp 5 120 64 53 -31 -22 normal
0 art/ae_nabs1.png 8bpp 84 120 64 53 -31 -22 normal
0 art/ae_nabs1.png 8bpp 163 120 64 32 -31 -1 normal
0 art/ae_nabs1.png 8bpp 242 120 64 52 -31 -22 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  03 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  03 C9 // Offset
  "Small Building 02" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  03 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 04 Small Building 3:
// Small Building 3 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/ae_nabs1.png 8bpp 321 120 63 35 -31 -4 normal
0 art/ae_nabs1.png 8bpp 399 120 64 44 -31 -13 normal
0 art/ae_nabs1.png 8bpp 478 120 64 52 -31 -21 normal
0 art/ae_nabs1.png 8bpp 557 120 64 52 -31 -21 normal
0 art/ae_nabs1.png 8bpp 636 120 63 31 -30 0 normal
0 art/ae_nabs1.png 8bpp 714 120 64 52 -31 -21 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  04 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  04 C9 // Offset
  "Small Building 03" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  04 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 05 - 06 School (North and South)
// School (N)
// Action 1:
    0 * 0 01 07 06 FF 01 00
// Real Sprites:
    0 art/ae_nabs1.png 8bpp 5 178 64 36 -31 -5 normal
    0 art/ae_nabs1.png 8bpp 84 178 63 42 -31 -11 normal
    0 art/ae_nabs1.png 8bpp 162 178 64 51 -31 -20 normal
    0 art/ae_nabs1.png 8bpp 241 178 59 44 -31 -13 normal
    0 art/ae_nabs1.png 8bpp 315 178 64 40 -31 -9 normal
    0 art/ae_nabs1.png 8bpp 394 178 64 44 -31 -13 normal
// Action 0 to set properties:  
0 * 0 00 07 // Action 0, Feature 7
  09 // Properties to change
  01 // Change properties for how many ID's
  05 // ID
  08 42 // Substitute type
  09 08 // Building flags
//		0A 00 1D // Set years availible
  10 C8 AF // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  13 03 78 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  05 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 80 // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 80 // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 80 // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 80 // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
    0 * 0 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.25:
0 * 0 03 07 01 05 00 25 00
// Fin
// School (S)
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/ae_nabs1.png 8bpp 473 178 64 31 -31 0 normal
0 art/ae_nabs1.png 8bpp 552 178 64 51 -31 -20 normal
0 art/ae_nabs1.png 8bpp 631 178 64 58 -31 -27 normal
0 art/ae_nabs1.png 8bpp 710 178 64 53 -31 -22 normal
0 art/ae_nabs1.png 8bpp 5 241 64 31 -31 0 normal
0 art/ae_nabs1.png 8bpp 84 241 64 53 -31 -22 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  04 // Properties to change
  01 // Change properties for how many ID's
  06 // ID
  08 43 // Substitute type
  10 C8 AF // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  06 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 80 // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 80 // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 80 // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 80 // Varadjust (AND FF)
                 02 // Number of ranges
                 01 80 // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 80 // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
    0 * 0 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.2:
0 * 0 03 07 01 06 00 25 00
// Fin
// ID 07 - 08 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:   
    0 art/ae_nabs1.png 8bpp 163 241 32 35 -31 -4 normal
    0 art/ae_nabs1.png 8bpp 210 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 257 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 304 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 351 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 398 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 445 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 492 241 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 571 241 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 650 241 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 5 300 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 300 64 54 -31 -23 normal
// Action 0 to set properties:  
    0 * 0 00 07 // Action 0, Feature 07
                09 // Properties to Change
                01 // Change properties for how many ID's
                07 // ID
                08 42 // Substitute type
                09 0A // Building flags
//                0A 00 1D // Set years availible
                10 20 4E // Local Authority rating decrease
                11 64 // Removal cost multiplier
                13 0C 78 // Set availibilty mask
                18 04 // Probability
                1D 04 // Set prop 1D to 4
    21 67 07
    22 9D 07
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 07 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
    0 * 0 03 07 01 07 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:
    0 art/ae_nabs1.png 8bpp 163 300 64 61 -31 -30 normal
    0 art/ae_nabs1.png 8bpp 242 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 321 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 400 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 479 300 64 71 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 558 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 637 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 716 300 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 5 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 163 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 376 64 54 -31 -23 normal
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 7
                 04 // Properties to change
                 01 // Change properties for how many ID's
                 08 // ID
                 08 43 // Substitute type
                 10 20 4E // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
                 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 08 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 08 00 35 00
// Fin
// ID 09 - 0A Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:  
    0 art/ae_nabs1.png 8bpp 321 376 32 47 1 -16 normal
    0 art/ae_nabs1.png 8bpp 368 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 415 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 462 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 509 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 556 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 603 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 650 376 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 5 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 163 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 435 54 64 -31 -23 normal
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 07
                 09 // Properties to change
                 01 // Change properties for how many ID's
                 09 // ID
                 08 4A // Substitute type
                 09 06 // Building flags
//                 0A 00 1D // Set years availible
                 10 20 4E // Local authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 78 // Set availibility mask
                 18 04 // Probability
                 1D 04 // Set prop 1D to 4
    21 67 07
    22 9D 07
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 09 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 09 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:      
    0 art/ae_nabs1.png 8bpp 321 435 64 63 -31 -32 normal
    0 art/ae_nabs1.png 8bpp 400 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 479 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 558 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 637 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 716 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 5 510 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 84 510 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 163 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 321 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 400 510 64 54 -31 -23 normal
// Action 0 to set properties:    
    0 * 0 00 07
                 04
                 01
                 0A
                 08 4B
                 10 20 4E
                 11 64
                 1D 04
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 0A C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 13 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  372 * 7 03 07 01 0A 00 35 00
// Fin  
// ID 0B Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
0 * 0 01 07 2D FF 01 00
0 art/ae_nabs1.png 8bpp 479 510 65 31 -32 0 normal
0 art/ae_nabs1.png 8bpp 559 510 64 89 -31 -58 normal
0 art/ae_nabs1.png 8bpp 638 510 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 717 510 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 5 604 64 31 -31 0 normal
0 art/ae_nabs1.png 8bpp 84 604 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 164 604 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 244 604 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 323 604 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 402 604 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 483 604 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 564 604 65 90 -32 -59 normal
0 art/ae_nabs1.png 8bpp 644 604 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 5 708 66 88 -32 -57 normal
0 art/ae_nabs1.png 8bpp 86 708 66 90 -32 -59 normal
0 art/ae_nabs1.png 8bpp 167 708 65 88 -32 -57 normal
0 art/ae_nabs1.png 8bpp 247 708 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 327 708 66 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 408 708 66 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 489 708 65 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 569 708 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 649 708 65 95 -31 -65 normal
0 art/ae_nabs1.png 8bpp 5 812 66 96 -32 -65 normal
0 art/ae_nabs1.png 8bpp 86 812 64 96 -31 -65 normal
0 art/ae_nabs1.png 8bpp 165 812 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 244 812 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 324 812 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 404 812 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 483 812 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 562 812 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 643 812 66 85 -32 -54 normal
0 art/ae_nabs2.png 8bpp 5 5 65 84 -32 -53 normal
0 art/ae_nabs2.png 8bpp 85 5 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 165 5 66 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 246 5 66 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 327 5 65 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 407 5 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 487 5 66 93 -32 -62 normal
0 art/ae_nabs2.png 8bpp 568 5 67 92 -33 -61 normal
0 art/ae_nabs2.png 8bpp 650 5 65 93 -32 -62 normal
0 art/ae_nabs2.png 8bpp 5 109 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 85 109 65 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 165 109 65 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 245 109 64 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 324 109 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0B // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         0B C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
0 * 0 03 07 01 0B 00 A1 00
// ID 0C Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
  559 * 6 01 07 2D FF 01 00
  560 art/ae_nabs2.png 8bpp 403 109 63 38 -31 -7 normal
  561 art/ae_nabs2.png 8bpp 481 109 64 81 -31 -50 normal
  562 art/ae_nabs2.png 8bpp 560 109 64 89 -31 -58 normal
  563 art/ae_nabs2.png 8bpp 639 109 64 89 -31 -58 normal
  564 art/ae_nabs2.png 8bpp 718 109 64 31 -31 0 normal
  565 art/ae_nabs2.png 8bpp 5 213 65 86 -31 -55 normal
  566 art/ae_nabs2.png 8bpp 85 213 65 86 -31 -55 normal
  567 art/ae_nabs2.png 8bpp 165 213 64 86 -31 -55 normal
  568 art/ae_nabs2.png 8bpp 244 213 64 99 -31 -68 normal
  569 art/ae_nabs2.png 8bpp 323 213 66 85 -32 -54 normal
  570 art/ae_nabs2.png 8bpp 404 213 66 85 -32 -54 normal
  571 art/ae_nabs2.png 8bpp 485 213 65 90 -32 -59 normal
  572 art/ae_nabs2.png 8bpp 565 213 65 99 -32 -68 normal
  573 art/ae_nabs2.png 8bpp 645 213 66 88 -32 -57 normal
  574 art/ae_nabs2.png 8bpp 5 317 66 90 -32 -59 normal
  575 art/ae_nabs2.png 8bpp 86 317 65 88 -32 -57 normal
  576 art/ae_nabs2.png 8bpp 166 317 65 99 -32 -68 normal
  577 art/ae_nabs2.png 8bpp 246 317 66 93 -32 -62 normal
  578 art/ae_nabs2.png 8bpp 327 317 66 93 -32 -62 normal
  579 art/ae_nabs2.png 8bpp 408 317 65 93 -32 -62 normal
  580 art/ae_nabs2.png 8bpp 488 317 65 99 -32 -68 normal
  581 art/ae_nabs2.png 8bpp 568 317 65 95 -31 -65 normal
  582 art/ae_nabs2.png 8bpp 648 317 66 96 -32 -65 normal
  583 art/ae_nabs2.png 8bpp 5 421 64 96 -31 -65 normal
  584 art/ae_nabs2.png 8bpp 84 421 64 99 -31 -68 normal
  585 art/ae_nabs2.png 8bpp 163 421 65 86 -31 -55 normal
  586 art/ae_nabs2.png 8bpp 243 421 65 86 -31 -55 normal
  587 art/ae_nabs2.png 8bpp 323 421 64 86 -31 -55 normal
  588 art/ae_nabs2.png 8bpp 402 421 64 99 -31 -68 normal
  589 art/ae_nabs2.png 8bpp 481 421 66 85 -32 -54 normal
  590 art/ae_nabs2.png 8bpp 562 421 66 85 -32 -54 normal
  591 art/ae_nabs2.png 8bpp 643 421 65 84 -32 -53 normal
  592 art/ae_nabs2.png 8bpp 5 525 65 99 -32 -68 normal
  593 art/ae_nabs2.png 8bpp 85 525 66 88 -32 -57 normal
  594 art/ae_nabs2.png 8bpp 166 525 66 88 -32 -57 normal
  595 art/ae_nabs2.png 8bpp 247 525 65 88 -32 -57 normal
  596 art/ae_nabs2.png 8bpp 327 525 65 99 -32 -68 normal
  597 art/ae_nabs2.png 8bpp 407 525 66 93 -32 -62 normal
  598 art/ae_nabs2.png 8bpp 488 525 67 92 -33 -61 normal
  599 art/ae_nabs2.png 8bpp 570 525 65 93 -32 -62 normal
  600 art/ae_nabs2.png 8bpp 650 525 65 99 -32 -68 normal
  601 art/ae_nabs2.png 8bpp 5 629 65 95 -31 -64 normal
  602 art/ae_nabs2.png 8bpp 85 629 65 95 -31 -64 normal
  603 art/ae_nabs2.png 8bpp 165 629 64 95 -31 -64 normal
  604 art/ae_nabs2.png 8bpp 244 629 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0C // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0C C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  744 * 7 03 07 01 0C 00 A1 00
// ID 0D Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
  745 * 6 01 07 2D FF 01 00
  746 art/ae_nabs2.png 8bpp 323 629 64 31 -31 0 normal
  747 art/ae_nabs2.png 8bpp 402 629 64 90 -31 -59 normal
  748 art/ae_nabs2.png 8bpp 481 629 64 91 -31 -60 normal
  749 art/ae_nabs2.png 8bpp 560 629 64 91 -31 -60 normal
  750 art/ae_nabs2.png 8bpp 639 629 64 31 -31 0 normal
  751 art/ae_nabs2.png 8bpp 718 629 65 94 -32 -63 normal
  752 art/ae_nabs2.png 8bpp 5 733 65 94 -32 -63 normal
  753 art/ae_nabs2.png 8bpp 85 733 64 91 -31 -60 normal
  754 art/ae_nabs2.png 8bpp 164 733 64 109 -31 -78 normal
  755 art/ae_nabs2.png 8bpp 243 733 66 94 -32 -63 normal
  756 art/ae_nabs2.png 8bpp 324 733 66 94 -32 -63 normal
  757 art/ae_nabs2.png 8bpp 405 733 65 91 -31 -60 normal
  758 art/ae_nabs2.png 8bpp 485 733 65 108 -31 -77 normal
  759 art/ae_nabs2.png 8bpp 565 733 65 94 -32 -63 normal
  760 art/ae_nabs2.png 8bpp 645 733 64 94 -32 -63 normal
  761 art/ae_nabs2.png 8bpp 5 847 64 91 -31 -60 normal
  762 art/ae_nabs2.png 8bpp 84 847 64 108 -31 -78 normal
  763 art/ae_nabs2.png 8bpp 163 847 66 94 -32 -63 normal
  764 art/ae_nabs2.png 8bpp 244 847 66 94 -32 -63 normal
  765 art/ae_nabs2.png 8bpp 325 847 65 91 -31 -60 normal
  766 art/ae_nabs2.png 8bpp 405 847 64 108 -31 -77 normal
  767 art/ae_nabs2.png 8bpp 484 847 65 94 -32 -63 normal
  768 art/ae_nabs2.png 8bpp 564 847 65 94 -31 -63 normal
  769 art/ae_nabs2.png 8bpp 644 847 64 91 -31 -60 normal
  770 art/ae_nabs3.png 8bpp 5 5 64 108 -31 -77 normal
  771 art/ae_nabs3.png 8bpp 84 5 65 94 -32 -63 normal
  772 art/ae_nabs3.png 8bpp 164 5 65 94 -32 -63 normal
  773 art/ae_nabs3.png 8bpp 244 5 64 91 -31 -60 normal
  774 art/ae_nabs3.png 8bpp 323 5 64 108 -30 -77 normal
  775 art/ae_nabs3.png 8bpp 402 5 66 94 -32 -63 normal
  776 art/ae_nabs3.png 8bpp 483 5 66 94 -32 -63 normal
  777 art/ae_nabs3.png 8bpp 564 5 65 91 -31 -60 normal
  778 art/ae_nabs3.png 8bpp 644 5 65 108 -31 -77 normal
  779 art/ae_nabs3.png 8bpp 5 118 65 94 -32 -63 normal
  780 art/ae_nabs3.png 8bpp 85 118 65 94 -32 -63 normal
  781 art/ae_nabs3.png 8bpp 165 118 64 91 -31 -60 normal
  782 art/ae_nabs3.png 8bpp 244 118 63 108 -31 -77 normal
  783 art/ae_nabs3.png 8bpp 322 118 66 94 -32 -63 normal
  784 art/ae_nabs3.png 8bpp 403 118 66 94 -32 -63 normal
  785 art/ae_nabs3.png 8bpp 484 118 65 91 -31 -60 normal
  786 art/ae_nabs3.png 8bpp 564 118 65 108 -31 -77 normal
  787 art/ae_nabs3.png 8bpp 644 118 65 94 -32 -63 normal
  788 art/ae_nabs3.png 8bpp 5 231 65 94 -32 -63 normal
  789 art/ae_nabs3.png 8bpp 85 231 64 91 -31 -60 normal
  790 art/ae_nabs3.png 8bpp 164 231 64 108 -30 -77 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0D // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0D C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  930 * 7 03 07 01 0D 00 A1 00
// ID 0E Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
  931 * 6 01 07 2D FF 01 00
  932 art/ae_nabs3.png 8bpp 243 231 65 36 -31 -5 normal
  933 art/ae_nabs3.png 8bpp 323 231 64 82 -31 -51 normal
  934 art/ae_nabs3.png 8bpp 402 231 64 90 -31 -59 normal
  935 art/ae_nabs3.png 8bpp 481 231 64 90 -31 -59 normal
  936 art/ae_nabs3.png 8bpp 560 231 64 31 -31 0 normal
  937 art/ae_nabs3.png 8bpp 639 231 65 94 -32 -63 normal
  938 art/ae_nabs3.png 8bpp 719 231 65 94 -32 -63 normal
  939 art/ae_nabs3.png 8bpp 5 344 64 91 -31 -60 normal
  940 art/ae_nabs3.png 8bpp 84 344 64 109 -31 -78 normal
  941 art/ae_nabs3.png 8bpp 163 344 66 94 -32 -63 normal
  942 art/ae_nabs3.png 8bpp 244 344 66 94 -32 -63 normal
  943 art/ae_nabs3.png 8bpp 325 344 65 91 -31 -60 normal
  944 art/ae_nabs3.png 8bpp 405 344 65 108 -31 -77 normal
  945 art/ae_nabs3.png 8bpp 485 344 65 94 -32 -63 normal
  946 art/ae_nabs3.png 8bpp 565 344 64 94 -32 -63 normal
  947 art/ae_nabs3.png 8bpp 644 344 64 91 -31 -60 normal
  948 art/ae_nabs3.png 8bpp 5 458 64 108 -31 -78 normal
  949 art/ae_nabs3.png 8bpp 84 458 66 94 -32 -63 normal
  950 art/ae_nabs3.png 8bpp 165 458 66 94 -32 -63 normal
  951 art/ae_nabs3.png 8bpp 246 458 65 91 -31 -60 normal
  952 art/ae_nabs3.png 8bpp 326 458 64 108 -31 -77 normal
  953 art/ae_nabs3.png 8bpp 405 458 65 94 -32 -63 normal
  954 art/ae_nabs3.png 8bpp 485 458 65 94 -31 -63 normal
  955 art/ae_nabs3.png 8bpp 565 458 64 91 -31 -60 normal
  956 art/ae_nabs3.png 8bpp 644 458 64 108 -31 -77 normal
  957 art/ae_nabs3.png 8bpp 5 571 65 94 -32 -63 normal
  958 art/ae_nabs3.png 8bpp 85 571 65 94 -32 -63 normal
  959 art/ae_nabs3.png 8bpp 165 571 64 91 -31 -60 normal
  960 art/ae_nabs3.png 8bpp 244 571 64 108 -30 -77 normal
  961 art/ae_nabs3.png 8bpp 323 571 66 94 -32 -63 normal
  962 art/ae_nabs3.png 8bpp 404 571 66 94 -32 -63 normal
  963 art/ae_nabs3.png 8bpp 485 571 65 91 -31 -60 normal
  964 art/ae_nabs3.png 8bpp 565 571 65 108 -31 -77 normal
  965 art/ae_nabs3.png 8bpp 645 571 65 94 -32 -63 normal
  966 art/ae_nabs3.png 8bpp 5 684 65 94 -32 -63 normal
  967 art/ae_nabs3.png 8bpp 85 684 64 91 -31 -60 normal
  968 art/ae_nabs3.png 8bpp 164 684 63 108 -31 -77 normal
  969 art/ae_nabs3.png 8bpp 242 684 66 94 -32 -63 normal
  970 art/ae_nabs3.png 8bpp 323 684 66 94 -32 -63 normal
  971 art/ae_nabs3.png 8bpp 404 684 65 91 -31 -60 normal
  972 art/ae_nabs3.png 8bpp 484 684 65 108 -31 -77 normal
  973 art/ae_nabs3.png 8bpp 564 684 65 94 -32 -63 normal
  974 art/ae_nabs3.png 8bpp 644 684 65 94 -32 -63 normal
  975 art/ae_nabs3.png 8bpp 5 797 64 91 -31 -60 normal
  976 art/ae_nabs3.png 8bpp 84 797 64 108 -30 -77 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0E // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0E C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1116 * 7 03 07 01 0E 00 A1 00
// ID 0F Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
 1117 * 6 01 07 2D FF 01 00
 1118 art/ae_nabs3.png 8bpp 163 797 64 31 -31 0 normal
 1119 art/ae_nabs3.png 8bpp 242 797 64 90 -31 -58 normal
 1120 art/ae_nabs3.png 8bpp 321 797 64 81 -31 -50 normal
 1121 art/ae_nabs3.png 8bpp 400 797 64 82 -31 -51 normal
 1122 art/ae_nabs3.png 8bpp 479 797 64 31 -31 0 normal
 1123 art/ae_nabs3.png 8bpp 558 797 65 86 -32 -55 normal
 1124 art/ae_nabs3.png 8bpp 638 797 65 86 -32 -55 normal
 1125 art/ae_nabs3.png 8bpp 718 797 64 86 -31 -55 normal
 1126 art/ae_nabs4.png 8bpp 5 5 64 99 -31 -68 normal
 1127 art/ae_nabs4.png 8bpp 84 5 66 85 -32 -54 normal
 1128 art/ae_nabs4.png 8bpp 165 5 66 85 -32 -54 normal
 1129 art/ae_nabs4.png 8bpp 246 5 65 84 -31 -53 normal
 1130 art/ae_nabs4.png 8bpp 326 5 65 98 -31 -68 normal
 1131 art/ae_nabs4.png 8bpp 406 5 66 88 -32 -57 normal
 1132 art/ae_nabs4.png 8bpp 487 5 66 88 -32 -57 normal
 1133 art/ae_nabs4.png 8bpp 568 5 65 88 -31 -57 normal
 1134 art/ae_nabs4.png 8bpp 648 5 65 99 -31 -68 normal
 1135 art/ae_nabs4.png 8bpp 5 109 66 93 -32 -62 normal
 1136 art/ae_nabs4.png 8bpp 86 109 65 93 -32 -62 normal
 1137 art/ae_nabs4.png 8bpp 166 109 65 93 -31 -62 normal
 1138 art/ae_nabs4.png 8bpp 246 109 65 99 -31 -68 normal
 1139 art/ae_nabs4.png 8bpp 326 109 65 96 -32 -65 normal
 1140 art/ae_nabs4.png 8bpp 406 109 65 96 -32 -65 normal
 1141 art/ae_nabs4.png 8bpp 486 109 64 96 -31 -65 normal
 1142 art/ae_nabs4.png 8bpp 565 109 64 99 -31 -68 normal
 1143 art/ae_nabs4.png 8bpp 644 109 65 86 -32 -55 normal
 1144 art/ae_nabs4.png 8bpp 5 213 65 86 -32 -55 normal
 1145 art/ae_nabs4.png 8bpp 85 213 64 86 -31 -55 normal
 1146 art/ae_nabs4.png 8bpp 164 213 64 99 -31 -68 normal
 1147 art/ae_nabs4.png 8bpp 243 213 66 85 -32 -54 normal
 1148 art/ae_nabs4.png 8bpp 324 213 66 85 -32 -54 normal
 1149 art/ae_nabs4.png 8bpp 405 213 65 84 -31 -53 normal
 1150 art/ae_nabs4.png 8bpp 485 213 65 99 -31 -68 normal
 1151 art/ae_nabs4.png 8bpp 565 213 66 88 -32 -57 normal
 1152 art/ae_nabs4.png 8bpp 646 213 66 88 -32 -57 normal
 1153 art/ae_nabs4.png 8bpp 5 317 65 88 -31 -57 normal
 1154 art/ae_nabs4.png 8bpp 85 317 65 99 -31 -68 normal
 1155 art/ae_nabs4.png 8bpp 165 317 66 93 -32 -62 normal
 1156 art/ae_nabs4.png 8bpp 246 317 66 93 -32 -62 normal
 1157 art/ae_nabs4.png 8bpp 327 317 65 93 -31 -62 normal
 1158 art/ae_nabs4.png 8bpp 407 317 65 99 -31 -68 normal
 1159 art/ae_nabs4.png 8bpp 487 317 65 96 -32 -65 normal
 1160 art/ae_nabs4.png 8bpp 567 317 65 96 -32 -65 normal
 1161 art/ae_nabs4.png 8bpp 647 317 64 96 -31 -65 normal
 1162 art/ae_nabs4.png 8bpp 5 421 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0F // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0F C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1302 * 7 03 07 01 0F 00 A1 00
// ID 10 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
 1303 * 6 01 07 2D FF 01 00
 1304 art/ae_nabs4.png 8bpp 84 421 64 38 -31 -7 normal
 1305 art/ae_nabs4.png 8bpp 163 421 64 73 -31 -42 normal
 1306 art/ae_nabs4.png 8bpp 242 421 64 89 -31 -58 normal
 1307 art/ae_nabs4.png 8bpp 321 421 64 89 -31 -58 normal
 1308 art/ae_nabs4.png 8bpp 400 421 64 31 -31 0 normal
 1309 art/ae_nabs4.png 8bpp 479 421 65 86 -32 -55 normal
 1310 art/ae_nabs4.png 8bpp 559 421 65 86 -32 -55 normal
 1311 art/ae_nabs4.png 8bpp 639 421 64 86 -31 -55 normal
 1312 art/ae_nabs4.png 8bpp 718 421 64 99 -31 -68 normal
 1313 art/ae_nabs4.png 8bpp 5 525 66 85 -32 -54 normal
 1314 art/ae_nabs4.png 8bpp 86 525 66 85 -32 -54 normal
 1315 art/ae_nabs4.png 8bpp 167 525 65 84 -31 -53 normal
 1316 art/ae_nabs4.png 8bpp 247 525 65 98 -31 -68 normal
 1317 art/ae_nabs4.png 8bpp 327 525 66 88 -32 -57 normal
 1318 art/ae_nabs4.png 8bpp 408 525 66 88 -32 -57 normal
 1319 art/ae_nabs4.png 8bpp 489 525 65 88 -31 -57 normal
 1320 art/ae_nabs4.png 8bpp 569 525 65 99 -31 -68 normal
 1321 art/ae_nabs4.png 8bpp 649 525 66 93 -32 -62 normal
 1322 art/ae_nabs4.png 8bpp 5 629 65 93 -32 -62 normal
 1323 art/ae_nabs4.png 8bpp 85 629 65 93 -31 -62 normal
 1324 art/ae_nabs4.png 8bpp 165 629 65 99 -31 -68 normal
 1325 art/ae_nabs4.png 8bpp 245 629 65 96 -32 -65 normal
 1326 art/ae_nabs4.png 8bpp 325 629 65 96 -32 -65 normal
 1327 art/ae_nabs4.png 8bpp 405 629 64 96 -31 -65 normal
 1328 art/ae_nabs4.png 8bpp 484 629 64 99 -31 -68 normal
 1329 art/ae_nabs4.png 8bpp 563 629 65 86 -32 -55 normal
 1330 art/ae_nabs4.png 8bpp 643 629 65 86 -32 -55 normal
 1331 art/ae_nabs4.png 8bpp 5 733 64 86 -31 -55 normal
 1332 art/ae_nabs4.png 8bpp 84 733 64 99 -31 -68 normal
 1333 art/ae_nabs4.png 8bpp 163 733 66 85 -32 -54 normal
 1334 art/ae_nabs4.png 8bpp 244 733 66 85 -32 -54 normal
 1335 art/ae_nabs4.png 8bpp 325 733 65 84 -31 -53 normal
 1336 art/ae_nabs4.png 8bpp 405 733 65 99 -31 -68 normal
 1337 art/ae_nabs4.png 8bpp 485 733 66 88 -32 -57 normal
 1338 art/ae_nabs4.png 8bpp 566 733 66 88 -32 -57 normal
 1339 art/ae_nabs4.png 8bpp 647 733 65 88 -31 -57 normal
 1340 art/ae_nabs4.png 8bpp 5 837 65 99 -31 -68 normal
 1341 art/ae_nabs4.png 8bpp 85 837 66 93 -32 -62 normal
 1342 art/ae_nabs4.png 8bpp 166 837 66 93 -32 -62 normal
 1343 art/ae_nabs4.png 8bpp 247 837 65 93 -31 -62 normal
 1344 art/ae_nabs4.png 8bpp 327 837 65 99 -31 -68 normal
 1345 art/ae_nabs4.png 8bpp 407 837 65 96 -32 -65 normal
 1346 art/ae_nabs4.png 8bpp 487 837 65 96 -32 -65 normal
 1347 art/ae_nabs4.png 8bpp 567 837 64 96 -31 -65 normal
 1348 art/ae_nabs4.png 8bpp 646 837 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  10 // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  10 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1488 * 7 03 07 01 10 00 A1 00
// ID 11 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
 1489 * 6 01 07 2D FF 01 00
 1490 art/ae_nabs4.png 8bpp 5 941 64 31 -31 0 normal
 1491 art/ae_nabs5.png 8bpp 5 5 64 82 -31 -51 normal
 1492 art/ae_nabs5.png 8bpp 84 5 64 91 -31 -60 normal
 1493 art/ae_nabs5.png 8bpp 163 5 64 91 -31 -60 normal
 1494 art/ae_nabs5.png 8bpp 242 5 65 31 -31 0 normal
 1495 art/ae_nabs5.png 8bpp 322 5 65 94 -31 -63 normal
 1496 art/ae_nabs5.png 8bpp 402 5 65 94 -31 -63 normal
 1497 art/ae_nabs5.png 8bpp 482 5 64 91 -31 -60 normal
 1498 art/ae_nabs5.png 8bpp 561 5 64 108 -31 -77 normal
 1499 art/ae_nabs5.png 8bpp 640 5 66 94 -32 -63 normal
 1500 art/ae_nabs5.png 8bpp 5 118 66 94 -32 -63 normal
 1501 art/ae_nabs5.png 8bpp 86 118 65 91 -32 -60 normal
 1502 art/ae_nabs5.png 8bpp 166 118 65 108 -32 -77 normal
 1503 art/ae_nabs5.png 8bpp 246 118 65 94 -31 -63 normal
 1504 art/ae_nabs5.png 8bpp 326 118 65 94 -31 -63 normal
 1505 art/ae_nabs5.png 8bpp 406 118 64 91 -31 -60 normal
 1506 art/ae_nabs5.png 8bpp 485 118 64 108 -31 -77 normal
 1507 art/ae_nabs5.png 8bpp 564 118 66 94 -32 -63 normal
 1508 art/ae_nabs5.png 8bpp 645 118 66 94 -32 -63 normal
 1509 art/ae_nabs5.png 8bpp 5 231 65 91 -32 -60 normal
 1510 art/ae_nabs5.png 8bpp 85 231 65 108 -32 -77 normal
 1511 art/ae_nabs5.png 8bpp 165 231 65 94 -31 -63 normal
 1512 art/ae_nabs5.png 8bpp 245 231 65 94 -31 -63 normal
 1513 art/ae_nabs5.png 8bpp 325 231 64 91 -31 -60 normal
 1514 art/ae_nabs5.png 8bpp 404 231 64 108 -31 -77 normal
 1515 art/ae_nabs5.png 8bpp 483 231 65 94 -31 -63 normal
 1516 art/ae_nabs5.png 8bpp 563 231 65 94 -31 -63 normal
 1517 art/ae_nabs5.png 8bpp 643 231 64 91 -31 -60 normal
 1518 art/ae_nabs5.png 8bpp 5 344 64 108 -31 -77 normal
 1519 art/ae_nabs5.png 8bpp 84 344 66 94 -32 -63 normal
 1520 art/ae_nabs5.png 8bpp 165 344 66 94 -32 -63 normal
 1521 art/ae_nabs5.png 8bpp 246 344 65 91 -32 -60 normal
 1522 art/ae_nabs5.png 8bpp 326 344 65 108 -32 -77 normal
 1523 art/ae_nabs5.png 8bpp 406 344 65 94 -31 -63 normal
 1524 art/ae_nabs5.png 8bpp 486 344 65 94 -31 -63 normal
 1525 art/ae_nabs5.png 8bpp 566 344 64 91 -31 -60 normal
 1526 art/ae_nabs5.png 8bpp 645 344 64 108 -31 -77 normal
 1527 art/ae_nabs5.png 8bpp 5 457 66 95 -32 -64 normal
 1528 art/ae_nabs5.png 8bpp 86 457 66 94 -32 -63 normal
 1529 art/ae_nabs5.png 8bpp 167 457 65 91 -32 -60 normal
 1530 art/ae_nabs5.png 8bpp 247 457 65 108 -32 -77 normal
 1531 art/ae_nabs5.png 8bpp 327 457 64 94 -31 -63 normal
 1532 art/ae_nabs5.png 8bpp 406 457 65 94 -31 -63 normal
 1533 art/ae_nabs5.png 8bpp 486 457 64 91 -31 -60 normal
 1534 art/ae_nabs5.png 8bpp 565 457 64 108 -31 -77 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  11 // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  11 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1674 * 7 03 07 01 11 00 A1 00
// ID 12 Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
 1675 * 6 01 07 2D FF 01 00
 1676 art/ae_nabs5.png 8bpp 644 457 64 36 -31 -5 normal
 1677 art/ae_nabs5.png 8bpp 5 570 64 82 -31 -51 normal
 1678 art/ae_nabs5.png 8bpp 84 570 64 82 -31 -51 normal
 1679 art/ae_nabs5.png 8bpp 163 570 64 82 -31 -51 normal
 1680 art/ae_nabs5.png 8bpp 242 570 65 31 -31 0 normal
 1681 art/ae_nabs5.png 8bpp 322 570 65 94 -31 -63 normal
 1682 art/ae_nabs5.png 8bpp 402 570 65 94 -31 -63 normal
 1683 art/ae_nabs5.png 8bpp 482 570 64 91 -31 -60 normal
 1684 art/ae_nabs5.png 8bpp 561 570 64 108 -31 -77 normal
 1685 art/ae_nabs5.png 8bpp 640 570 66 94 -32 -63 normal
 1686 art/ae_nabs5.png 8bpp 5 683 66 94 -32 -63 normal
 1687 art/ae_nabs5.png 8bpp 86 683 65 91 -32 -60 normal
 1688 art/ae_nabs5.png 8bpp 166 683 65 108 -32 -77 normal
 1689 art/ae_nabs5.png 8bpp 246 683 65 94 -31 -63 normal
 1690 art/ae_nabs5.png 8bpp 326 683 65 94 -31 -63 normal
 1691 art/ae_nabs5.png 8bpp 406 683 64 91 -31 -60 normal
 1692 art/ae_nabs5.png 8bpp 485 683 64 108 -31 -77 normal
 1693 art/ae_nabs5.png 8bpp 564 683 66 94 -32 -63 normal
 1694 art/ae_nabs5.png 8bpp 645 683 66 94 -32 -63 normal
 1695 art/ae_nabs5.png 8bpp 5 796 65 91 -32 -60 normal
 1696 art/ae_nabs5.png 8bpp 85 796 65 108 -32 -77 normal
 1697 art/ae_nabs5.png 8bpp 165 796 65 94 -31 -63 normal
 1698 art/ae_nabs5.png 8bpp 245 796 65 94 -31 -63 normal
 1699 art/ae_nabs5.png 8bpp 325 796 64 91 -31 -60 normal
 1700 art/ae_nabs5.png 8bpp 404 796 64 108 -31 -77 normal
 1701 art/ae_nabs5.png 8bpp 483 796 65 94 -31 -63 normal
 1702 art/ae_nabs5.png 8bpp 563 796 65 94 -31 -63 normal
 1703 art/ae_nabs5.png 8bpp 643 796 64 91 -31 -60 normal
 1704 art/ae_nabs6.png 8bpp 5 5 64 108 -31 -77 normal
 1705 art/ae_nabs6.png 8bpp 84 5 66 94 -32 -63 normal
 1706 art/ae_nabs6.png 8bpp 165 5 66 94 -32 -63 normal
 1707 art/ae_nabs6.png 8bpp 246 5 65 91 -32 -60 normal
 1708 art/ae_nabs6.png 8bpp 326 5 65 108 -32 -77 normal
 1709 art/ae_nabs6.png 8bpp 406 5 65 94 -31 -63 normal
 1710 art/ae_nabs6.png 8bpp 486 5 65 94 -31 -63 normal
 1711 art/ae_nabs6.png 8bpp 566 5 64 91 -31 -60 normal
 1712 art/ae_nabs6.png 8bpp 645 5 64 108 -31 -77 normal
 1713 art/ae_nabs6.png 8bpp 5 118 66 95 -32 -64 normal
 1714 art/ae_nabs6.png 8bpp 86 118 66 94 -32 -63 normal
 1715 art/ae_nabs6.png 8bpp 167 118 65 91 -32 -60 normal
 1716 art/ae_nabs6.png 8bpp 247 118 65 108 -32 -77 normal
 1717 art/ae_nabs6.png 8bpp 327 118 64 94 -31 -63 normal
 1718 art/ae_nabs6.png 8bpp 406 118 65 94 -31 -63 normal
 1719 art/ae_nabs6.png 8bpp 486 118 64 91 -31 -60 normal
 1720 art/ae_nabs6.png 8bpp 565 118 64 108 -31 -77 normal
0 * 0 00 07 // action 0 feat 07
  11 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  12 // ID number
  08 34
  09 01
//		0A 00 1D 
  10 30 75
  11 9B
  13 10 78
  14 01
  18 08
  1D 04
  21 67 07
  22 9D 07
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  12 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 0 * 0 03 07 01 12 00 A1 00
// ID 13 - 14 Large Deco Building (North and South)
// Large Deco Building (NW)
0 * 0 01 07 06 FF 01 00
0 art/ae_nabs6.png 8bpp 644 118 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 5 231 64 112 -31 -81 normal
0 art/ae_nabs6.png 8bpp 84 231 64 158 -31 -127 normal
0 art/ae_nabs6.png 8bpp 163 231 64 155 -31 -124 normal
0 art/ae_nabs6.png 8bpp 242 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 321 231 64 155 -31 -124 normal
// Action 0
0 * 0 00 07
  0B
  01
  13
  08 42
  09 0a
//		0A 00 1D 
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 20
  19 02
  1D 04
  21 67 07
  22 9D 07
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  13 C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 // Act 2 feat 7
   00 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   00 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   01 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   01 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   02 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   02 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   03 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   03 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   04 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   05 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   10 // setid
   81 // town var
   43 // terrain type
   00 // shift
   FF // and mask
   02 // ranges to follow
   03 00 // setid to use for not snowy
   00 // minval
   03 // maxval
   04 00 // setid to use for snowy
   04 // minval for snow
   04 // maxval for snow
   03 00 // default setid to use
0 * 0 02 07 // Act 2 feat 7
   11 // setid
   81 // town var
   40 // construction stage
   00 // shift
   03 // and mask (only get the contrustion stages not the rest of the bits
   03 // ranges to follow
   00 00 // set id to use
   00 // minval const stage 0
   00 // maxval const stage 0
   01 00 // set id to use
   01 // minval const stage 1
   01 // maxval const stage 1
   02 00 // setid to use
   02 // maxval const stage 2
   02 // maxval const stage 2
   10 00 // defualt setid to use - building finished
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
   14 // setid
   81 // town var
   61 // how many of a building id exist
   13 // the building id to check, ours!
   00 // shift
   FF // and mask
   02 // ranges to follow
   01 80 // setid to use (protec)
   00 // minval
   01 // maxval		
   00 80 // setid to use (unprotec)
   02 // minval
   FF // maxval
   00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
   15 // setid
   81 // town var
   61 // how many of a building id exist
   13 // the building id to check, ours!
   00 // shift
   FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   01 // minval
   FF // maxval
   01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
   16 // setid
   86 // another type of town var I forget which
   82 // how many people exist
   00 // shift
   FF FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   00 00 // minval
   B7 0B // maxval
   15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
   1C // setid
   85 // type, variable of building
   0C // variable 0c current callback
   00 // shift
   FF FF // and mask
   02 // ranges to follow
   16 00 // setid
   17 00 // callback 17 on build
   17 00 // callback 17 on build
   14 00 // setid check how many are left
   43 01 // callback 143 on destruct
   43 01 // callback 143 on destruct
   11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 13 00 1C 00
// Large Deco Building (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/ae_nabs6.png 8bpp 400 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 479 231 64 115 -31 -84 normal
0 art/ae_nabs6.png 8bpp 558 231 64 171 -31 -140 normal
0 art/ae_nabs6.png 8bpp 637 231 64 165 -31 -134 normal
0 art/ae_nabs6.png 8bpp 716 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 5 407 64 165 -31 -134 normal
// Action 0
0 * 0 00 07
  05
  01
  14
  08 43
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  14 C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 // Act 2 feat 7
   00 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   00 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   01 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   01 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   02 // setid
   00 // not a varact
   54 0F 00 00 // ground sprite
   02 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   03 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   03 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   04 // setid
   00 // not a varact
   04 00 00 80 // ground sprite
   05 00 00 80 // building sprite
   00 // xoffs
   00 // yoffs
   10 // xext
   10 // yext
   04 // zext
0 * 0 02 07 // Act 2 feat 7
   10 // setid
   81 // town var
   43 // terrain type
   00 // shift
   FF // and mask
   02 // ranges to follow
   03 00 // setid to use for not snowy
   00 // minval
   03 // maxval
   04 00 // setid to use for snowy
   04 // minval for snow
   04 // maxval for snow
   03 00 // default setid to use
0 * 0 02 07 // Act 2 feat 7
   11 // setid
   81 // town var
   40 // construction stage
   00 // shift
   03 // and mask (only get the contrustion stages not the rest of the bits
   03 // ranges to follow
   00 00 // set id to use
   00 // minval const stage 0
   00 // maxval const stage 0
   01 00 // set id to use
   01 // minval const stage 1
   01 // maxval const stage 1
   02 00 // setid to use
   02 // maxval const stage 2
   02 // maxval const stage 2
   10 00 // defualt setid to use - building finished
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
   14 // setid
   81 // town var
   61 // how many of a building id exist
   14 // the building id to check, ours!
   00 // shift
   FF // and mask
   02 // ranges to follow
   01 80 // setid to use (protec)
   00 // minval
   01 // maxval		
   00 80 // setid to use (unprotec)
   02 // minval
   FF // maxval
   00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
   15 // setid
   81 // town var
   61 // how many of a building id exist
   14 // the building id to check, ours!
   00 // shift
   FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   01 // minval
   FF // maxval
   01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
   16 // setid
   86 // another type of town var I forget which
   82 // how many people exist
   00 // shift
   FF FF // and mask
   01 // ranges to follow
   00 80 // setid to use (cockblock)
   00 00 // minval
   B7 0B // maxval
   15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
   1C // setid
   85 // type, variable of building
   0C // variable 0c current callback
   00 // shift
   FF FF // and mask
   02 // ranges to follow
   16 00 // setid
   17 00 // callback 17 on build
   17 00 // callback 17 on build
   14 00 // setid check how many are left
   43 01 // callback 143 on destruct
   43 01 // callback 143 on destruct
   11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 14 00 1C 00
// ID 15 Deco Buildings
// Deco Buildings
 1909 * 6 01 07 06 FF 01 00
 1910 art/ae_nabs6.png 8bpp 84 407 64 31 -31 0 normal
 1911 art/ae_nabs6.png 8bpp 163 407 64 109 -31 -78 normal
 1912 art/ae_nabs6.png 8bpp 242 407 66 143 -32 -112 normal
 1913 art/ae_nabs6.png 8bpp 323 407 66 153 -32 -122 normal
 1914 art/ae_nabs6.png 8bpp 404 407 64 31 -31 0 normal
 1915 art/ae_nabs6.png 8bpp 483 407 66 153 -32 -122 normal
 1916 * 24 00 07
  0B
  01
  15
  08 34
  09 01
//		0A 00 1D 
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 04
  19 02 // Flat out protected.
  1D 04
  21 67 07
  22 9D 07
 // Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 15 C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 1918 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1919 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1920 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1921 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1922 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1923 * 18 02 07 1E 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1924 * 22 02 07 1F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 1E 00
 1925 * 6 01 07 06 FF 01 00
 1926 art/ae_nabs6.png 8bpp 564 407 64 38 -31 -7 normal
 1927 art/ae_nabs6.png 8bpp 643 407 64 113 -31 -82 normal
 1928 art/ae_nabs6.png 8bpp 5 577 64 161 -31 -130 normal
 1929 art/ae_nabs6.png 8bpp 84 577 66 165 -32 -134 normal
 1930 art/ae_nabs6.png 8bpp 165 577 66 31 -32 0 normal
 1931 art/ae_nabs6.png 8bpp 246 577 66 165 -32 -134 normal
 1932 * 17 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1933 * 17 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1934 * 17 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1935 * 17 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1936 * 17 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1937 * 18 02 07 20 81 43 00 FF 02 08 00 00 03 09 00 04 04 03 00
 1938 * 22 02 07 21 81 40 00 03 03 05 00 00 00 06 00 01 01 07 00 02 02 20 00
 1939 * 6 01 07 06 FF 01 00
 1940 art/ae_nabs6.png 8bpp 327 577 64 38 -31 -7 normal
 1941 art/ae_nabs6.png 8bpp 406 577 64 104 -31 -73 normal
 1942 art/ae_nabs6.png 8bpp 485 577 64 146 -31 -115 normal
 1943 art/ae_nabs6.png 8bpp 564 577 65 156 -31 -125 normal
 1944 art/ae_nabs6.png 8bpp 644 577 65 31 -32 0 normal
 1945 art/ae_nabs6.png 8bpp 5 747 65 156 -31 -125 normal
 1946 * 17 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1947 * 17 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1948 * 17 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1949 * 17 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1950 * 17 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1951 * 18 02 07 22 81 43 00 FF 02 0D 00 00 03 0E 00 04 04 03 00
 1952 * 22 02 07 23 81 40 00 03 03 0A 00 00 00 0B 00 01 01 0C 00 02 02 22 00
 1953 * 6 01 07 06 FF 01 00
 1954 art/ae_nabs6.png 8bpp 85 747 64 45 -31 -14 normal
 1955 art/ae_nabs6.png 8bpp 164 747 64 107 -31 -76 normal
 1956 art/ae_nabs6.png 8bpp 243 747 64 150 -31 -119 normal
 1957 art/ae_nabs6.png 8bpp 322 747 64 167 -31 -136 normal
 1958 art/ae_nabs6.png 8bpp 401 747 64 31 -31 0 normal
 1959 art/ae_nabs6.png 8bpp 480 747 64 167 -31 -136 normal
 1960 * 17 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1961 * 17 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1962 * 17 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1963 * 17 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1964 * 17 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1965 * 18 02 07 24 81 43 00 FF 02 12 00 00 03 13 00 04 04 03 00
 1966 * 22 02 07 25 81 40 00 03 03 0F 00 00 00 10 00 01 01 11 00 02 02 24 00
 1967 * 6 01 07 06 FF 01 00
 1968 art/ae_nabs6.png 8bpp 559 747 64 35 -31 -4 normal
 1969 art/ae_nabs6.png 8bpp 638 747 64 114 -31 -83 normal
 1970 art/ae_nabs6.png 8bpp 717 747 64 146 -31 -115 normal
 1971 art/ae_nabs7.png 8bpp 5 5 64 159 -31 -128 normal
 1972 art/ae_nabs7.png 8bpp 84 5 64 31 -31 0 normal
 1973 art/ae_nabs7.png 8bpp 163 5 64 159 -31 -128 normal
 1974 * 17 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1975 * 17 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1976 * 17 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1977 * 17 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1978 * 17 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1979 * 18 02 07 26 81 43 00 FF 02 17 00 00 03 18 00 04 04 03 00
 1980 * 22 02 07 27 81 40 00 03 03 14 00 00 00 15 00 01 01 16 00 02 02 26 00
 1981 * 6 01 07 06 FF 01 00
 1982 art/ae_nabs7.png 8bpp 242 5 64 33 -31 -2 normal
 1983 art/ae_nabs7.png 8bpp 321 5 64 103 -31 -72 normal
 1984 art/ae_nabs7.png 8bpp 400 5 64 138 -31 -107 normal
 1985 art/ae_nabs7.png 8bpp 479 5 64 151 -31 -120 normal
 1986 art/ae_nabs7.png 8bpp 558 5 64 31 -31 0 normal
 1987 art/ae_nabs7.png 8bpp 637 5 64 151 -31 -120 normal
 1988 * 17 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1989 * 17 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1990 * 17 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1991 * 17 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1992 * 17 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1993 * 18 02 07 28 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
 1994 * 22 02 07 29 81 40 00 03 03 19 00 00 00 1A 00 01 01 1B 00 02 02 28 00
 // Pick random variation
1995 * 23 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  15 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  05 // maxval		
  00 80 // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  2A 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
2003 * 7 03 07 01 15 00 3C 00
// ID 16 small building 04
// Small Building 4 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/smallbuilding04.png 8bpp 82 11 64 34 -31 -3 normal
0 art/smallbuilding04.png 8bpp 162 11 64 57 -31 -26 normal
0 art/smallbuilding04.png 8bpp 242 11 64 57 -31 -26 normal
0 art/smallbuilding04.png 8bpp 322 11 64 57 -31 -26 normal
0 art/smallbuilding04.png 8bpp 2 11 64 32 -31 -1 normal
0 art/smallbuilding04.png 8bpp 402 11 64 57 -31 -26 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  16 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  16 C9 // Offset
  "Small Building 04" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  16 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 17 small building 04
// Small Building 5 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/smallbuilding05.png 8bpp 85 10 64 34 -31 -3 normal
0 art/smallbuilding05.png 8bpp 165 10 68 63 -31 -32 normal
0 art/smallbuilding05.png 8bpp 245 10 64 66 -31 -35 normal
0 art/smallbuilding05.png 8bpp 325 10 64 66 -31 -35 normal
0 art/smallbuilding05.png 8bpp 5 10 64 32 -31 -1 normal
0 art/smallbuilding05.png 8bpp 405 10 64 66 -31 -35 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  17 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  17 C9 // Offset
  "Small Building 05" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  17 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 18 small building 06
// Small Building 6 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art/smallbuilding06.png 8bpp 92 20 64 34 -31 -3 normal
0 art/smallbuilding06.png 8bpp 167 20 64 57 -31 -28 normal
0 art/smallbuilding06.png 8bpp 247 20 64 59 -31 -28 normal
0 art/smallbuilding06.png 8bpp 327 20 64 59 -31 -28 normal
0 art/smallbuilding06.png 8bpp 12 20 64 31 -31 0 normal
0 art/smallbuilding06.png 8bpp 407 20 64 59 -31 -28 normal
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  18 // ID
  08 46 // Substitute type
  09 01 // Building flags
//		0A 00 1D // Set years availible
  13 0C 78 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
  21 67 07
  22 9D 07
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  18 C9 // Offset
  "Small Building 06" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  18 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 19 - 1A Flatiron (North and South)
// Flatiron (NW)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/flatiron.png 8bpp 6 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 144 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 284 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 425 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 564 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 702 3 64 119 -31 -88 normal
// Action 0
0 * 0 00 07
  0B
  01
  19
  08 42
  09 0a
//		0A 00 1D 
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 20
  19 02 // must protec
  1D 04
  21 67 07
  22 9D 07
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  19 C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 00 03 07 01 19 00 1C 00
// Flatiron (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/flatiron.png 8bpp 76 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 213 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 354 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 495 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 633 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 773 3 64 119 -31 -88 normal
// Action 0
0 * 0 00 07
  05
  01
  1A
  08 43
  10 60 EA
  11 FF
  19 02 // must protec
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1A C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1A 00 1C 00
// ID 1B - 1E Department Store (North, East, West and South)
// Department Store (N)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 7 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 7 64 84 -31 -53 normal
0 art/departmentstore.png 8bpp 165 7 64 76 -31 -45 normal
0 art/departmentstore.png 8bpp 245 7 64 79 -31 -48 normal
0 art/departmentstore.png 8bpp 319 7 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 7 64 79 -31 -48 normal
// Action 0
0 * 0 00 07
  0B
  01
  1B
  08 20
  09 12
//		0A 00 1D
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 04
  19 02
  1D 04
  21 67 07
  22 9D 07
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1B C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1B 00 1C 00
// Department Store (E)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 109 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 109 64 80 -31 -49 normal
0 art/departmentstore.png 8bpp 165 109 64 78 -31 -47 normal
0 art/departmentstore.png 8bpp 245 109 64 78 -31 -47 normal
0 art/departmentstore.png 8bpp 316 109 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 109 64 78 -31 -47 normal
// Action 0
0 * 0 00 07
  05
  01
  1C
  08 21
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1C C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1C 00 1C 00
// Department Store (W)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 206 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 206 64 70 -31 -39 normal
0 art/departmentstore.png 8bpp 165 206 64 74 -31 -43 normal
0 art/departmentstore.png 8bpp 245 206 64 74 -31 -43 normal
0 art/departmentstore.png 8bpp 316 206 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 206 64 74 -31 -43 normal
// Action 0
0 * 0 00 07
  05
  01
  1D
  08 22
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1D C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1D 00 1C 00
// Department Store (S)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 85 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 163 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 243 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 316 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 392 308 64 31 -31 0 normal
// Action 0
0 * 0 00 07
  05
  01
  1E
  08 23
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1E C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1E 00 1C 00
// Special ones for scenario editor after 1950
// ID 1F - 20 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:   
    0 art/ae_nabs1.png 8bpp 163 241 32 35 -31 -4 normal
    0 art/ae_nabs1.png 8bpp 210 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 257 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 304 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 351 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 398 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 445 241 32 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 492 241 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 571 241 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 650 241 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 5 300 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 300 64 54 -31 -23 normal
// Action 0 to set properties:  
    0 * 0 00 07 // Action 0, Feature 07
                 08 // Properties to Change
                 01 // Change properties for how many ID's
                 1F // ID
                 08 42 // Substitute type
                 09 0A // Building flags
                 0A 1E FF // Set years availible
                 10 20 4E // Local Authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 78 // Set availibilty mask
                 18 04 // Probability
   19 03
                 1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1F C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
    0 * 0 03 07 01 1F 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:
    0 art/ae_nabs1.png 8bpp 163 300 64 61 -31 -30 normal
    0 art/ae_nabs1.png 8bpp 242 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 321 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 400 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 479 300 64 71 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 558 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 637 300 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 716 300 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 5 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 163 376 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 376 64 54 -31 -23 normal
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 7
                 05 // Properties to change
                 01 // Change properties for how many ID's
                 20 // ID
                 08 43 // Substitute type
                 10 20 4E // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
   19 03
                 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 20 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 20 00 35 00
// Fin
// ID 21 - 22 Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:  
    0 art/ae_nabs1.png 8bpp 321 376 32 47 1 -16 normal
    0 art/ae_nabs1.png 8bpp 368 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 415 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 462 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 509 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 556 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 603 376 32 54 1 -23 normal
    0 art/ae_nabs1.png 8bpp 650 376 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 5 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 84 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 163 435 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 435 64 54 -31 -23 normal
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 07
                 08 // Properties to change
                 01 // Change properties for how many ID's
                 21 // ID
                 08 4A // Substitute type
                 09 06 // Building flags
                 0A 1E FF // Set years availible
                 10 20 4E // Local authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 78 // Set availibility mask
                 18 04 // Probability
   19 03
                 1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 21 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 21 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:      
    0 art/ae_nabs1.png 8bpp 321 435 64 63 -31 -32 normal
    0 art/ae_nabs1.png 8bpp 400 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 479 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 558 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 637 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 716 435 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 5 510 64 70 -31 -39 normal
    0 art/ae_nabs1.png 8bpp 84 510 64 31 -31 0 normal
    0 art/ae_nabs1.png 8bpp 163 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 242 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 321 510 64 54 -31 -23 normal
    0 art/ae_nabs1.png 8bpp 400 510 64 54 -31 -23 normal
// Action 0 to set properties:    
    0 * 0 00 07
                 05
                 01
                 22
                 08 4B
                 10 20 4E
                 11 64
                 19 03
                 1D 04
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 22 C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  F3 01 // maxval
  01 80 // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  00 80 // unprotect
  00 80 // unprotect
  00 80 // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  00 80 // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  00 80 // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  372 * 7 03 07 01 22 00 35 00
// Fin  
// ID 23 Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
0 * 0 01 07 2D FF 01 00
0 art/ae_nabs1.png 8bpp 479 510 65 31 -32 0 normal
0 art/ae_nabs1.png 8bpp 559 510 64 89 -31 -58 normal
0 art/ae_nabs1.png 8bpp 638 510 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 717 510 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 5 604 64 31 -31 0 normal
0 art/ae_nabs1.png 8bpp 84 604 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 164 604 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 244 604 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 323 604 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 402 604 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 483 604 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 564 604 65 90 -32 -59 normal
0 art/ae_nabs1.png 8bpp 644 604 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 5 708 66 88 -32 -57 normal
0 art/ae_nabs1.png 8bpp 86 708 66 90 -32 -59 normal
0 art/ae_nabs1.png 8bpp 167 708 65 88 -32 -57 normal
0 art/ae_nabs1.png 8bpp 247 708 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 327 708 66 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 408 708 66 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 489 708 65 93 -32 -62 normal
0 art/ae_nabs1.png 8bpp 569 708 65 99 -32 -68 normal
0 art/ae_nabs1.png 8bpp 649 708 65 95 -31 -65 normal
0 art/ae_nabs1.png 8bpp 5 812 66 96 -32 -65 normal
0 art/ae_nabs1.png 8bpp 86 812 64 96 -31 -65 normal
0 art/ae_nabs1.png 8bpp 165 812 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 244 812 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 324 812 65 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 404 812 64 86 -31 -55 normal
0 art/ae_nabs1.png 8bpp 483 812 64 99 -31 -68 normal
0 art/ae_nabs1.png 8bpp 562 812 66 85 -32 -54 normal
0 art/ae_nabs1.png 8bpp 643 812 66 85 -32 -54 normal
0 art/ae_nabs2.png 8bpp 5 5 65 84 -32 -53 normal
0 art/ae_nabs2.png 8bpp 85 5 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 165 5 66 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 246 5 66 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 327 5 65 88 -32 -57 normal
0 art/ae_nabs2.png 8bpp 407 5 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 487 5 66 93 -32 -62 normal
0 art/ae_nabs2.png 8bpp 568 5 67 92 -33 -61 normal
0 art/ae_nabs2.png 8bpp 650 5 65 93 -32 -62 normal
0 art/ae_nabs2.png 8bpp 5 109 65 99 -32 -68 normal
0 art/ae_nabs2.png 8bpp 85 109 65 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 165 109 65 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 245 109 64 95 -31 -64 normal
0 art/ae_nabs2.png 8bpp 324 109 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  23 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         23 C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  23 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
0 * 0 03 07 01 23 00 A1 00
// ID 24 Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
  559 * 6 01 07 2D FF 01 00
  560 art/ae_nabs2.png 8bpp 403 109 63 38 -31 -7 normal
  561 art/ae_nabs2.png 8bpp 481 109 64 81 -31 -50 normal
  562 art/ae_nabs2.png 8bpp 560 109 64 89 -31 -58 normal
  563 art/ae_nabs2.png 8bpp 639 109 64 89 -31 -58 normal
  564 art/ae_nabs2.png 8bpp 718 109 64 31 -31 0 normal
  565 art/ae_nabs2.png 8bpp 5 213 65 86 -31 -55 normal
  566 art/ae_nabs2.png 8bpp 85 213 65 86 -31 -55 normal
  567 art/ae_nabs2.png 8bpp 165 213 64 86 -31 -55 normal
  568 art/ae_nabs2.png 8bpp 244 213 64 99 -31 -68 normal
  569 art/ae_nabs2.png 8bpp 323 213 66 85 -32 -54 normal
  570 art/ae_nabs2.png 8bpp 404 213 66 85 -32 -54 normal
  571 art/ae_nabs2.png 8bpp 485 213 65 90 -32 -59 normal
  572 art/ae_nabs2.png 8bpp 565 213 65 99 -32 -68 normal
  573 art/ae_nabs2.png 8bpp 645 213 66 88 -32 -57 normal
  574 art/ae_nabs2.png 8bpp 5 317 66 90 -32 -59 normal
  575 art/ae_nabs2.png 8bpp 86 317 65 88 -32 -57 normal
  576 art/ae_nabs2.png 8bpp 166 317 65 99 -32 -68 normal
  577 art/ae_nabs2.png 8bpp 246 317 66 93 -32 -62 normal
  578 art/ae_nabs2.png 8bpp 327 317 66 93 -32 -62 normal
  579 art/ae_nabs2.png 8bpp 408 317 65 93 -32 -62 normal
  580 art/ae_nabs2.png 8bpp 488 317 65 99 -32 -68 normal
  581 art/ae_nabs2.png 8bpp 568 317 65 95 -31 -65 normal
  582 art/ae_nabs2.png 8bpp 648 317 66 96 -32 -65 normal
  583 art/ae_nabs2.png 8bpp 5 421 64 96 -31 -65 normal
  584 art/ae_nabs2.png 8bpp 84 421 64 99 -31 -68 normal
  585 art/ae_nabs2.png 8bpp 163 421 65 86 -31 -55 normal
  586 art/ae_nabs2.png 8bpp 243 421 65 86 -31 -55 normal
  587 art/ae_nabs2.png 8bpp 323 421 64 86 -31 -55 normal
  588 art/ae_nabs2.png 8bpp 402 421 64 99 -31 -68 normal
  589 art/ae_nabs2.png 8bpp 481 421 66 85 -32 -54 normal
  590 art/ae_nabs2.png 8bpp 562 421 66 85 -32 -54 normal
  591 art/ae_nabs2.png 8bpp 643 421 65 84 -32 -53 normal
  592 art/ae_nabs2.png 8bpp 5 525 65 99 -32 -68 normal
  593 art/ae_nabs2.png 8bpp 85 525 66 88 -32 -57 normal
  594 art/ae_nabs2.png 8bpp 166 525 66 88 -32 -57 normal
  595 art/ae_nabs2.png 8bpp 247 525 65 88 -32 -57 normal
  596 art/ae_nabs2.png 8bpp 327 525 65 99 -32 -68 normal
  597 art/ae_nabs2.png 8bpp 407 525 66 93 -32 -62 normal
  598 art/ae_nabs2.png 8bpp 488 525 67 92 -33 -61 normal
  599 art/ae_nabs2.png 8bpp 570 525 65 93 -32 -62 normal
  600 art/ae_nabs2.png 8bpp 650 525 65 99 -32 -68 normal
  601 art/ae_nabs2.png 8bpp 5 629 65 95 -31 -64 normal
  602 art/ae_nabs2.png 8bpp 85 629 65 95 -31 -64 normal
  603 art/ae_nabs2.png 8bpp 165 629 64 95 -31 -64 normal
  604 art/ae_nabs2.png 8bpp 244 629 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  24 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             24 C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  24 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  744 * 7 03 07 01 24 00 A1 00
// ID 25 Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
  745 * 6 01 07 2D FF 01 00
  746 art/ae_nabs2.png 8bpp 323 629 64 31 -31 0 normal
  747 art/ae_nabs2.png 8bpp 402 629 64 90 -31 -59 normal
  748 art/ae_nabs2.png 8bpp 481 629 64 91 -31 -60 normal
  749 art/ae_nabs2.png 8bpp 560 629 64 91 -31 -60 normal
  750 art/ae_nabs2.png 8bpp 639 629 64 31 -31 0 normal
  751 art/ae_nabs2.png 8bpp 718 629 65 94 -32 -63 normal
  752 art/ae_nabs2.png 8bpp 5 733 65 94 -32 -63 normal
  753 art/ae_nabs2.png 8bpp 85 733 64 91 -31 -60 normal
  754 art/ae_nabs2.png 8bpp 164 733 64 109 -31 -78 normal
  755 art/ae_nabs2.png 8bpp 243 733 66 94 -32 -63 normal
  756 art/ae_nabs2.png 8bpp 324 733 66 94 -32 -63 normal
  757 art/ae_nabs2.png 8bpp 405 733 65 91 -31 -60 normal
  758 art/ae_nabs2.png 8bpp 485 733 65 108 -31 -77 normal
  759 art/ae_nabs2.png 8bpp 565 733 65 94 -32 -63 normal
  760 art/ae_nabs2.png 8bpp 645 733 64 94 -32 -63 normal
  761 art/ae_nabs2.png 8bpp 5 847 64 91 -31 -60 normal
  762 art/ae_nabs2.png 8bpp 84 847 64 108 -31 -78 normal
  763 art/ae_nabs2.png 8bpp 163 847 66 94 -32 -63 normal
  764 art/ae_nabs2.png 8bpp 244 847 66 94 -32 -63 normal
  765 art/ae_nabs2.png 8bpp 325 847 65 91 -31 -60 normal
  766 art/ae_nabs2.png 8bpp 405 847 64 108 -31 -77 normal
  767 art/ae_nabs2.png 8bpp 484 847 65 94 -32 -63 normal
  768 art/ae_nabs2.png 8bpp 564 847 65 94 -31 -63 normal
  769 art/ae_nabs2.png 8bpp 644 847 64 91 -31 -60 normal
  770 art/ae_nabs3.png 8bpp 5 5 64 108 -31 -77 normal
  771 art/ae_nabs3.png 8bpp 84 5 65 94 -32 -63 normal
  772 art/ae_nabs3.png 8bpp 164 5 65 94 -32 -63 normal
  773 art/ae_nabs3.png 8bpp 244 5 64 91 -31 -60 normal
  774 art/ae_nabs3.png 8bpp 323 5 64 108 -30 -77 normal
  775 art/ae_nabs3.png 8bpp 402 5 66 94 -32 -63 normal
  776 art/ae_nabs3.png 8bpp 483 5 66 94 -32 -63 normal
  777 art/ae_nabs3.png 8bpp 564 5 65 91 -31 -60 normal
  778 art/ae_nabs3.png 8bpp 644 5 65 108 -31 -77 normal
  779 art/ae_nabs3.png 8bpp 5 118 65 94 -32 -63 normal
  780 art/ae_nabs3.png 8bpp 85 118 65 94 -32 -63 normal
  781 art/ae_nabs3.png 8bpp 165 118 64 91 -31 -60 normal
  782 art/ae_nabs3.png 8bpp 244 118 63 108 -31 -77 normal
  783 art/ae_nabs3.png 8bpp 322 118 66 94 -32 -63 normal
  784 art/ae_nabs3.png 8bpp 403 118 66 94 -32 -63 normal
  785 art/ae_nabs3.png 8bpp 484 118 65 91 -31 -60 normal
  786 art/ae_nabs3.png 8bpp 564 118 65 108 -31 -77 normal
  787 art/ae_nabs3.png 8bpp 644 118 65 94 -32 -63 normal
  788 art/ae_nabs3.png 8bpp 5 231 65 94 -32 -63 normal
  789 art/ae_nabs3.png 8bpp 85 231 64 91 -31 -60 normal
  790 art/ae_nabs3.png 8bpp 164 231 64 108 -30 -77 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  25 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             25 C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  25 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  930 * 7 03 07 01 25 00 A1 00
// ID 26 Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
  931 * 6 01 07 2D FF 01 00
  932 art/ae_nabs3.png 8bpp 243 231 65 36 -31 -5 normal
  933 art/ae_nabs3.png 8bpp 323 231 64 82 -31 -51 normal
  934 art/ae_nabs3.png 8bpp 402 231 64 90 -31 -59 normal
  935 art/ae_nabs3.png 8bpp 481 231 64 90 -31 -59 normal
  936 art/ae_nabs3.png 8bpp 560 231 64 31 -31 0 normal
  937 art/ae_nabs3.png 8bpp 639 231 65 94 -32 -63 normal
  938 art/ae_nabs3.png 8bpp 719 231 65 94 -32 -63 normal
  939 art/ae_nabs3.png 8bpp 5 344 64 91 -31 -60 normal
  940 art/ae_nabs3.png 8bpp 84 344 64 109 -31 -78 normal
  941 art/ae_nabs3.png 8bpp 163 344 66 94 -32 -63 normal
  942 art/ae_nabs3.png 8bpp 244 344 66 94 -32 -63 normal
  943 art/ae_nabs3.png 8bpp 325 344 65 91 -31 -60 normal
  944 art/ae_nabs3.png 8bpp 405 344 65 108 -31 -77 normal
  945 art/ae_nabs3.png 8bpp 485 344 65 94 -32 -63 normal
  946 art/ae_nabs3.png 8bpp 565 344 64 94 -32 -63 normal
  947 art/ae_nabs3.png 8bpp 644 344 64 91 -31 -60 normal
  948 art/ae_nabs3.png 8bpp 5 458 64 108 -31 -78 normal
  949 art/ae_nabs3.png 8bpp 84 458 66 94 -32 -63 normal
  950 art/ae_nabs3.png 8bpp 165 458 66 94 -32 -63 normal
  951 art/ae_nabs3.png 8bpp 246 458 65 91 -31 -60 normal
  952 art/ae_nabs3.png 8bpp 326 458 64 108 -31 -77 normal
  953 art/ae_nabs3.png 8bpp 405 458 65 94 -32 -63 normal
  954 art/ae_nabs3.png 8bpp 485 458 65 94 -31 -63 normal
  955 art/ae_nabs3.png 8bpp 565 458 64 91 -31 -60 normal
  956 art/ae_nabs3.png 8bpp 644 458 64 108 -31 -77 normal
  957 art/ae_nabs3.png 8bpp 5 571 65 94 -32 -63 normal
  958 art/ae_nabs3.png 8bpp 85 571 65 94 -32 -63 normal
  959 art/ae_nabs3.png 8bpp 165 571 64 91 -31 -60 normal
  960 art/ae_nabs3.png 8bpp 244 571 64 108 -30 -77 normal
  961 art/ae_nabs3.png 8bpp 323 571 66 94 -32 -63 normal
  962 art/ae_nabs3.png 8bpp 404 571 66 94 -32 -63 normal
  963 art/ae_nabs3.png 8bpp 485 571 65 91 -31 -60 normal
  964 art/ae_nabs3.png 8bpp 565 571 65 108 -31 -77 normal
  965 art/ae_nabs3.png 8bpp 645 571 65 94 -32 -63 normal
  966 art/ae_nabs3.png 8bpp 5 684 65 94 -32 -63 normal
  967 art/ae_nabs3.png 8bpp 85 684 64 91 -31 -60 normal
  968 art/ae_nabs3.png 8bpp 164 684 63 108 -31 -77 normal
  969 art/ae_nabs3.png 8bpp 242 684 66 94 -32 -63 normal
  970 art/ae_nabs3.png 8bpp 323 684 66 94 -32 -63 normal
  971 art/ae_nabs3.png 8bpp 404 684 65 91 -31 -60 normal
  972 art/ae_nabs3.png 8bpp 484 684 65 108 -31 -77 normal
  973 art/ae_nabs3.png 8bpp 564 684 65 94 -32 -63 normal
  974 art/ae_nabs3.png 8bpp 644 684 65 94 -32 -63 normal
  975 art/ae_nabs3.png 8bpp 5 797 64 91 -31 -60 normal
  976 art/ae_nabs3.png 8bpp 84 797 64 108 -30 -77 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  26 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             26 C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  26 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1116 * 7 03 07 01 26 00 A1 00
// ID 27 Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
 1117 * 6 01 07 2D FF 01 00
 1118 art/ae_nabs3.png 8bpp 163 797 64 31 -31 0 normal
 1119 art/ae_nabs3.png 8bpp 242 797 64 90 -31 -58 normal
 1120 art/ae_nabs3.png 8bpp 321 797 64 81 -31 -50 normal
 1121 art/ae_nabs3.png 8bpp 400 797 64 82 -31 -51 normal
 1122 art/ae_nabs3.png 8bpp 479 797 64 31 -31 0 normal
 1123 art/ae_nabs3.png 8bpp 558 797 65 86 -32 -55 normal
 1124 art/ae_nabs3.png 8bpp 638 797 65 86 -32 -55 normal
 1125 art/ae_nabs3.png 8bpp 718 797 64 86 -31 -55 normal
 1126 art/ae_nabs4.png 8bpp 5 5 64 99 -31 -68 normal
 1127 art/ae_nabs4.png 8bpp 84 5 66 85 -32 -54 normal
 1128 art/ae_nabs4.png 8bpp 165 5 66 85 -32 -54 normal
 1129 art/ae_nabs4.png 8bpp 246 5 65 84 -31 -53 normal
 1130 art/ae_nabs4.png 8bpp 326 5 65 98 -31 -68 normal
 1131 art/ae_nabs4.png 8bpp 406 5 66 88 -32 -57 normal
 1132 art/ae_nabs4.png 8bpp 487 5 66 88 -32 -57 normal
 1133 art/ae_nabs4.png 8bpp 568 5 65 88 -31 -57 normal
 1134 art/ae_nabs4.png 8bpp 648 5 65 99 -31 -68 normal
 1135 art/ae_nabs4.png 8bpp 5 109 66 93 -32 -62 normal
 1136 art/ae_nabs4.png 8bpp 86 109 65 93 -32 -62 normal
 1137 art/ae_nabs4.png 8bpp 166 109 65 93 -31 -62 normal
 1138 art/ae_nabs4.png 8bpp 246 109 65 99 -31 -68 normal
 1139 art/ae_nabs4.png 8bpp 326 109 65 96 -32 -65 normal
 1140 art/ae_nabs4.png 8bpp 406 109 65 96 -32 -65 normal
 1141 art/ae_nabs4.png 8bpp 486 109 64 96 -31 -65 normal
 1142 art/ae_nabs4.png 8bpp 565 109 64 99 -31 -68 normal
 1143 art/ae_nabs4.png 8bpp 644 109 65 86 -32 -55 normal
 1144 art/ae_nabs4.png 8bpp 5 213 65 86 -32 -55 normal
 1145 art/ae_nabs4.png 8bpp 85 213 64 86 -31 -55 normal
 1146 art/ae_nabs4.png 8bpp 164 213 64 99 -31 -68 normal
 1147 art/ae_nabs4.png 8bpp 243 213 66 85 -32 -54 normal
 1148 art/ae_nabs4.png 8bpp 324 213 66 85 -32 -54 normal
 1149 art/ae_nabs4.png 8bpp 405 213 65 84 -31 -53 normal
 1150 art/ae_nabs4.png 8bpp 485 213 65 99 -31 -68 normal
 1151 art/ae_nabs4.png 8bpp 565 213 66 88 -32 -57 normal
 1152 art/ae_nabs4.png 8bpp 646 213 66 88 -32 -57 normal
 1153 art/ae_nabs4.png 8bpp 5 317 65 88 -31 -57 normal
 1154 art/ae_nabs4.png 8bpp 85 317 65 99 -31 -68 normal
 1155 art/ae_nabs4.png 8bpp 165 317 66 93 -32 -62 normal
 1156 art/ae_nabs4.png 8bpp 246 317 66 93 -32 -62 normal
 1157 art/ae_nabs4.png 8bpp 327 317 65 93 -31 -62 normal
 1158 art/ae_nabs4.png 8bpp 407 317 65 99 -31 -68 normal
 1159 art/ae_nabs4.png 8bpp 487 317 65 96 -32 -65 normal
 1160 art/ae_nabs4.png 8bpp 567 317 65 96 -32 -65 normal
 1161 art/ae_nabs4.png 8bpp 647 317 64 96 -31 -65 normal
 1162 art/ae_nabs4.png 8bpp 5 421 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  27 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             27 C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  27 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1302 * 7 03 07 01 27 00 A1 00
// ID 28 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
 1303 * 6 01 07 2D FF 01 00
 1304 art/ae_nabs4.png 8bpp 84 421 64 38 -31 -7 normal
 1305 art/ae_nabs4.png 8bpp 163 421 64 73 -31 -42 normal
 1306 art/ae_nabs4.png 8bpp 242 421 64 89 -31 -58 normal
 1307 art/ae_nabs4.png 8bpp 321 421 64 89 -31 -58 normal
 1308 art/ae_nabs4.png 8bpp 400 421 64 31 -31 0 normal
 1309 art/ae_nabs4.png 8bpp 479 421 65 86 -32 -55 normal
 1310 art/ae_nabs4.png 8bpp 559 421 65 86 -32 -55 normal
 1311 art/ae_nabs4.png 8bpp 639 421 64 86 -31 -55 normal
 1312 art/ae_nabs4.png 8bpp 718 421 64 99 -31 -68 normal
 1313 art/ae_nabs4.png 8bpp 5 525 66 85 -32 -54 normal
 1314 art/ae_nabs4.png 8bpp 86 525 66 85 -32 -54 normal
 1315 art/ae_nabs4.png 8bpp 167 525 65 84 -31 -53 normal
 1316 art/ae_nabs4.png 8bpp 247 525 65 98 -31 -68 normal
 1317 art/ae_nabs4.png 8bpp 327 525 66 88 -32 -57 normal
 1318 art/ae_nabs4.png 8bpp 408 525 66 88 -32 -57 normal
 1319 art/ae_nabs4.png 8bpp 489 525 65 88 -31 -57 normal
 1320 art/ae_nabs4.png 8bpp 569 525 65 99 -31 -68 normal
 1321 art/ae_nabs4.png 8bpp 649 525 66 93 -32 -62 normal
 1322 art/ae_nabs4.png 8bpp 5 629 65 93 -32 -62 normal
 1323 art/ae_nabs4.png 8bpp 85 629 65 93 -31 -62 normal
 1324 art/ae_nabs4.png 8bpp 165 629 65 99 -31 -68 normal
 1325 art/ae_nabs4.png 8bpp 245 629 65 96 -32 -65 normal
 1326 art/ae_nabs4.png 8bpp 325 629 65 96 -32 -65 normal
 1327 art/ae_nabs4.png 8bpp 405 629 64 96 -31 -65 normal
 1328 art/ae_nabs4.png 8bpp 484 629 64 99 -31 -68 normal
 1329 art/ae_nabs4.png 8bpp 563 629 65 86 -32 -55 normal
 1330 art/ae_nabs4.png 8bpp 643 629 65 86 -32 -55 normal
 1331 art/ae_nabs4.png 8bpp 5 733 64 86 -31 -55 normal
 1332 art/ae_nabs4.png 8bpp 84 733 64 99 -31 -68 normal
 1333 art/ae_nabs4.png 8bpp 163 733 66 85 -32 -54 normal
 1334 art/ae_nabs4.png 8bpp 244 733 66 85 -32 -54 normal
 1335 art/ae_nabs4.png 8bpp 325 733 65 84 -31 -53 normal
 1336 art/ae_nabs4.png 8bpp 405 733 65 99 -31 -68 normal
 1337 art/ae_nabs4.png 8bpp 485 733 66 88 -32 -57 normal
 1338 art/ae_nabs4.png 8bpp 566 733 66 88 -32 -57 normal
 1339 art/ae_nabs4.png 8bpp 647 733 65 88 -31 -57 normal
 1340 art/ae_nabs4.png 8bpp 5 837 65 99 -31 -68 normal
 1341 art/ae_nabs4.png 8bpp 85 837 66 93 -32 -62 normal
 1342 art/ae_nabs4.png 8bpp 166 837 66 93 -32 -62 normal
 1343 art/ae_nabs4.png 8bpp 247 837 65 93 -31 -62 normal
 1344 art/ae_nabs4.png 8bpp 327 837 65 99 -31 -68 normal
 1345 art/ae_nabs4.png 8bpp 407 837 65 96 -32 -65 normal
 1346 art/ae_nabs4.png 8bpp 487 837 65 96 -32 -65 normal
 1347 art/ae_nabs4.png 8bpp 567 837 64 96 -31 -65 normal
 1348 art/ae_nabs4.png 8bpp 646 837 64 99 -31 -68 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  28 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  28 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1488 * 7 03 07 01 28 00 A1 00
// ID 29 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
 1489 * 6 01 07 2D FF 01 00
 1490 art/ae_nabs4.png 8bpp 5 941 64 31 -31 0 normal
 1491 art/ae_nabs5.png 8bpp 5 5 64 82 -31 -51 normal
 1492 art/ae_nabs5.png 8bpp 84 5 64 91 -31 -60 normal
 1493 art/ae_nabs5.png 8bpp 163 5 64 91 -31 -60 normal
 1494 art/ae_nabs5.png 8bpp 242 5 65 31 -31 0 normal
 1495 art/ae_nabs5.png 8bpp 322 5 65 94 -31 -63 normal
 1496 art/ae_nabs5.png 8bpp 402 5 65 94 -31 -63 normal
 1497 art/ae_nabs5.png 8bpp 482 5 64 91 -31 -60 normal
 1498 art/ae_nabs5.png 8bpp 561 5 64 108 -31 -77 normal
 1499 art/ae_nabs5.png 8bpp 640 5 66 94 -32 -63 normal
 1500 art/ae_nabs5.png 8bpp 5 118 66 94 -32 -63 normal
 1501 art/ae_nabs5.png 8bpp 86 118 65 91 -32 -60 normal
 1502 art/ae_nabs5.png 8bpp 166 118 65 108 -32 -77 normal
 1503 art/ae_nabs5.png 8bpp 246 118 65 94 -31 -63 normal
 1504 art/ae_nabs5.png 8bpp 326 118 65 94 -31 -63 normal
 1505 art/ae_nabs5.png 8bpp 406 118 64 91 -31 -60 normal
 1506 art/ae_nabs5.png 8bpp 485 118 64 108 -31 -77 normal
 1507 art/ae_nabs5.png 8bpp 564 118 66 94 -32 -63 normal
 1508 art/ae_nabs5.png 8bpp 645 118 66 94 -32 -63 normal
 1509 art/ae_nabs5.png 8bpp 5 231 65 91 -32 -60 normal
 1510 art/ae_nabs5.png 8bpp 85 231 65 108 -32 -77 normal
 1511 art/ae_nabs5.png 8bpp 165 231 65 94 -31 -63 normal
 1512 art/ae_nabs5.png 8bpp 245 231 65 94 -31 -63 normal
 1513 art/ae_nabs5.png 8bpp 325 231 64 91 -31 -60 normal
 1514 art/ae_nabs5.png 8bpp 404 231 64 108 -31 -77 normal
 1515 art/ae_nabs5.png 8bpp 483 231 65 94 -31 -63 normal
 1516 art/ae_nabs5.png 8bpp 563 231 65 94 -31 -63 normal
 1517 art/ae_nabs5.png 8bpp 643 231 64 91 -31 -60 normal
 1518 art/ae_nabs5.png 8bpp 5 344 64 108 -31 -77 normal
 1519 art/ae_nabs5.png 8bpp 84 344 66 94 -32 -63 normal
 1520 art/ae_nabs5.png 8bpp 165 344 66 94 -32 -63 normal
 1521 art/ae_nabs5.png 8bpp 246 344 65 91 -32 -60 normal
 1522 art/ae_nabs5.png 8bpp 326 344 65 108 -32 -77 normal
 1523 art/ae_nabs5.png 8bpp 406 344 65 94 -31 -63 normal
 1524 art/ae_nabs5.png 8bpp 486 344 65 94 -31 -63 normal
 1525 art/ae_nabs5.png 8bpp 566 344 64 91 -31 -60 normal
 1526 art/ae_nabs5.png 8bpp 645 344 64 108 -31 -77 normal
 1527 art/ae_nabs5.png 8bpp 5 457 66 95 -32 -64 normal
 1528 art/ae_nabs5.png 8bpp 86 457 66 94 -32 -63 normal
 1529 art/ae_nabs5.png 8bpp 167 457 65 91 -32 -60 normal
 1530 art/ae_nabs5.png 8bpp 247 457 65 108 -32 -77 normal
 1531 art/ae_nabs5.png 8bpp 327 457 64 94 -31 -63 normal
 1532 art/ae_nabs5.png 8bpp 406 457 65 94 -31 -63 normal
 1533 art/ae_nabs5.png 8bpp 486 457 64 91 -31 -60 normal
 1534 art/ae_nabs5.png 8bpp 565 457 64 108 -31 -77 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  29 // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  29 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1674 * 7 03 07 01 29 00 A1 00
// ID 2A Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
 1675 * 6 01 07 2D FF 01 00
 1676 art/ae_nabs5.png 8bpp 644 457 64 36 -31 -5 normal
 1677 art/ae_nabs5.png 8bpp 5 570 64 82 -31 -51 normal
 1678 art/ae_nabs5.png 8bpp 84 570 64 82 -31 -51 normal
 1679 art/ae_nabs5.png 8bpp 163 570 64 82 -31 -51 normal
 1680 art/ae_nabs5.png 8bpp 242 570 65 31 -31 0 normal
 1681 art/ae_nabs5.png 8bpp 322 570 65 94 -31 -63 normal
 1682 art/ae_nabs5.png 8bpp 402 570 65 94 -31 -63 normal
 1683 art/ae_nabs5.png 8bpp 482 570 64 91 -31 -60 normal
 1684 art/ae_nabs5.png 8bpp 561 570 64 108 -31 -77 normal
 1685 art/ae_nabs5.png 8bpp 640 570 66 94 -32 -63 normal
 1686 art/ae_nabs5.png 8bpp 5 683 66 94 -32 -63 normal
 1687 art/ae_nabs5.png 8bpp 86 683 65 91 -32 -60 normal
 1688 art/ae_nabs5.png 8bpp 166 683 65 108 -32 -77 normal
 1689 art/ae_nabs5.png 8bpp 246 683 65 94 -31 -63 normal
 1690 art/ae_nabs5.png 8bpp 326 683 65 94 -31 -63 normal
 1691 art/ae_nabs5.png 8bpp 406 683 64 91 -31 -60 normal
 1692 art/ae_nabs5.png 8bpp 485 683 64 108 -31 -77 normal
 1693 art/ae_nabs5.png 8bpp 564 683 66 94 -32 -63 normal
 1694 art/ae_nabs5.png 8bpp 645 683 66 94 -32 -63 normal
 1695 art/ae_nabs5.png 8bpp 5 796 65 91 -32 -60 normal
 1696 art/ae_nabs5.png 8bpp 85 796 65 108 -32 -77 normal
 1697 art/ae_nabs5.png 8bpp 165 796 65 94 -31 -63 normal
 1698 art/ae_nabs5.png 8bpp 245 796 65 94 -31 -63 normal
 1699 art/ae_nabs5.png 8bpp 325 796 64 91 -31 -60 normal
 1700 art/ae_nabs5.png 8bpp 404 796 64 108 -31 -77 normal
 1701 art/ae_nabs5.png 8bpp 483 796 65 94 -31 -63 normal
 1702 art/ae_nabs5.png 8bpp 563 796 65 94 -31 -63 normal
 1703 art/ae_nabs5.png 8bpp 643 796 64 91 -31 -60 normal
 1704 art/ae_nabs6.png 8bpp 5 5 64 108 -31 -77 normal
 1705 art/ae_nabs6.png 8bpp 84 5 66 94 -32 -63 normal
 1706 art/ae_nabs6.png 8bpp 165 5 66 94 -32 -63 normal
 1707 art/ae_nabs6.png 8bpp 246 5 65 91 -32 -60 normal
 1708 art/ae_nabs6.png 8bpp 326 5 65 108 -32 -77 normal
 1709 art/ae_nabs6.png 8bpp 406 5 65 94 -31 -63 normal
 1710 art/ae_nabs6.png 8bpp 486 5 65 94 -31 -63 normal
 1711 art/ae_nabs6.png 8bpp 566 5 64 91 -31 -60 normal
 1712 art/ae_nabs6.png 8bpp 645 5 64 108 -31 -77 normal
 1713 art/ae_nabs6.png 8bpp 5 118 66 95 -32 -64 normal
 1714 art/ae_nabs6.png 8bpp 86 118 66 94 -32 -63 normal
 1715 art/ae_nabs6.png 8bpp 167 118 65 91 -32 -60 normal
 1716 art/ae_nabs6.png 8bpp 247 118 65 108 -32 -77 normal
 1717 art/ae_nabs6.png 8bpp 327 118 64 94 -31 -63 normal
 1718 art/ae_nabs6.png 8bpp 406 118 65 94 -31 -63 normal
 1719 art/ae_nabs6.png 8bpp 486 118 64 91 -31 -60 normal
 1720 art/ae_nabs6.png 8bpp 565 118 64 108 -31 -77 normal
0 * 0 00 07 // action 0 feat 07
  0A // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  2A // ID number
  08 34
  09 03
  0A 1E FF
  10 30 75
  11 9B
  13 10 78
  14 01
  18 04
  19 03
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  DB 05 // maxval
  01 80 // setid
  DC 05 // minval
  FF FF // maxval
  01 80 // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  2A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 80 // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 80 // protect
  01 80 // protect
  01 80 // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 80 // varadj
  05 // numranges
  01 80 // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 80 // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 80 // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 0 * 0 03 07 01 2A 00 A1 00
// ID 2B - 2C Large Deco Building (North and South)
// Large Deco Building (NW)
0 * 0 01 07 06 FF 01 00
0 art/ae_nabs6.png 8bpp 644 118 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 5 231 64 112 -31 -81 normal
0 art/ae_nabs6.png 8bpp 84 231 64 158 -31 -127 normal
0 art/ae_nabs6.png 8bpp 163 231 64 155 -31 -124 normal
0 art/ae_nabs6.png 8bpp 242 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 321 231 64 155 -31 -124 normal
// Action 0
0 * 0 00 07
  0A
  01
  2B
  08 42
  09 0a
  0A 1E FF
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 20
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2B C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2B // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 2B 00 1C 00
// Large Deco Building (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/ae_nabs6.png 8bpp 400 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 479 231 64 115 -31 -84 normal
0 art/ae_nabs6.png 8bpp 558 231 64 171 -31 -140 normal
0 art/ae_nabs6.png 8bpp 637 231 64 165 -31 -134 normal
0 art/ae_nabs6.png 8bpp 716 231 64 31 -31 0 normal
0 art/ae_nabs6.png 8bpp 5 407 64 165 -31 -134 normal
// Action 0
0 * 0 00 07
  05
  01
  2C
  08 43
  10 60 EA
  11 FF
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2C C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2C // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 2C 00 1C 00
// ID 2D Deco Buildings
// Deco Buildings
 1909 * 6 01 07 06 FF 01 00
 1910 art/ae_nabs6.png 8bpp 84 407 64 31 -31 0 normal
 1911 art/ae_nabs6.png 8bpp 163 407 64 109 -31 -78 normal
 1912 art/ae_nabs6.png 8bpp 242 407 66 143 -32 -112 normal
 1913 art/ae_nabs6.png 8bpp 323 407 66 153 -32 -122 normal
 1914 art/ae_nabs6.png 8bpp 404 407 64 31 -31 0 normal
 1915 art/ae_nabs6.png 8bpp 483 407 66 153 -32 -122 normal
 1916 * 24 00 07
  0A
  01
  2D
  08 34
  09 01
  0A 1E FF
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 08
  19 03 // Flat out protected.
  1D 04
 // Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 2D C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 1918 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1919 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1920 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1921 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1922 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1923 * 18 02 07 1E 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1924 * 22 02 07 1F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 1E 00
 1925 * 6 01 07 06 FF 01 00
 1926 art/ae_nabs6.png 8bpp 564 407 64 38 -31 -7 normal
 1927 art/ae_nabs6.png 8bpp 643 407 64 113 -31 -82 normal
 1928 art/ae_nabs6.png 8bpp 5 577 64 161 -31 -130 normal
 1929 art/ae_nabs6.png 8bpp 84 577 66 165 -32 -134 normal
 1930 art/ae_nabs6.png 8bpp 165 577 66 31 -32 0 normal
 1931 art/ae_nabs6.png 8bpp 246 577 66 165 -32 -134 normal
 1932 * 17 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1933 * 17 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1934 * 17 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1935 * 17 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1936 * 17 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1937 * 18 02 07 20 81 43 00 FF 02 08 00 00 03 09 00 04 04 03 00
 1938 * 22 02 07 21 81 40 00 03 03 05 00 00 00 06 00 01 01 07 00 02 02 20 00
 1939 * 6 01 07 06 FF 01 00
 1940 art/ae_nabs6.png 8bpp 327 577 64 38 -31 -7 normal
 1941 art/ae_nabs6.png 8bpp 406 577 64 104 -31 -73 normal
 1942 art/ae_nabs6.png 8bpp 485 577 64 146 -31 -115 normal
 1943 art/ae_nabs6.png 8bpp 564 577 65 156 -31 -125 normal
 1944 art/ae_nabs6.png 8bpp 644 577 65 31 -32 0 normal
 1945 art/ae_nabs6.png 8bpp 5 747 65 156 -31 -125 normal
 1946 * 17 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1947 * 17 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1948 * 17 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1949 * 17 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1950 * 17 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1951 * 18 02 07 22 81 43 00 FF 02 0D 00 00 03 0E 00 04 04 03 00
 1952 * 22 02 07 23 81 40 00 03 03 0A 00 00 00 0B 00 01 01 0C 00 02 02 22 00
 1953 * 6 01 07 06 FF 01 00
 1954 art/ae_nabs6.png 8bpp 85 747 64 45 -31 -14 normal
 1955 art/ae_nabs6.png 8bpp 164 747 64 107 -31 -76 normal
 1956 art/ae_nabs6.png 8bpp 243 747 64 150 -31 -119 normal
 1957 art/ae_nabs6.png 8bpp 322 747 64 167 -31 -136 normal
 1958 art/ae_nabs6.png 8bpp 401 747 64 31 -31 0 normal
 1959 art/ae_nabs6.png 8bpp 480 747 64 167 -31 -136 normal
 1960 * 17 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1961 * 17 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1962 * 17 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1963 * 17 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1964 * 17 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1965 * 18 02 07 24 81 43 00 FF 02 12 00 00 03 13 00 04 04 03 00
 1966 * 22 02 07 25 81 40 00 03 03 0F 00 00 00 10 00 01 01 11 00 02 02 24 00
 1967 * 6 01 07 06 FF 01 00
 1968 art/ae_nabs6.png 8bpp 559 747 64 35 -31 -4 normal
 1969 art/ae_nabs6.png 8bpp 638 747 64 114 -31 -83 normal
 1970 art/ae_nabs6.png 8bpp 717 747 64 146 -31 -115 normal
 1971 art/ae_nabs7.png 8bpp 5 5 64 159 -31 -128 normal
 1972 art/ae_nabs7.png 8bpp 84 5 64 31 -31 0 normal
 1973 art/ae_nabs7.png 8bpp 163 5 64 159 -31 -128 normal
 1974 * 17 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1975 * 17 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1976 * 17 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1977 * 17 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1978 * 17 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1979 * 18 02 07 26 81 43 00 FF 02 17 00 00 03 18 00 04 04 03 00
 1980 * 22 02 07 27 81 40 00 03 03 14 00 00 00 15 00 01 01 16 00 02 02 26 00
 1981 * 6 01 07 06 FF 01 00
 1982 art/ae_nabs7.png 8bpp 242 5 64 33 -31 -2 normal
 1983 art/ae_nabs7.png 8bpp 321 5 64 103 -31 -72 normal
 1984 art/ae_nabs7.png 8bpp 400 5 64 138 -31 -107 normal
 1985 art/ae_nabs7.png 8bpp 479 5 64 151 -31 -120 normal
 1986 art/ae_nabs7.png 8bpp 558 5 64 31 -31 0 normal
 1987 art/ae_nabs7.png 8bpp 637 5 64 151 -31 -120 normal
 1988 * 17 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1989 * 17 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1990 * 17 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1991 * 17 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1992 * 17 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1993 * 18 02 07 28 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
 1994 * 22 02 07 29 81 40 00 03 03 19 00 00 00 1A 00 01 01 1B 00 02 02 28 00
 // Pick random variation
1995 * 23 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  2D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  05 // maxval		
  00 80 // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  2A 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
2003 * 7 03 07 01 2D 00 3C 00
// ID 2E - 2F Flatiron (North and South)
// Flatiron (NW)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/flatiron.png 8bpp 6 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 144 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 284 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 425 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 564 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 702 3 64 119 -31 -88 normal
// Action 0
0 * 0 00 07
  0A
  01
  2E
  08 42
  09 0a
  0A 1E FF
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 20
  19 03 // must protec
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2E C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2E // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 00 03 07 01 2E 00 1C 00
// Flatiron (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/flatiron.png 8bpp 76 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 213 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 354 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 495 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 633 3 64 119 -31 -88 normal
0 art/flatiron.png 8bpp 773 3 64 119 -31 -88 normal
// Action 0
0 * 0 00 07
  05
  01
  2F
  08 43
  10 60 EA
  11 FF
  19 03 // must protec
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  2F C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  2F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  01 // maxval		
  00 80 // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  2F // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 80 // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 80 // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 2F 00 1C 00
// ID 30 - 33 Department Store (North, East, West and South)
// Department Store (N)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 7 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 7 64 84 -31 -53 normal
0 art/departmentstore.png 8bpp 165 7 64 76 -31 -45 normal
0 art/departmentstore.png 8bpp 245 7 64 79 -31 -48 normal
0 art/departmentstore.png 8bpp 319 7 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 7 64 79 -31 -48 normal
// Action 0
0 * 0 00 07
  0A
  01
  30
  08 20
  09 12
  0A 1E FF
  10 60 EA
  11 FF
  13 10 78
  14 01
  18 04
  19 03
  1D 04
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 30 C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  30 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 30 00 1C 00
// Department Store (E)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 109 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 109 64 80 -31 -49 normal
0 art/departmentstore.png 8bpp 165 109 64 78 -31 -47 normal
0 art/departmentstore.png 8bpp 245 109 64 78 -31 -47 normal
0 art/departmentstore.png 8bpp 316 109 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 109 64 78 -31 -47 normal
// Action 0
0 * 0 00 07
  05
  01
  31
  08 21
  10 60 EA
  11 FF
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  31 C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  31 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 31 00 1C 00
// Department Store (W)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 206 64 35 -31 -4 normal
0 art/departmentstore.png 8bpp 85 206 64 70 -31 -39 normal
0 art/departmentstore.png 8bpp 165 206 64 74 -31 -43 normal
0 art/departmentstore.png 8bpp 245 206 64 74 -31 -43 normal
0 art/departmentstore.png 8bpp 316 206 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 394 206 64 74 -31 -43 normal
// Action 0
0 * 0 00 07
  05
  01
  32
  08 22
  10 60 EA
  11 FF
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  32 C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  32 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 32 00 1C 00
// Department Store (S)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art/departmentstore.png 8bpp 5 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 85 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 163 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 243 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 316 308 64 31 -31 0 normal
0 art/departmentstore.png 8bpp 392 308 64 31 -31 0 normal
// Action 0
0 * 0 00 07
  05
  01
  33
  08 23
  10 60 EA
  11 FF
  19 03
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  33 C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  33 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 80 // setid to use (protec)
  00 // minval
  03 // maxval		
  00 80 // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 80 // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 80 // setid
  00 00 // minval
  BB 07 // maxval
  01 80 // setid
  BB 08 // minval
  FF FF // maxval
  01 80 // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 33 00 1C 00
// Fin
