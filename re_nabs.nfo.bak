// Automatically generated by GRFCODEC. Do not modify!
// (Info version 5)
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
// Total number of sprites (Let nforenum deal with this):
0 * 0 00 00 00 00
// Action 8 for description, copyright notice, and grfid:
0 * 0 08 05
  "RJE" 01
  "North American Buildings Set" 00
  "Artwork by Oz, lifeblood, reldred. Coding by reldred; the belligerent formerly known as Aegir. reldreds North American Building Set is the continuation of Aegir's original NABS. For support go bug reldred on #openttd. Special thanks to patchman, dalestan, csaboka, eis_os and all the other #tycoon OG's I've forgotten from whom I owe a great deal and have learnt even more." 00
// ID 00 Small House 1:
// Small House 1 - Twin houses with brown roofs.
// Action 1:
    0 * 0 01 07 06 FF 01 00
// Real Sprites:
    0 art\house01.png 3 2 09 37 64 -31 -6
    0 art\house01.png 79 2 09 45 64 -31 -14
    0 art\house01.png 149 2 09 45 64 -31 -14
    0 art\house01.png 222 2 09 44 64 -31 -13
    0 art\house01.png 298 2 09 31 64 -31 0
    0 art\house01.png 367 2 09 44 64 -31 -13
// Action 0 to set properties:
    0 * 0 00 07 // Action 0, Feature 07
                 05 // Properties to Change
                 01 // Change properties for how many ID's
                 00 // ID
                 08 2E // Substitute type
                 09 01 // Building flags
                 0A 0A FF // Set years availible
                 13 03 38 // Set availibilty mask
                 1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 00 C9 // Offset
                 "Suburban House 01" 00 // String
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.0:
    0 * 0 03 07 01 00 00 11 00
// Fin
// ID 01 Small House 2:
// Small House 2 - Grey roof, small corner shops
// Action 1:
 0 * 0 01 07 06 FF 01 00
// Real Sprites:
 0 art\house02.png 7 3 09 31 64 -31 0
 0 art\house02.png 83 3 09 38 64 -31 -7
 0 art\house02.png 159 3 09 33 64 -31 -2
 0 art\house02.png 230 3 09 34 64 -31 -3
 0 art\house02.png 306 3 09 31 64 -31 0
 0 art\house02.png 376 3 09 34 64 -31 -3
 // Action 0 to set properties:
 0 * 0 00 07 // Action 0, Feature 07
 05 // Properties to Change
  01 // Change properties for how many ID's
  01 // ID
  08 2E // Substitute type
  09 01 // Building flags
  0A 0A FF // Set years availible
  13 03 38 // Set availibilty mask
  1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 01 C9 // Offset
                 "Suburban Shop 01" 00 // String
// Action 2 Chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  00 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  00 00 00 80 // Building Sprite (00)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 2nd stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  01 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  01 00 00 80 // Building Sprite (01)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// 3rd stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  02 // Set ID
  00 // Literal 0
  54 0F 00 00 // Ground Sprite (3924)
  02 00 00 80 // Building Sprite (02)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Finished stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  03 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  03 00 00 80 // Building Sprite (03)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Snowy stage action 2:
 0 * 0 02 07 // Action 2, Feature 07
  04 // Set ID
  00 // Literal 0
  04 00 00 80 // Ground Sprite (04)
  05 00 00 80 // Building Sprite (05)
  00 // Xoff
  00 // Yoff
  10 // Xext
  10 // Yext
  04 // Zext
// Check ground type and select either no.3 or no.4:
 0 * 0 02 07 // Action 2, Feature 07
  10 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  43 // Variable (Terrain Type)
  00 FF // Varadjust (AND FF)
  02 // Nuber of ranges
  // Range Checks:
  03 00 // Use Set ID 3...
  00 03 // If ground type between 0 and 3
  04 00 // Use Set ID 4...
  04 04 // If ground type between 4 and 4
  03 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:
 0 * 0 02 07 // Action 2, Feature 07
  11 // Set ID
  81 // Type (Lowest Byte of value accessed for house)
  40 // Variable (Construction stages)
  00 FF // Varadjust (AND FF)
  03 // Number of ranges
  // Range Checks:
  00 00 // Use Set ID 0...
  00 00 // If construction stage 0
  01 00 // Use Set ID 1...
  01 01 // If construction stage 1
  02 00 // Use Set ID 2...
  02 02 // If construction stage 2
  10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
 0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  01 // id.1
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 02 Small Building 1:
// Small Building 1 - Two shops side by side
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:    
0 art\smallbuilding01.png 5 6 09 34 64 -31 -3
0 art\smallbuilding01.png 81 6 09 58 64 -31 -27
0 art\smallbuilding01.png 157 6 09 60 64 -31 -29
0 art\smallbuilding01.png 230 6 09 59 64 -31 -28
0 art\smallbuilding01.png 306 6 09 32 64 -31 -1
0 art\smallbuilding01.png 377 6 09 59 64 -31 -28
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  02 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  02 C9 // Offset
  "Small Building 01" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  02 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 03 Small Building 2:
// Small Building 2 - Small Flats
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\ae_nabs1.png 637 55 09 41 64 -31 -10
0 art\ae_nabs1.png 716 55 09 39 64 -31 -8
0 art\ae_nabs1.png 5 120 09 53 64 -31 -22
0 art\ae_nabs1.png 84 120 09 53 64 -31 -22
0 art\ae_nabs1.png 163 120 09 32 64 -31 -1
0 art\ae_nabs1.png 242 120 09 52 64 -31 -22
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  03 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  03 C9 // Offset
  "Small Building 02" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  03 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 04 Small Building 3:
// Small Building 3 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\ae_nabs1.png 321 120 09 35 63 -31 -4
0 art\ae_nabs1.png 399 120 09 44 64 -31 -13
0 art\ae_nabs1.png 478 120 09 52 64 -31 -21
0 art\ae_nabs1.png 557 120 09 52 64 -31 -21
0 art\ae_nabs1.png 636 120 09 31 63 -30 0
0 art\ae_nabs1.png 714 120 09 52 64 -31 -21
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  04 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  04 C9 // Offset
  "Small Building 03" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  04 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 05 - 06 School (North and South)
// School (N)
// Action 1:
    0 * 0 01 07 06 FF 01 00
// Real Sprites:
    0 art\ae_nabs1.png 5 178 09 36 64 -31 -5
    0 art\ae_nabs1.png 84 178 09 42 63 -31 -11
    0 art\ae_nabs1.png 162 178 09 51 64 -31 -20
    0 art\ae_nabs1.png 241 178 09 44 59 -31 -13
    0 art\ae_nabs1.png 315 178 09 40 64 -31 -9
    0 art\ae_nabs1.png 394 178 09 44 64 -31 -13
// Action 0 to set properties:  
0 * 0 00 07 // Action 0, Feature 7
  08 // Properties to change
  01 // Change properties for how many ID's
  05 // ID
  08 42 // Substitute type
  09 08 // Building flags
  0A 0A 32 // Set years availible
  10 C8 AF // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  13 03 38 // Set availibility mask
  18 04 // Probability
  1D 04 // Set prop 1D to 4
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  05 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 FF // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 FF // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 FF // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 FF // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
    0 * 0 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.25:
0 * 0 03 07 01 05 00 25 00
// Fin
// School (S)
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\ae_nabs1.png 473 178 09 31 64 -31 0
0 art\ae_nabs1.png 552 178 09 51 64 -31 -20
0 art\ae_nabs1.png 631 178 09 58 64 -31 -27
0 art\ae_nabs1.png 710 178 09 53 64 -31 -22
0 art\ae_nabs1.png 5 241 09 31 64 -31 0
0 art\ae_nabs1.png 84 241 09 53 64 -31 -22
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  04 // Properties to change
  01 // Change properties for how many ID's
  06 // ID
  08 43 // Substitute type
  10 C8 AF // LA Rating Decrease for Removal
  11 9B // Removal Cost Multiplier
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  06 C9 // Offset
  "School" 00 // String
// Action 2 Chain
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail 
// Protect if 10 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0A // Building 10 years or younger
                 00 FF // Return 0 if...
                 0B FF // Building 11 years or older
                 03 00 // Default SetID to use if checks fail
// Protect if 15 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 0F // Building 15 years or younger
                 00 FF // Return 0 if...
                 10 FF // Building 16 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 20 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 14 // Building 20 years or younger
                 00 FF // Return 0 if...
                 15 FF // Building 21 years or older
                 03 00 // Default SetID to use if checks fail 
// Protect if 25 years old or younger:
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 41 // Variable (Age of building)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 01 FF // Return 1 if...
                 00 19 // Building 25 years or younger
                 00 FF // Return 0 if...
                 1A FF // Building 26 years or older
                 03 00 // Default SetID to use if checks fail 
// Random chance to pick either no.20, no.21, no.22 or no.23:
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 80 // Randomize object based on itself
                 00 // random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 20 00 // SetID 20
                 21 00 // SetID 21
                 22 00 // SetID 22
                 23 00 // SetID 23
// Current Callback. If callback for destruction called, goto no.24, else goto no.11:
    0 * 0 02 07 // Action 2, Feature 07
                 25 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 01 // Number of ranges
                 24 00 // Use SetID 24 if...
                 43 01 43 01 // Callback 143 is being called
                 11 00 // Default Sprite to use if check fails (Else goto 11) 
// Assign last action2 to id.2:
0 * 0 03 07 01 06 00 25 00
// Fin
// ID 07 - 08 Brownstone NW (North and South)
// Brownstone (NW) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:   
    0 art\ae_nabs1.png 163 241 09 35 32 -31 -4
    0 art\ae_nabs1.png 210 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 257 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 304 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 351 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 398 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 445 241 09 54 32 -31 -23
    0 art\ae_nabs1.png 492 241 09 31 64 -31 0
    0 art\ae_nabs1.png 571 241 09 54 64 -31 -23
    0 art\ae_nabs1.png 650 241 09 54 64 -31 -23
    0 art\ae_nabs1.png 5 300 09 54 64 -31 -23
    0 art\ae_nabs1.png 84 300 09 54 64 -31 -23
// Action 0 to set properties:  
    0 * 0 00 07 // Action 0, Feature 07
                 07 // Properties to Change
                 01 // Change properties for how many ID's
                 07 // ID
                 08 42 // Substitute type
                 09 0A // Building flags
                 0A 0A 27 // Set years availible
                 10 20 4E // Local Authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 38 // Set availibilty mask
                 18 04 // Probability
                 1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 07 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:       
    0 * 0 03 07 01 07 00 35 00
// Fin
// Brownstone (NW) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:
    0 art\ae_nabs1.png 163 300 09 61 64 -31 -30
    0 art\ae_nabs1.png 242 300 09 70 64 -31 -39
    0 art\ae_nabs1.png 321 300 09 70 64 -31 -39
    0 art\ae_nabs1.png 400 300 09 70 64 -31 -39
    0 art\ae_nabs1.png 479 300 09 71 64 -31 -39
    0 art\ae_nabs1.png 558 300 09 70 64 -31 -39
    0 art\ae_nabs1.png 637 300 09 70 64 -31 -39
    0 art\ae_nabs1.png 716 300 09 31 64 -31 0
    0 art\ae_nabs1.png 5 376 09 54 64 -31 -23
    0 art\ae_nabs1.png 84 376 09 54 64 -31 -23
    0 art\ae_nabs1.png 163 376 09 54 64 -31 -23
    0 art\ae_nabs1.png 242 376 09 54 64 -31 -23
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 7
                 04 // Properties to change
                 01 // Change properties for how many ID's
                 08 // ID
                 08 43 // Substitute type
                 10 20 4E // LA Rating decrease for removal
                 11 64 // Removal cost multiplier
                 1D 04 // Set Prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 08 C9 // Offset
                 "Large Flats" 00 // Strings
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 08 00 35 00
// Fin
// ID 09 - 0A Brownstone NE (North and South)
// Brownstone (NE) (N)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:  
    0 art\ae_nabs1.png 321 376 09 47 32 1 -16
    0 art\ae_nabs1.png 368 376 09 54 32 1 -23
    0 art\ae_nabs1.png 415 376 09 54 32 1 -23
    0 art\ae_nabs1.png 462 376 09 54 32 1 -23
    0 art\ae_nabs1.png 509 376 09 54 32 1 -23
    0 art\ae_nabs1.png 556 376 09 54 32 1 -23
    0 art\ae_nabs1.png 603 376 09 54 32 1 -23
    0 art\ae_nabs1.png 650 376 09 31 64 -31 0
    0 art\ae_nabs1.png 5 435 09 54 64 -31 -23
    0 art\ae_nabs1.png 84 435 09 54 64 -31 -23
    0 art\ae_nabs1.png 163 435 09 54 64 -31 -23
    0 art\ae_nabs1.png 242 435 09 54 64 -31 -23
// Action 0 to set properties: 
    0 * 0 00 07 // Action 0, Feature 07
                 07 // Properties to change
                 01 // Change properties for how many ID's
                 09 // ID
                 08 4A // Substitute type
                 09 06 // Building flags
                 0A 0A 27 // Set years availible
                 10 20 4E // Local authority rating decrease
                 11 64 // Removal cost multiplier
                 13 0C 38 // Set availibility mask
                 18 04 // Probability
                 1D 04 // Set prop 1D to 4
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 09 C9 // Offset
                 "Large Flats" 00 // String
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
    0 * 0 03 07 01 09 00 35 00
// Fin
// Brownstone (NE) (S)
// Action 1:
    0 * 0 01 07 0C FF 01 00
// Real Sprites:      
    0 art\ae_nabs1.png 321 435 09 63 64 -31 -32
    0 art\ae_nabs1.png 400 435 09 70 64 -31 -39
    0 art\ae_nabs1.png 479 435 09 70 64 -31 -39
    0 art\ae_nabs1.png 558 435 09 70 64 -31 -39
    0 art\ae_nabs1.png 637 435 09 70 64 -31 -39
    0 art\ae_nabs1.png 716 435 09 70 64 -31 -39
    0 art\ae_nabs1.png 5 510 09 70 64 -31 -39
    0 art\ae_nabs1.png 84 510 09 31 64 -31 0
    0 art\ae_nabs1.png 163 510 09 54 64 -31 -23
    0 art\ae_nabs1.png 242 510 09 54 64 -31 -23
    0 art\ae_nabs1.png 321 510 09 54 64 -31 -23
    0 art\ae_nabs1.png 400 510 09 54 64 -31 -23
// Action 0 to set properties:    
    0 * 0 00 07
                 04
                 01
                 0A
                 08 4B
                 10 20 4E
                 11 64
                 1D 04
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 0A C9 // Offset
                 "Large Flats" 00 // String 
// Action 2 chain:
// Action 2 chain:
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump to another random action 2 which will then link to four different construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.                 
// Variant 1:
// 1st stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 08 00 00 80 // Building Sprite (08)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 20 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 03 00 // Use SetID 3 if...
                 00 03 // Ground type between 0 and 3
                 04 00 // Use SetID 4 if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 21 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range checks:
                 00 00 // Use SetID 0...
                 00 00 // If construction stage 0
                 01 00 // Use SetID 1...
                 01 01 // If construction stage 1
                 02 00 // Use SetID 2...
                 02 02 // If construction stage 2
                 20 00 // Default Set ID to use if checks fail 
// Variant 2:
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 05 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 06 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 07 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 08 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 04 00 00 80 // Building Sprite (04)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 09 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 09 00 00 80 // Building Sprite (09)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 22 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 08 00 // Use SetID 08 if...
                 00 03 // Ground type between 0 and 3
                 09 00 // Use SetID 09 if...
                 04 04 // Ground type is 4
                 08 00 // Default Set ID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 23 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 05 00 // Use Set ID 5...
                 00 00 // If construction stage 0
                 06 00 // Use Set ID 6...
                 01 01 // If construction stage 1
                 07 00 // Use Set ID 7...
                 02 02 // If construction stage 2
                 22 00 // Default Set ID to use if checks fail
// Variant 3 
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0A // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0B // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 0C // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0D // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 05 00 00 80 // Building Sprite (05)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 0E // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0A 00 00 80 // Building Sprite (0A)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:  
    0 * 0 02 07 // Action 2, Feature 07
                 24 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // AND Mask
                 02 // Number of ranges
                 // Range Checks:
                 0D 00 // Use SetID 0D if...
                 00 03 // Ground type between 0 and 3
                 0E 00 // Use SetID 0E if...
                 04 04 // Ground type is 4
                 03 00 // Default SetID to use if checks fail 
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, feature 07
                 25 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction Stages)
                 00 03 // AND Mask
                 03 // Number of ranges
                 // Range Checks:
                 0A 00 // Use Set ID 0A...
                 00 00 // If construction stage 0
                 0B 00 // Uset Set ID 0B...
                 01 01 // If construction stage 1
                 0C 00 // Use Set ID 0C...
                 02 02 // If construction stage 2
                 24 00 // Default Set ID to use if checks fail
// Variant 4
// 1st stage action 2:     
    0 * 0 02 07 // Action 2, Feature 07
                 0F // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07 
                 11 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 12 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 06 00 00 80 // Building Sprite (06)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:  
    0 * 0 02 07 // Action 2, Feature 07
                 13 // Set ID
                 00 // Literal 0
                 07 00 00 80 // Ground Sprite (07)
                 0B 00 00 80 // Building Sprite (0B)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 26 // Set ID
                 81 // Type (Lowest Byte of value accessed for house) 
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Number of ranges
                 // Range Checks:
                 12 00 // Use Set ID 12...
                 00 03 // If ground type between 0 and 3
                 13 00 // Use Set ID 13...
                 04 04 // If ground type between 4 and 4
                 08 00 // Default Set ID to use if checks fail
// Construction stages, at last stage go to ground type checking:  
    0 * 0 02 07 // Action 2, Feature 07
                 27 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 03 // Varadjust (AND 03)
                 03 // Number of ranges
                 // Range Checks:
                 0F 00 // Use Set ID 0F...
                 00 00 // If construction stage 0
                 10 00 // Use Set ID 10...
                 01 01 // If construction stage 1
                 11 00 // Use Set ID 11...
                 02 02 // If construction stagte 2
                 26 00 // Default Set ID to use if checks fail
// Pick out of the four variations:  
    0 * 0 02 07 // Action 2, Feature 07
                 28 // Set ID
                 80 // Randomize object based on itself
                 00 // Random Triggers
                 00 // Random bit to use
                 04 // Number of choices
                 27 00 // SetID 27
                 25 00 // SetID 25
                 23 00 // SetID 23
                 21 00 // SetID 21
// Check minimum population required
    0 * 0 02 07
  29 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  F3 01 // maxval
  01 FF // setid
  F4 01 // minval
  FF FF // maxval
  03 00 // default setid
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  31 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  00 FF // unprotect
  00 FF // unprotect
  00 FF // unprotect
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  32 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  00 FF // unprotec
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  33 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  00 FF // unprotect
// years since 1920
0 * 0 02 07 // act 2 feat 7
  34 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  31 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  32 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  33 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback. If callback for destruction called, goto no.24, else goto no.28:  
    0 * 0 02 07 // Action 2, Feature 07
                 35 // Set ID
                 85 // Type (Lowest Word of value accessed for house)
                 0C // Variable (Current Callback)
                 00 FF FF // Varadjust (AND FFFF)
                 02 // Number of ranges
                 29 00 // Use SetID 29 if..
                 17 00 17 00 // Callback 17 is being called
                 34 00 // Use SetID 34 if..
                 43 01 43 01 // Callback 143 is being called
                 28 00 // Default Sprite to use if check fails (Else goto 28) 
// Assign last action2 to id.35:  
  372 * 7 03 07 01 0A 00 35 00
// Fin  
// ID 0B Chicago School NE THIN-WIDE 1
// Chicago School NE THIN-WIDE 1
0 * 0 01 07 2D FF 01 00
0 art\ae_nabs1.png 479 510 09 31 65 -32 0
0 art\ae_nabs1.png 559 510 09 89 64 -31 -58
0 art\ae_nabs1.png 638 510 09 86 64 -31 -55
0 art\ae_nabs1.png 717 510 09 86 64 -31 -55
0 art\ae_nabs1.png 5 604 09 31 64 -31 0
0 art\ae_nabs1.png 84 604 09 86 65 -31 -55
0 art\ae_nabs1.png 164 604 09 86 65 -31 -55
0 art\ae_nabs1.png 244 604 09 86 64 -31 -55
0 art\ae_nabs1.png 323 604 09 99 64 -31 -68
0 art\ae_nabs1.png 402 604 09 85 66 -32 -54
0 art\ae_nabs1.png 483 604 09 85 66 -32 -54
0 art\ae_nabs1.png 564 604 09 90 65 -32 -59
0 art\ae_nabs1.png 644 604 09 99 65 -32 -68
0 art\ae_nabs1.png 5 708 09 88 66 -32 -57
0 art\ae_nabs1.png 86 708 09 90 66 -32 -59
0 art\ae_nabs1.png 167 708 09 88 65 -32 -57
0 art\ae_nabs1.png 247 708 09 99 65 -32 -68
0 art\ae_nabs1.png 327 708 09 93 66 -32 -62
0 art\ae_nabs1.png 408 708 09 93 66 -32 -62
0 art\ae_nabs1.png 489 708 09 93 65 -32 -62
0 art\ae_nabs1.png 569 708 09 99 65 -32 -68
0 art\ae_nabs1.png 649 708 09 95 65 -31 -65
0 art\ae_nabs1.png 5 812 09 96 66 -32 -65
0 art\ae_nabs1.png 86 812 09 96 64 -31 -65
0 art\ae_nabs1.png 165 812 09 99 64 -31 -68
0 art\ae_nabs1.png 244 812 09 86 65 -31 -55
0 art\ae_nabs1.png 324 812 09 86 65 -31 -55
0 art\ae_nabs1.png 404 812 09 86 64 -31 -55
0 art\ae_nabs1.png 483 812 09 99 64 -31 -68
0 art\ae_nabs1.png 562 812 09 85 66 -32 -54
0 art\ae_nabs1.png 643 812 09 85 66 -32 -54
0 art\ae_nabs2.png 5 5 09 84 65 -32 -53
0 art\ae_nabs2.png 85 5 09 99 65 -32 -68
0 art\ae_nabs2.png 165 5 09 88 66 -32 -57
0 art\ae_nabs2.png 246 5 09 88 66 -32 -57
0 art\ae_nabs2.png 327 5 09 88 65 -32 -57
0 art\ae_nabs2.png 407 5 09 99 65 -32 -68
0 art\ae_nabs2.png 487 5 09 93 66 -32 -62
0 art\ae_nabs2.png 568 5 09 92 67 -33 -61
0 art\ae_nabs2.png 650 5 09 93 65 -32 -62
0 art\ae_nabs2.png 5 109 09 99 65 -32 -68
0 art\ae_nabs2.png 85 109 09 95 65 -31 -64
0 art\ae_nabs2.png 165 109 09 95 65 -31 -64
0 art\ae_nabs2.png 245 109 09 95 64 -31 -64
0 art\ae_nabs2.png 324 109 09 99 64 -31 -68
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0B // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
         01 // Number of strings to change
         0B C9 // Offset
                 "Chicago School 01" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
0 * 0 03 07 01 0B 00 A1 00
// ID 0C Chicago School NE THIN-WIDE 2
// Chicago School NE THIN-WIDE 2
  559 * 6 01 07 2D FF 01 00
  560 art\ae_nabs2.png 403 109 09 38 63 -31 -7
  561 art\ae_nabs2.png 481 109 09 81 64 -31 -50
  562 art\ae_nabs2.png 560 109 09 89 64 -31 -58
  563 art\ae_nabs2.png 639 109 09 89 64 -31 -58
  564 art\ae_nabs2.png 718 109 09 31 64 -31 0
  565 art\ae_nabs2.png 5 213 09 86 65 -31 -55
  566 art\ae_nabs2.png 85 213 09 86 65 -31 -55
  567 art\ae_nabs2.png 165 213 09 86 64 -31 -55
  568 art\ae_nabs2.png 244 213 09 99 64 -31 -68
  569 art\ae_nabs2.png 323 213 09 85 66 -32 -54
  570 art\ae_nabs2.png 404 213 09 85 66 -32 -54
  571 art\ae_nabs2.png 485 213 09 90 65 -32 -59
  572 art\ae_nabs2.png 565 213 09 99 65 -32 -68
  573 art\ae_nabs2.png 645 213 09 88 66 -32 -57
  574 art\ae_nabs2.png 5 317 09 90 66 -32 -59
  575 art\ae_nabs2.png 86 317 09 88 65 -32 -57
  576 art\ae_nabs2.png 166 317 09 99 65 -32 -68
  577 art\ae_nabs2.png 246 317 09 93 66 -32 -62
  578 art\ae_nabs2.png 327 317 09 93 66 -32 -62
  579 art\ae_nabs2.png 408 317 09 93 65 -32 -62
  580 art\ae_nabs2.png 488 317 09 99 65 -32 -68
  581 art\ae_nabs2.png 568 317 09 95 65 -31 -65
  582 art\ae_nabs2.png 648 317 09 96 66 -32 -65
  583 art\ae_nabs2.png 5 421 09 96 64 -31 -65
  584 art\ae_nabs2.png 84 421 09 99 64 -31 -68
  585 art\ae_nabs2.png 163 421 09 86 65 -31 -55
  586 art\ae_nabs2.png 243 421 09 86 65 -31 -55
  587 art\ae_nabs2.png 323 421 09 86 64 -31 -55
  588 art\ae_nabs2.png 402 421 09 99 64 -31 -68
  589 art\ae_nabs2.png 481 421 09 85 66 -32 -54
  590 art\ae_nabs2.png 562 421 09 85 66 -32 -54
  591 art\ae_nabs2.png 643 421 09 84 65 -32 -53
  592 art\ae_nabs2.png 5 525 09 99 65 -32 -68
  593 art\ae_nabs2.png 85 525 09 88 66 -32 -57
  594 art\ae_nabs2.png 166 525 09 88 66 -32 -57
  595 art\ae_nabs2.png 247 525 09 88 65 -32 -57
  596 art\ae_nabs2.png 327 525 09 99 65 -32 -68
  597 art\ae_nabs2.png 407 525 09 93 66 -32 -62
  598 art\ae_nabs2.png 488 525 09 92 67 -33 -61
  599 art\ae_nabs2.png 570 525 09 93 65 -32 -62
  600 art\ae_nabs2.png 650 525 09 99 65 -32 -68
  601 art\ae_nabs2.png 5 629 09 95 65 -31 -64
  602 art\ae_nabs2.png 85 629 09 95 65 -31 -64
  603 art\ae_nabs2.png 165 629 09 95 64 -31 -64
  604 art\ae_nabs2.png 244 629 09 99 64 -31 -68
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0C // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0C C9 // Offset
                 "Chicago School 02" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  744 * 7 03 07 01 0C 00 A1 00
// ID 0D Chicago School NE WIDE-THIN 1
// Chicago School NE WIDE-THIN 1
  745 * 6 01 07 2D FF 01 00
  746 art\ae_nabs2.png 323 629 09 31 64 -31 0
  747 art\ae_nabs2.png 402 629 09 90 64 -31 -59
  748 art\ae_nabs2.png 481 629 09 91 64 -31 -60
  749 art\ae_nabs2.png 560 629 09 91 64 -31 -60
  750 art\ae_nabs2.png 639 629 09 31 64 -31 0
  751 art\ae_nabs2.png 718 629 09 94 65 -32 -63
  752 art\ae_nabs2.png 5 733 09 94 65 -32 -63
  753 art\ae_nabs2.png 85 733 09 91 64 -31 -60
  754 art\ae_nabs2.png 164 733 09 109 64 -31 -78
  755 art\ae_nabs2.png 243 733 09 94 66 -32 -63
  756 art\ae_nabs2.png 324 733 09 94 66 -32 -63
  757 art\ae_nabs2.png 405 733 09 91 65 -31 -60
  758 art\ae_nabs2.png 485 733 09 108 65 -31 -77
  759 art\ae_nabs2.png 565 733 09 94 65 -32 -63
  760 art\ae_nabs2.png 645 733 09 94 64 -32 -63
  761 art\ae_nabs2.png 5 847 09 91 64 -31 -60
  762 art\ae_nabs2.png 84 847 09 108 64 -31 -78
  763 art\ae_nabs2.png 163 847 09 94 66 -32 -63
  764 art\ae_nabs2.png 244 847 09 94 66 -32 -63
  765 art\ae_nabs2.png 325 847 09 91 65 -31 -60
  766 art\ae_nabs2.png 405 847 09 108 64 -31 -77
  767 art\ae_nabs2.png 484 847 09 94 65 -32 -63
  768 art\ae_nabs2.png 564 847 09 94 65 -31 -63
  769 art\ae_nabs2.png 644 847 09 91 64 -31 -60
  770 art\ae_nabs3.png 5 5 09 108 64 -31 -77
  771 art\ae_nabs3.png 84 5 09 94 65 -32 -63
  772 art\ae_nabs3.png 164 5 09 94 65 -32 -63
  773 art\ae_nabs3.png 244 5 09 91 64 -31 -60
  774 art\ae_nabs3.png 323 5 09 108 64 -30 -77
  775 art\ae_nabs3.png 402 5 09 94 66 -32 -63
  776 art\ae_nabs3.png 483 5 09 94 66 -32 -63
  777 art\ae_nabs3.png 564 5 09 91 65 -31 -60
  778 art\ae_nabs3.png 644 5 09 108 65 -31 -77
  779 art\ae_nabs3.png 5 118 09 94 65 -32 -63
  780 art\ae_nabs3.png 85 118 09 94 65 -32 -63
  781 art\ae_nabs3.png 165 118 09 91 64 -31 -60
  782 art\ae_nabs3.png 244 118 09 108 63 -31 -77
  783 art\ae_nabs3.png 322 118 09 94 66 -32 -63
  784 art\ae_nabs3.png 403 118 09 94 66 -32 -63
  785 art\ae_nabs3.png 484 118 09 91 65 -31 -60
  786 art\ae_nabs3.png 564 118 09 108 65 -31 -77
  787 art\ae_nabs3.png 644 118 09 94 65 -32 -63
  788 art\ae_nabs3.png 5 231 09 94 65 -32 -63
  789 art\ae_nabs3.png 85 231 09 91 64 -31 -60
  790 art\ae_nabs3.png 164 231 09 108 64 -30 -77
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0D // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0D C9 // Offset
                 "Chicago School 03" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
  930 * 7 03 07 01 0D 00 A1 00
// ID 0E Chicago School NE WIDE-THIN 2
// Chicago School NE WIDE-THIN 2
  931 * 6 01 07 2D FF 01 00
  932 art\ae_nabs3.png 243 231 09 36 65 -31 -5
  933 art\ae_nabs3.png 323 231 09 82 64 -31 -51
  934 art\ae_nabs3.png 402 231 09 90 64 -31 -59
  935 art\ae_nabs3.png 481 231 09 90 64 -31 -59
  936 art\ae_nabs3.png 560 231 09 31 64 -31 0
  937 art\ae_nabs3.png 639 231 09 94 65 -32 -63
  938 art\ae_nabs3.png 719 231 09 94 65 -32 -63
  939 art\ae_nabs3.png 5 344 09 91 64 -31 -60
  940 art\ae_nabs3.png 84 344 09 109 64 -31 -78
  941 art\ae_nabs3.png 163 344 09 94 66 -32 -63
  942 art\ae_nabs3.png 244 344 09 94 66 -32 -63
  943 art\ae_nabs3.png 325 344 09 91 65 -31 -60
  944 art\ae_nabs3.png 405 344 09 108 65 -31 -77
  945 art\ae_nabs3.png 485 344 09 94 65 -32 -63
  946 art\ae_nabs3.png 565 344 09 94 64 -32 -63
  947 art\ae_nabs3.png 644 344 09 91 64 -31 -60
  948 art\ae_nabs3.png 5 458 09 108 64 -31 -78
  949 art\ae_nabs3.png 84 458 09 94 66 -32 -63
  950 art\ae_nabs3.png 165 458 09 94 66 -32 -63
  951 art\ae_nabs3.png 246 458 09 91 65 -31 -60
  952 art\ae_nabs3.png 326 458 09 108 64 -31 -77
  953 art\ae_nabs3.png 405 458 09 94 65 -32 -63
  954 art\ae_nabs3.png 485 458 09 94 65 -31 -63
  955 art\ae_nabs3.png 565 458 09 91 64 -31 -60
  956 art\ae_nabs3.png 644 458 09 108 64 -31 -77
  957 art\ae_nabs3.png 5 571 09 94 65 -32 -63
  958 art\ae_nabs3.png 85 571 09 94 65 -32 -63
  959 art\ae_nabs3.png 165 571 09 91 64 -31 -60
  960 art\ae_nabs3.png 244 571 09 108 64 -30 -77
  961 art\ae_nabs3.png 323 571 09 94 66 -32 -63
  962 art\ae_nabs3.png 404 571 09 94 66 -32 -63
  963 art\ae_nabs3.png 485 571 09 91 65 -31 -60
  964 art\ae_nabs3.png 565 571 09 108 65 -31 -77
  965 art\ae_nabs3.png 645 571 09 94 65 -32 -63
  966 art\ae_nabs3.png 5 684 09 94 65 -32 -63
  967 art\ae_nabs3.png 85 684 09 91 64 -31 -60
  968 art\ae_nabs3.png 164 684 09 108 63 -31 -77
  969 art\ae_nabs3.png 242 684 09 94 66 -32 -63
  970 art\ae_nabs3.png 323 684 09 94 66 -32 -63
  971 art\ae_nabs3.png 404 684 09 91 65 -31 -60
  972 art\ae_nabs3.png 484 684 09 108 65 -31 -77
  973 art\ae_nabs3.png 564 684 09 94 65 -32 -63
  974 art\ae_nabs3.png 644 684 09 94 65 -32 -63
  975 art\ae_nabs3.png 5 797 09 91 64 -31 -60
  976 art\ae_nabs3.png 84 797 09 108 64 -30 -77
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0E // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
  // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0E C9 // Offset
                 "Chicago School 04" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1116 * 7 03 07 01 0E 00 A1 00
// ID 0F Chicago School NW THIN-WIDE 1
// Chicago School NW THIN-WIDE 1
 1117 * 6 01 07 2D FF 01 00
 1118 art\ae_nabs3.png 163 797 09 31 64 -31 0
 1119 art\ae_nabs3.png 242 797 09 90 64 -31 -58
 1120 art\ae_nabs3.png 321 797 09 81 64 -31 -50
 1121 art\ae_nabs3.png 400 797 09 82 64 -31 -51
 1122 art\ae_nabs3.png 479 797 09 31 64 -31 0
 1123 art\ae_nabs3.png 558 797 09 86 65 -32 -55
 1124 art\ae_nabs3.png 638 797 09 86 65 -32 -55
 1125 art\ae_nabs3.png 718 797 09 86 64 -31 -55
 1126 art\ae_nabs4.png 5 5 09 99 64 -31 -68
 1127 art\ae_nabs4.png 84 5 09 85 66 -32 -54
 1128 art\ae_nabs4.png 165 5 09 85 66 -32 -54
 1129 art\ae_nabs4.png 246 5 09 84 65 -31 -53
 1130 art\ae_nabs4.png 326 5 09 98 65 -31 -68
 1131 art\ae_nabs4.png 406 5 09 88 66 -32 -57
 1132 art\ae_nabs4.png 487 5 09 88 66 -32 -57
 1133 art\ae_nabs4.png 568 5 09 88 65 -31 -57
 1134 art\ae_nabs4.png 648 5 09 99 65 -31 -68
 1135 art\ae_nabs4.png 5 109 09 93 66 -32 -62
 1136 art\ae_nabs4.png 86 109 09 93 65 -32 -62
 1137 art\ae_nabs4.png 166 109 09 93 65 -31 -62
 1138 art\ae_nabs4.png 246 109 09 99 65 -31 -68
 1139 art\ae_nabs4.png 326 109 09 96 65 -32 -65
 1140 art\ae_nabs4.png 406 109 09 96 65 -32 -65
 1141 art\ae_nabs4.png 486 109 09 96 64 -31 -65
 1142 art\ae_nabs4.png 565 109 09 99 64 -31 -68
 1143 art\ae_nabs4.png 644 109 09 86 65 -32 -55
 1144 art\ae_nabs4.png 5 213 09 86 65 -32 -55
 1145 art\ae_nabs4.png 85 213 09 86 64 -31 -55
 1146 art\ae_nabs4.png 164 213 09 99 64 -31 -68
 1147 art\ae_nabs4.png 243 213 09 85 66 -32 -54
 1148 art\ae_nabs4.png 324 213 09 85 66 -32 -54
 1149 art\ae_nabs4.png 405 213 09 84 65 -31 -53
 1150 art\ae_nabs4.png 485 213 09 99 65 -31 -68
 1151 art\ae_nabs4.png 565 213 09 88 66 -32 -57
 1152 art\ae_nabs4.png 646 213 09 88 66 -32 -57
 1153 art\ae_nabs4.png 5 317 09 88 65 -31 -57
 1154 art\ae_nabs4.png 85 317 09 99 65 -31 -68
 1155 art\ae_nabs4.png 165 317 09 93 66 -32 -62
 1156 art\ae_nabs4.png 246 317 09 93 66 -32 -62
 1157 art\ae_nabs4.png 327 317 09 93 65 -31 -62
 1158 art\ae_nabs4.png 407 317 09 99 65 -31 -68
 1159 art\ae_nabs4.png 487 317 09 96 65 -32 -65
 1160 art\ae_nabs4.png 567 317 09 96 65 -32 -65
 1161 art\ae_nabs4.png 647 317 09 96 64 -31 -65
 1162 art\ae_nabs4.png 5 421 09 99 64 -31 -68
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  0F // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
             0F C9 // Offset
                 "Chicago School 05" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  0F // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1302 * 7 03 07 01 0F 00 A1 00
// ID 10 Chicago School NW THIN-WIDE 2
// Chicago School NW THIN-WIDE 2
 1303 * 6 01 07 2D FF 01 00
 1304 art\ae_nabs4.png 84 421 09 38 64 -31 -7
 1305 art\ae_nabs4.png 163 421 09 73 64 -31 -42
 1306 art\ae_nabs4.png 242 421 09 89 64 -31 -58
 1307 art\ae_nabs4.png 321 421 09 89 64 -31 -58
 1308 art\ae_nabs4.png 400 421 09 31 64 -31 0
 1309 art\ae_nabs4.png 479 421 09 86 65 -32 -55
 1310 art\ae_nabs4.png 559 421 09 86 65 -32 -55
 1311 art\ae_nabs4.png 639 421 09 86 64 -31 -55
 1312 art\ae_nabs4.png 718 421 09 99 64 -31 -68
 1313 art\ae_nabs4.png 5 525 09 85 66 -32 -54
 1314 art\ae_nabs4.png 86 525 09 85 66 -32 -54
 1315 art\ae_nabs4.png 167 525 09 84 65 -31 -53
 1316 art\ae_nabs4.png 247 525 09 98 65 -31 -68
 1317 art\ae_nabs4.png 327 525 09 88 66 -32 -57
 1318 art\ae_nabs4.png 408 525 09 88 66 -32 -57
 1319 art\ae_nabs4.png 489 525 09 88 65 -31 -57
 1320 art\ae_nabs4.png 569 525 09 99 65 -31 -68
 1321 art\ae_nabs4.png 649 525 09 93 66 -32 -62
 1322 art\ae_nabs4.png 5 629 09 93 65 -32 -62
 1323 art\ae_nabs4.png 85 629 09 93 65 -31 -62
 1324 art\ae_nabs4.png 165 629 09 99 65 -31 -68
 1325 art\ae_nabs4.png 245 629 09 96 65 -32 -65
 1326 art\ae_nabs4.png 325 629 09 96 65 -32 -65
 1327 art\ae_nabs4.png 405 629 09 96 64 -31 -65
 1328 art\ae_nabs4.png 484 629 09 99 64 -31 -68
 1329 art\ae_nabs4.png 563 629 09 86 65 -32 -55
 1330 art\ae_nabs4.png 643 629 09 86 65 -32 -55
 1331 art\ae_nabs4.png 5 733 09 86 64 -31 -55
 1332 art\ae_nabs4.png 84 733 09 99 64 -31 -68
 1333 art\ae_nabs4.png 163 733 09 85 66 -32 -54
 1334 art\ae_nabs4.png 244 733 09 85 66 -32 -54
 1335 art\ae_nabs4.png 325 733 09 84 65 -31 -53
 1336 art\ae_nabs4.png 405 733 09 99 65 -31 -68
 1337 art\ae_nabs4.png 485 733 09 88 66 -32 -57
 1338 art\ae_nabs4.png 566 733 09 88 66 -32 -57
 1339 art\ae_nabs4.png 647 733 09 88 65 -31 -57
 1340 art\ae_nabs4.png 5 837 09 99 65 -31 -68
 1341 art\ae_nabs4.png 85 837 09 93 66 -32 -62
 1342 art\ae_nabs4.png 166 837 09 93 66 -32 -62
 1343 art\ae_nabs4.png 247 837 09 93 65 -31 -62
 1344 art\ae_nabs4.png 327 837 09 99 65 -31 -68
 1345 art\ae_nabs4.png 407 837 09 96 65 -32 -65
 1346 art\ae_nabs4.png 487 837 09 96 65 -32 -65
 1347 art\ae_nabs4.png 567 837 09 96 64 -31 -65
 1348 art\ae_nabs4.png 646 837 09 99 64 -31 -68
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  10 // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 10 C9 // Offset
                 "Chicago School 06" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  10 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1488 * 7 03 07 01 10 00 A1 00
// ID 11 Chicago School NW WIDE-THIN 1
// Chicago School NW WIDE-THIN 1
 1489 * 6 01 07 2D FF 01 00
 1490 art\ae_nabs4.png 5 941 09 31 64 -31 0
 1491 art\ae_nabs5.png 5 5 09 82 64 -31 -51
 1492 art\ae_nabs5.png 84 5 09 91 64 -31 -60
 1493 art\ae_nabs5.png 163 5 09 91 64 -31 -60
 1494 art\ae_nabs5.png 242 5 09 31 65 -31 0
 1495 art\ae_nabs5.png 322 5 09 94 65 -31 -63
 1496 art\ae_nabs5.png 402 5 09 94 65 -31 -63
 1497 art\ae_nabs5.png 482 5 09 91 64 -31 -60
 1498 art\ae_nabs5.png 561 5 09 108 64 -31 -77
 1499 art\ae_nabs5.png 640 5 09 94 66 -32 -63
 1500 art\ae_nabs5.png 5 118 09 94 66 -32 -63
 1501 art\ae_nabs5.png 86 118 09 91 65 -32 -60
 1502 art\ae_nabs5.png 166 118 09 108 65 -32 -77
 1503 art\ae_nabs5.png 246 118 09 94 65 -31 -63
 1504 art\ae_nabs5.png 326 118 09 94 65 -31 -63
 1505 art\ae_nabs5.png 406 118 09 91 64 -31 -60
 1506 art\ae_nabs5.png 485 118 09 108 64 -31 -77
 1507 art\ae_nabs5.png 564 118 09 94 66 -32 -63
 1508 art\ae_nabs5.png 645 118 09 94 66 -32 -63
 1509 art\ae_nabs5.png 5 231 09 91 65 -32 -60
 1510 art\ae_nabs5.png 85 231 09 108 65 -32 -77
 1511 art\ae_nabs5.png 165 231 09 94 65 -31 -63
 1512 art\ae_nabs5.png 245 231 09 94 65 -31 -63
 1513 art\ae_nabs5.png 325 231 09 91 64 -31 -60
 1514 art\ae_nabs5.png 404 231 09 108 64 -31 -77
 1515 art\ae_nabs5.png 483 231 09 94 65 -31 -63
 1516 art\ae_nabs5.png 563 231 09 94 65 -31 -63
 1517 art\ae_nabs5.png 643 231 09 91 64 -31 -60
 1518 art\ae_nabs5.png 5 344 09 108 64 -31 -77
 1519 art\ae_nabs5.png 84 344 09 94 66 -32 -63
 1520 art\ae_nabs5.png 165 344 09 94 66 -32 -63
 1521 art\ae_nabs5.png 246 344 09 91 65 -32 -60
 1522 art\ae_nabs5.png 326 344 09 108 65 -32 -77
 1523 art\ae_nabs5.png 406 344 09 94 65 -31 -63
 1524 art\ae_nabs5.png 486 344 09 94 65 -31 -63
 1525 art\ae_nabs5.png 566 344 09 91 64 -31 -60
 1526 art\ae_nabs5.png 645 344 09 108 64 -31 -77
 1527 art\ae_nabs5.png 5 457 09 95 66 -32 -64
 1528 art\ae_nabs5.png 86 457 09 94 66 -32 -63
 1529 art\ae_nabs5.png 167 457 09 91 65 -32 -60
 1530 art\ae_nabs5.png 247 457 09 108 65 -32 -77
 1531 art\ae_nabs5.png 327 457 09 94 64 -31 -63
 1532 art\ae_nabs5.png 406 457 09 94 65 -31 -63
 1533 art\ae_nabs5.png 486 457 09 91 64 -31 -60
 1534 art\ae_nabs5.png 565 457 09 108 64 -31 -77
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  11 // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 11 C9 // Offset
                 "Chicago School 07" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  11 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 1674 * 7 03 07 01 11 00 A1 00
// ID 12 Chicago School NW WIDE-THIN 2
// Chicago School NW WIDE-THIN 2
 1675 * 6 01 07 2D FF 01 00
 1676 art\ae_nabs5.png 644 457 09 36 64 -31 -5
 1677 art\ae_nabs5.png 5 570 09 82 64 -31 -51
 1678 art\ae_nabs5.png 84 570 09 82 64 -31 -51
 1679 art\ae_nabs5.png 163 570 09 82 64 -31 -51
 1680 art\ae_nabs5.png 242 570 09 31 65 -31 0
 1681 art\ae_nabs5.png 322 570 09 94 65 -31 -63
 1682 art\ae_nabs5.png 402 570 09 94 65 -31 -63
 1683 art\ae_nabs5.png 482 570 09 91 64 -31 -60
 1684 art\ae_nabs5.png 561 570 09 108 64 -31 -77
 1685 art\ae_nabs5.png 640 570 09 94 66 -32 -63
 1686 art\ae_nabs5.png 5 683 09 94 66 -32 -63
 1687 art\ae_nabs5.png 86 683 09 91 65 -32 -60
 1688 art\ae_nabs5.png 166 683 09 108 65 -32 -77
 1689 art\ae_nabs5.png 246 683 09 94 65 -31 -63
 1690 art\ae_nabs5.png 326 683 09 94 65 -31 -63
 1691 art\ae_nabs5.png 406 683 09 91 64 -31 -60
 1692 art\ae_nabs5.png 485 683 09 108 64 -31 -77
 1693 art\ae_nabs5.png 564 683 09 94 66 -32 -63
 1694 art\ae_nabs5.png 645 683 09 94 66 -32 -63
 1695 art\ae_nabs5.png 5 796 09 91 65 -32 -60
 1696 art\ae_nabs5.png 85 796 09 108 65 -32 -77
 1697 art\ae_nabs5.png 165 796 09 94 65 -31 -63
 1698 art\ae_nabs5.png 245 796 09 94 65 -31 -63
 1699 art\ae_nabs5.png 325 796 09 91 64 -31 -60
 1700 art\ae_nabs5.png 404 796 09 108 64 -31 -77
 1701 art\ae_nabs5.png 483 796 09 94 65 -31 -63
 1702 art\ae_nabs5.png 563 796 09 94 65 -31 -63
 1703 art\ae_nabs5.png 643 796 09 91 64 -31 -60
 1704 art\ae_nabs6.png 5 5 09 108 64 -31 -77
 1705 art\ae_nabs6.png 84 5 09 94 66 -32 -63
 1706 art\ae_nabs6.png 165 5 09 94 66 -32 -63
 1707 art\ae_nabs6.png 246 5 09 91 65 -32 -60
 1708 art\ae_nabs6.png 326 5 09 108 65 -32 -77
 1709 art\ae_nabs6.png 406 5 09 94 65 -31 -63
 1710 art\ae_nabs6.png 486 5 09 94 65 -31 -63
 1711 art\ae_nabs6.png 566 5 09 91 64 -31 -60
 1712 art\ae_nabs6.png 645 5 09 108 64 -31 -77
 1713 art\ae_nabs6.png 5 118 09 95 66 -32 -64
 1714 art\ae_nabs6.png 86 118 09 94 66 -32 -63
 1715 art\ae_nabs6.png 167 118 09 91 65 -32 -60
 1716 art\ae_nabs6.png 247 118 09 108 65 -32 -77
 1717 art\ae_nabs6.png 327 118 09 94 64 -31 -63
 1718 art\ae_nabs6.png 406 118 09 94 65 -31 -63
 1719 art\ae_nabs6.png 486 118 09 91 64 -31 -60
 1720 art\ae_nabs6.png 565 118 09 108 64 -31 -77
0 * 0 00 07 // action 0 feat 07
  09 // Properties to set. Make sure this matches the other buildings and the include!!
   01 // buildings to change
  12 // ID number
  08 34
  09 03
  0A 0A 27
  10 30 75
  11 9B
  13 10 38
  14 01
  18 04
  1D 04
 // Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
             01 // Number of strings to change
                 12 C9 // Offset
                 "Chicago School 08" 00 // String
// Action 2 Chain:
// Stuff happens. Don't try to comprehend, quick way to a whole lot of brain trauma...                 
// Construction stages, ground tile
0 * 0 02 07 00 00 04 00 00 80 00 00 00 80 00 00 10 10 05
0 * 0 02 07 01 00 04 00 00 80 01 00 00 80 00 00 10 10 10
0 * 0 02 07 02 00 04 00 00 80 02 00 00 80 00 00 10 10 10
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 10
// Row 1 
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 10
0 * 0 02 07 05 00 04 00 00 80 19 00 00 80 00 00 10 10 10
0 * 0 02 07 64 81 43 00 FF 02 04 00 00 03 05 00 04 04 03 00
0 * 0 02 07 65 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 64 00
0 * 0 02 07 0A 00 04 00 00 80 06 00 00 80 00 00 10 10 10
0 * 0 02 07 0B 00 04 00 00 80 1A 00 00 80 00 00 10 10 10
0 * 0 02 07 66 81 43 00 FF 02 0A 00 00 03 0B 00 04 04 03 00
0 * 0 02 07 67 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 66 00
0 * 0 02 07 10 00 04 00 00 80 07 00 00 80 00 00 10 10 10
0 * 0 02 07 11 00 04 00 00 80 1B 00 00 80 00 00 10 10 10
0 * 0 02 07 68 81 43 00 FF 02 10 00 00 03 11 00 04 04 03 00
0 * 0 02 07 69 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 68 00
0 * 0 02 07 16 00 04 00 00 80 08 00 00 80 00 00 10 10 10
0 * 0 02 07 17 00 04 00 00 80 1C 00 00 80 00 00 10 10 10
0 * 0 02 07 6A 81 43 00 FF 02 16 00 00 03 17 00 04 04 03 00
0 * 0 02 07 6B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6A 00
// Row 2:
0 * 0 02 07 1C 00 04 00 00 80 09 00 00 80 00 00 10 10 10
0 * 0 02 07 1D 00 04 00 00 80 1D 00 00 80 00 00 10 10 10
0 * 0 02 07 6C 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
0 * 0 02 07 6D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6C 00
0 * 0 02 07 22 00 04 00 00 80 0A 00 00 80 00 00 10 10 10
0 * 0 02 07 23 00 04 00 00 80 1E 00 00 80 00 00 10 10 10
0 * 0 02 07 6E 81 43 00 FF 02 22 00 00 03 23 00 04 04 03 00
0 * 0 02 07 6F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 6E 00
0 * 0 02 07 28 00 04 00 00 80 0B 00 00 80 00 00 10 10 10
0 * 0 02 07 29 00 04 00 00 80 1F 00 00 80 00 00 10 10 10
0 * 0 02 07 70 81 43 00 FF 02 28 00 00 03 29 00 04 04 03 00
0 * 0 02 07 71 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 70 00
0 * 0 02 07 2E 00 04 00 00 80 0C 00 00 80 00 00 10 10 10
0 * 0 02 07 2F 00 04 00 00 80 20 00 00 80 00 00 10 10 10
0 * 0 02 07 72 81 43 00 FF 02 2E 00 00 03 2F 00 04 04 03 00
0 * 0 02 07 73 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 72 00
// Row 3
0 * 0 02 07 34 00 04 00 00 80 0D 00 00 80 00 00 10 10 10
0 * 0 02 07 35 00 04 00 00 80 21 00 00 80 00 00 10 10 10
0 * 0 02 07 74 81 43 00 FF 02 34 00 00 03 35 00 04 04 03 00
0 * 0 02 07 75 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 74 00
0 * 0 02 07 3A 00 04 00 00 80 0E 00 00 80 00 00 10 10 10
0 * 0 02 07 3B 00 04 00 00 80 22 00 00 80 00 00 10 10 10
0 * 0 02 07 76 81 43 00 FF 02 3A 00 00 03 3B 00 04 04 03 00
0 * 0 02 07 77 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 76 00
0 * 0 02 07 40 00 04 00 00 80 0F 00 00 80 00 00 10 10 10
0 * 0 02 07 41 00 04 00 00 80 23 00 00 80 00 00 10 10 10
0 * 0 02 07 78 81 43 00 FF 02 40 00 00 03 41 00 04 04 03 00
0 * 0 02 07 79 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 78 00
0 * 0 02 07 46 00 04 00 00 80 10 00 00 80 00 00 10 10 10
0 * 0 02 07 47 00 04 00 00 80 24 00 00 80 00 00 10 10 10
0 * 0 02 07 7A 81 43 00 FF 02 46 00 00 03 47 00 04 04 03 00
0 * 0 02 07 7B 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7A 00
// Row 4
0 * 0 02 07 4C 00 04 00 00 80 11 00 00 80 00 00 10 10 10
0 * 0 02 07 4D 00 04 00 00 80 25 00 00 80 00 00 10 10 10
0 * 0 02 07 7C 81 43 00 FF 02 4C 00 00 03 4D 00 04 04 03 00
0 * 0 02 07 7D 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7C 00
0 * 0 02 07 52 00 04 00 00 80 12 00 00 80 00 00 10 10 10
0 * 0 02 07 53 00 04 00 00 80 26 00 00 80 00 00 10 10 10
0 * 0 02 07 7E 81 43 00 FF 02 52 00 00 03 53 00 04 04 03 00
0 * 0 02 07 7F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 7E 00
0 * 0 02 07 58 00 04 00 00 80 13 00 00 80 00 00 10 10 10
0 * 0 02 07 59 00 04 00 00 80 27 00 00 80 00 00 10 10 10
0 * 0 02 07 80 81 43 00 FF 02 58 00 00 03 59 00 04 04 03 00
0 * 0 02 07 81 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 80 00
0 * 0 02 07 5E 00 04 00 00 80 14 00 00 80 00 00 10 10 10
0 * 0 02 07 5F 00 04 00 00 80 28 00 00 80 00 00 10 10 10
0 * 0 02 07 82 81 43 00 FF 02 5E 00 00 03 5F 00 04 04 03 00
0 * 0 02 07 83 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 82 00
// random varact2 to pick the building variant to spawn
0 * 0 02 07 // act 2 feat 7
  99 // setid
  80 // lolol so random XD
  00 // no triggers
  00 // first random bit to use
  10 // 16 choices total
  83 00 // these point at the construction stage setids for each varient.
  81 00 // why are there so many varients?
  7F 00 // who can know these things.
  7D 00 // how did Oz maintain sanity even drawing them?
  7B 00 // is there a better way of handling these varients?
  79 00 // the answer is probably worse than the current situation we're in
  77 00
  75 00
  73 00
  71 00
  6F 00
  6D 00
  6B 00
  69 00
  67 00
  65 00
// varact2 to restrict building until a certain population
0 * 0 02 07
  9A // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  DB 05 // maxval
  01 FF // setid
  DC 05 // minval
  FF FF // maxval
  01 FF // default setid
// Check to see how many are left, we'll allow one of each to survive for a max of 8
0 * 0 02 07 // Act 2 feat 7
  A6 // setid
  81 // town var
  61 // how many of a building id exist
  12 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// random chance 25% of protect
0 * 0 02 07 // act 2 feat 7
  A7 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
  A6 00 // unprotect if there's more than 1 left
// random chance 50% of protect
0 * 0 02 07 // act 2 feat 7
  A8 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  02 // number of choices
  01 FF // protec
  A6 00 // unprotect if there's more than 1 left
// random chance 75% of protect
0 * 0 02 07 // act 2 feat 7
  A9 // setid
  80 // random callback
  00 // no triggers
  00 // first random bit to use
  04 // number of choices
  01 FF // protect
  01 FF // protect
  01 FF // protect
  A6 00 // unprotect if there's more than 1 left
// years since 1920
0 * 0 02 07 // act 2 feat 7
  A0 // setid
  81 // global var
  01 // var town pop
  00 FF // varadj
  05 // numranges
  01 FF // setid protec 0%
  00 // minval eightyone
  14 // maxval infinity
  A7 00 // setid protec 25%
  15 // minval zero
  28 // maxval forty
  A8 00 // setid protect 50%
  29 // minval fortyone
  3C // maxval sixty
  A9 00 // setid protec 75%
  3D // minval sixtyone
  50 // maxval eighty
  01 FF // setid protec 100%
  51 // minval eightyone
  FF // maxval infinity
  01 FF // default setid
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  A1 // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  9A 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  A0 00 // setid random chance
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  99 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// action 3 to tie the action2 chain back to the building definition 
 0 * 0 03 07 01 12 00 A1 00
// ID 13 - 14 Large Deco Building (North and South)
// Large Deco Building (NW)
0 * 0 01 07 06 FF 01 00
0 art\ae_nabs6.png 644 118 09 31 64 -31 0
0 art\ae_nabs6.png 5 231 09 112 64 -31 -81
0 art\ae_nabs6.png 84 231 09 158 64 -31 -127
0 art\ae_nabs6.png 163 231 09 155 64 -31 -124
0 art\ae_nabs6.png 242 231 09 31 64 -31 0
0 art\ae_nabs6.png 321 231 09 155 64 -31 -124
// Action 0
0 * 0 00 07
  0A
  01
  13
  08 42
  09 0a
  0A 0A 27
  10 60 EA
  11 FF
  13 10 38
  14 01
  18 20
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  13 C9 // Offset
  "Large Deco North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  13 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  13 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 13 00 1C 00
// Large Deco Building (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\ae_nabs6.png 400 231 09 31 64 -31 0
0 art\ae_nabs6.png 479 231 09 115 64 -31 -84
0 art\ae_nabs6.png 558 231 09 171 64 -31 -140
0 art\ae_nabs6.png 637 231 09 165 64 -31 -134
0 art\ae_nabs6.png 716 231 09 31 64 -31 0
0 art\ae_nabs6.png 5 407 09 165 64 -31 -134
// Action 0
0 * 0 00 07
  05
  01
  14
  08 43
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  14 C9 // Offset
  "Large Deco South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  14 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  14 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 14 00 1C 00
// ID 15 Deco Buildings
// Deco Buildings
 1909 * 6 01 07 06 FF 01 00
 1910 art\ae_nabs6.png 84 407 09 31 64 -31 0
 1911 art\ae_nabs6.png 163 407 09 109 64 -31 -78
 1912 art\ae_nabs6.png 242 407 09 143 66 -32 -112
 1913 art\ae_nabs6.png 323 407 09 153 66 -32 -122
 1914 art\ae_nabs6.png 404 407 09 31 64 -31 0
 1915 art\ae_nabs6.png 483 407 09 153 66 -32 -122
 1916 * 24 00 07
  0A
  01
  15
  08 34
  09 01
  0A 0A 27
  10 60 EA
  11 FF
  13 10 38
  14 01
  18 04
  19 02 // Flat out protected.
  1D 04
 // Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 15 C9 // Offset
                 "Deco Office Tower" 00 // String
// Action 2 Chain:
 1918 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1919 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1920 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1921 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1922 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1923 * 18 02 07 1E 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1924 * 22 02 07 1F 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 1E 00
 1925 * 6 01 07 06 FF 01 00
 1926 art\ae_nabs6.png 564 407 09 38 64 -31 -7
 1927 art\ae_nabs6.png 643 407 09 113 64 -31 -82
 1928 art\ae_nabs6.png 5 577 09 161 64 -31 -130
 1929 art\ae_nabs6.png 84 577 09 165 66 -32 -134
 1930 art\ae_nabs6.png 165 577 09 31 66 -32 0
 1931 art\ae_nabs6.png 246 577 09 165 66 -32 -134
 1932 * 17 02 07 05 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1933 * 17 02 07 06 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1934 * 17 02 07 07 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1935 * 17 02 07 08 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1936 * 17 02 07 09 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1937 * 18 02 07 20 81 43 00 FF 02 08 00 00 03 09 00 04 04 03 00
 1938 * 22 02 07 21 81 40 00 03 03 05 00 00 00 06 00 01 01 07 00 02 02 20 00
 1939 * 6 01 07 06 FF 01 00
 1940 art\ae_nabs6.png 327 577 09 38 64 -31 -7
 1941 art\ae_nabs6.png 406 577 09 104 64 -31 -73
 1942 art\ae_nabs6.png 485 577 09 146 64 -31 -115
 1943 art\ae_nabs6.png 564 577 09 156 65 -31 -125
 1944 art\ae_nabs6.png 644 577 09 31 65 -32 0
 1945 art\ae_nabs6.png 5 747 09 156 65 -31 -125
 1946 * 17 02 07 0A 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1947 * 17 02 07 0B 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1948 * 17 02 07 0C 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1949 * 17 02 07 0D 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1950 * 17 02 07 0E 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1951 * 18 02 07 22 81 43 00 FF 02 0D 00 00 03 0E 00 04 04 03 00
 1952 * 22 02 07 23 81 40 00 03 03 0A 00 00 00 0B 00 01 01 0C 00 02 02 22 00
 1953 * 6 01 07 06 FF 01 00
 1954 art\ae_nabs6.png 85 747 09 45 64 -31 -14
 1955 art\ae_nabs6.png 164 747 09 107 64 -31 -76
 1956 art\ae_nabs6.png 243 747 09 150 64 -31 -119
 1957 art\ae_nabs6.png 322 747 09 167 64 -31 -136
 1958 art\ae_nabs6.png 401 747 09 31 64 -31 0
 1959 art\ae_nabs6.png 480 747 09 167 64 -31 -136
 1960 * 17 02 07 0F 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1961 * 17 02 07 10 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1962 * 17 02 07 11 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1963 * 17 02 07 12 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1964 * 17 02 07 13 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1965 * 18 02 07 24 81 43 00 FF 02 12 00 00 03 13 00 04 04 03 00
 1966 * 22 02 07 25 81 40 00 03 03 0F 00 00 00 10 00 01 01 11 00 02 02 24 00
 1967 * 6 01 07 06 FF 01 00
 1968 art\ae_nabs6.png 559 747 09 35 64 -31 -4
 1969 art\ae_nabs6.png 638 747 09 114 64 -31 -83
 1970 art\ae_nabs6.png 717 747 09 146 64 -31 -115
 1971 art\ae_nabs7.png 5 5 09 159 64 -31 -128
 1972 art\ae_nabs7.png 84 5 09 31 64 -31 0
 1973 art\ae_nabs7.png 163 5 09 159 64 -31 -128
 1974 * 17 02 07 14 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1975 * 17 02 07 15 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1976 * 17 02 07 16 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1977 * 17 02 07 17 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1978 * 17 02 07 18 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1979 * 18 02 07 26 81 43 00 FF 02 17 00 00 03 18 00 04 04 03 00
 1980 * 22 02 07 27 81 40 00 03 03 14 00 00 00 15 00 01 01 16 00 02 02 26 00
 1981 * 6 01 07 06 FF 01 00
 1982 art\ae_nabs7.png 242 5 09 33 64 -31 -2
 1983 art\ae_nabs7.png 321 5 09 103 64 -31 -72
 1984 art\ae_nabs7.png 400 5 09 138 64 -31 -107
 1985 art\ae_nabs7.png 479 5 09 151 64 -31 -120
 1986 art\ae_nabs7.png 558 5 09 31 64 -31 0
 1987 art\ae_nabs7.png 637 5 09 151 64 -31 -120
 1988 * 17 02 07 19 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1989 * 17 02 07 1A 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1990 * 17 02 07 1B 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1991 * 17 02 07 1C 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1992 * 17 02 07 1D 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1993 * 18 02 07 28 81 43 00 FF 02 1C 00 00 03 1D 00 04 04 03 00
 1994 * 22 02 07 29 81 40 00 03 03 19 00 00 00 1A 00 01 01 1B 00 02 02 28 00
 // Pick random variation
1995 * 23 02 07 2A 80 00 00 08 1F 00 21 00 23 00 25 00 26 00 29 00 1F 00 21 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  2B // setid
  81 // town var
  61 // how many of a building id exist
  15 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  05 // maxval		
  00 FF // setid to use (unprotec)
  06 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  2C // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  3C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  2C 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  2B 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
2003 * 7 03 07 01 15 00 3C 00
// ID 16 small building 04
// Small Building 4 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\smallbuilding04.png 82 11 09 34 64 -31 -3
0 art\smallbuilding04.png 162 11 09 57 64 -31 -26
0 art\smallbuilding04.png 242 11 09 57 64 -31 -26
0 art\smallbuilding04.png 322 11 09 57 64 -31 -26
0 art\smallbuilding04.png 2 11 09 32 64 -31 -1
0 art\smallbuilding04.png 402 11 09 57 64 -31 -26
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  16 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  16 C9 // Offset
  "Small Building 04" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  16 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 17 small building 04
// Small Building 5 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\smallbuilding05.png 85 10 09 34 64 -31 -3
0 art\smallbuilding05.png 165 10 09 63 68 -31 -32
0 art\smallbuilding05.png 245 10 09 66 64 -31 -35
0 art\smallbuilding05.png 325 10 09 66 64 -31 -35
0 art\smallbuilding05.png 5 10 09 32 64 -31 -1
0 art\smallbuilding05.png 405 10 09 66 64 -31 -35
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  17 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  17 C9 // Offset
  "Small Building 05" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  17 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 18 small building 06
// Small Building 6 - More flats.
// Action 1:
0 * 0 01 07 06 FF 01 00
// Real Sprites:
0 art\smallbuilding06.png 92 20 09 34 64 -31 -3
0 art\smallbuilding06.png 167 20 09 57 64 -31 -28
0 art\smallbuilding06.png 247 20 09 59 64 -31 -28
0 art\smallbuilding06.png 327 20 09 59 64 -31 -28
0 art\smallbuilding06.png 12 20 09 31 64 -31 0
0 art\smallbuilding06.png 407 20 09 59 64 -31 -28
// Action 0 to set properties:   
0 * 0 00 07 // Action 0, Feature 7
  06 // Properties to change
  01 // Change properties for how many ID's
  18 // ID
  08 46 // Substitute type
  09 01 // Building flags
  0A 0A 2D // Set years availible
  13 0C 38 // Set availibility mask
  18 02 // Probability
  1D 04 // Set prop 1D to 4 
// Action 4 to set name:
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  18 C9 // Offset
  "Small Building 06" 00 // String
// Action 2 chain:
// Action2 Chain for the Small Buildings
// What we're going to do is check first check for our callbacks, if our callback gets called (This time its a callback that gets called when a town tries to demolish it's own building), it will go to a random action2, which then provides a few different possibilities for protecting the building. If the callback isn't getting called, it will jump straight to the construction stages, which will move through the three different stages of construction, before hitting the last stage, which is another varaction2 that checks for the ground type. That varaction2 will then link to either the normal building sprite, or the snowy building sprite depending on the ground type.
// 1st stage action 2:   
    0 * 0 02 07 // Action 2, Feature 07
                 00 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 00 00 00 80 // Building Sprite (00)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 2nd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 01 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 01 00 00 80 // Building Sprite (01)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// 3rd stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 02 // Set ID
                 00 // Literal 0
                 54 0F 00 00 // Ground Sprite (3924)
                 02 00 00 80 // Building Sprite (02)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Finished stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 03 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 03 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Snowy stage action 2:
    0 * 0 02 07 // Action 2, Feature 07
                 04 // Set ID
                 00 // Literal 0
                 04 00 00 80 // Ground Sprite (04)
                 05 00 00 80 // Building Sprite (03)
                 00 // Xoff
                 00 // Yoff
                 10 // Xext
                 10 // Yext
                 04 // Zext
// Check ground type and select either no.3 or no.4:
    0 * 0 02 07 // Action 2, Feature 07
                 10 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 43 // Variable (Terrain Type)
                 00 FF // Varadjust (AND FF)
                 02 // Nuber of ranges
                 // Range Checks:
                 03 00 // Use Set ID 3...
                 00 03 // If ground type between 0 and 3
                 04 00 // Use Set ID 4...
                 04 04 // If ground type between 4 and 4
                 03 00 // Default SetID to use if checks fail
// Construction stages, at last stage go to ground type checking:
    0 * 0 02 07 // Action 2, Feature 07
                 11 // Set ID
                 81 // Type (Lowest Byte of value accessed for house)
                 40 // Variable (Construction stages)
                 00 FF // Varadjust (AND FF)
                 03 // Number of ranges
                 // Range Checks:
                 00 00 // Use Set ID 0...
                 00 00 // If construction stage 0
                 01 00 // Use Set ID 1...
                 01 01 // If construction stage 1
                 02 00 // Use Set ID 2...
                 02 02 // If construction stage 2
                 10 00 // Default Set ID to use if checks fail
// Assign last action2 to id.2:
0 * 0 03 07 // Action 3, Feature 07
  01 // 1 id associated
  18 // id.2
  00 // cargotype, not used innit
  11 // last action2 setid
  00 // default setid
// Fin
// ID 19 - 1A Flatiron (North and South)
// Flatiron (NW)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\flatiron.png 6 3 09 119 64 -31 -88
0 art\flatiron.png 144 3 09 119 64 -31 -88
0 art\flatiron.png 284 3 09 119 64 -31 -88
0 art\flatiron.png 425 3 09 119 64 -31 -88
0 art\flatiron.png 564 3 09 119 64 -31 -88
0 art\flatiron.png 702 3 09 119 64 -31 -88
// Action 0
0 * 0 00 07
  0A
  01
  19
  08 42
  09 0a
  0A 0A 27
  10 60 EA
  11 FF
  13 10 38
  14 01
  18 20
  19 02 // must protec
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  19 C9 // Offset
  "Flatiron North" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  19 // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 00 03 07 01 19 00 1C 00
// Flatiron (SE)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\flatiron.png 76 3 09 119 64 -31 -88
0 art\flatiron.png 213 3 09 119 64 -31 -88
0 art\flatiron.png 354 3 09 119 64 -31 -88
0 art\flatiron.png 495 3 09 119 64 -31 -88
0 art\flatiron.png 633 3 09 119 64 -31 -88
0 art\flatiron.png 773 3 09 119 64 -31 -88
// Action 0
0 * 0 00 07
  05
  01
  1A
  08 43
  10 60 EA
  11 FF
  19 02 // must protec
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1A C9 // Offset
  "Flatiron South" 00 // String
// Action 2 Chain		 
// Action 2 Chain:
0 * 0 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
0 * 0 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
0 * 0 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
0 * 0 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
0 * 0 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
0 * 0 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
0 * 0 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  01 // maxval		
  00 FF // setid to use (unprotec)
  02 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  15 // setid
  81 // town var
  61 // how many of a building id exist
  1A // the building id to check, ours!
  00 // shift
  FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  01 // minval
  FF // maxval
  01 FF // setid to use (allow building)
0 * 0 02 07 // Act 2 feat 7
  16 // setid
  86 // another type of town var I forget which
  82 // how many people exist
  00 // shift
  FF FF // and mask
  01 // ranges to follow
  00 FF // setid to use (cockblock)
  00 00 // minval
  B7 0B // maxval
  15 00 // setid to use (goto the check for how many been built)
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  16 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1A 00 1C 00
// ID 1B - 1E Department Store (North, East, West and South)
// Department Store (N)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\departmentstore.png 5 7 09 35 64 -31 -4
0 art\departmentstore.png 85 7 09 84 64 -31 -53
0 art\departmentstore.png 165 7 09 76 64 -31 -45
0 art\departmentstore.png 245 7 09 79 64 -31 -48
0 art\departmentstore.png 319 7 09 31 64 -31 0
0 art\departmentstore.png 394 7 09 79 64 -31 -48
// Action 0
0 * 0 00 07
  0A
  01
  1B
  08 20
  09 12
  0A 0A 27
  10 60 EA
  11 FF
  13 10 38
  14 01
  18 04
  19 02
  1D 04
// Action 4 to set name:  
    0 * 0 04 07 // Action 4, Feature 7
                 9F // Language ID
                 01 // Number of strings to change
                 1B C9 // Offset
                 "Department Store North" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1B // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval		
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1B 00 1C 00
// Department Store (E)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\departmentstore.png 5 109 09 35 64 -31 -4
0 art\departmentstore.png 85 109 09 80 64 -31 -49
0 art\departmentstore.png 165 109 09 78 64 -31 -47
0 art\departmentstore.png 245 109 09 78 64 -31 -47
0 art\departmentstore.png 319 109 09 31 64 -31 0
0 art\departmentstore.png 394 109 09 78 64 -31 -47
// Action 0
0 * 0 00 07
  05
  01
  1C
  08 21
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1C C9 // Offset
  "Department Store East" 00 // String
/// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1C // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval		
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1C 00 1C 00
// Department Store (W)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\departmentstore.png 5 206 09 35 64 -31 -4
0 art\departmentstore.png 85 206 09 70 64 -31 -39
0 art\departmentstore.png 165 206 09 74 64 -31 -43
0 art\departmentstore.png 245 206 09 74 64 -31 -43
0 art\departmentstore.png 319 206 09 31 64 -31 0
0 art\departmentstore.png 394 206 09 74 64 -31 -43
// Action 0
0 * 0 00 07
  05
  01
  1D
  08 22
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1D C9 // Offset
  "Department Store West" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1D // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval		
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1D 00 1C 00
// Department Store (S)
// Action 1
0 * 0 01 07 06 FF 01 00
0 art\departmentstore.png 5 308 09 31 64 -31 0
0 art\departmentstore.png 85 308 09 31 64 -31 0
0 art\departmentstore.png 163 308 09 31 64 -31 0
0 art\departmentstore.png 243 308 09 31 64 -31 0
0 art\departmentstore.png 316 308 09 31 64 -31 0
0 art\departmentstore.png 392 308 09 31 64 -31 0
// Action 0
0 * 0 00 07
  05
  01
  1E
  08 23
  10 60 EA
  11 FF
  19 02
  1D 04
// Action 4 to set name:  
0 * 0 04 07 // Action 4, Feature 7
  9F // Language ID
  01 // Number of strings to change
  1E C9 // Offset
  "Department Store South" 00 // String
// Action 2 Chain:
// Action 2 Chain:
 1870 * 17 02 07 00 00 54 0F 00 00 00 00 00 80 00 00 10 10 04
 1871 * 17 02 07 01 00 54 0F 00 00 01 00 00 80 00 00 10 10 04
 1872 * 17 02 07 02 00 54 0F 00 00 02 00 00 80 00 00 10 10 04
 1873 * 17 02 07 03 00 04 00 00 80 03 00 00 80 00 00 10 10 04
 1874 * 17 02 07 04 00 04 00 00 80 05 00 00 80 00 00 10 10 04
 1875 * 18 02 07 10 81 43 00 FF 02 03 00 00 03 04 00 04 04 03 00
 1876 * 22 02 07 11 81 40 00 03 03 00 00 00 00 01 00 01 01 02 00 02 02 10 00
// Check to see if one has already been built
0 * 0 02 07 // Act 2 feat 7
  14 // setid
  81 // town var
  61 // how many of a building id exist
  1E // the building id to check, ours!
  00 // shift
  FF // and mask
  02 // ranges to follow
  01 FF // setid to use (protec)
  00 // minval
  03 // maxval		
  00 FF // setid to use (unprotec)
  04 // minval
  FF // maxval
  00 FF // setid to use (unprotec) 
// varact2 to restrict building until a certain population (3k)
0 * 0 02 07
  15 // setid
  86 // var of city
  82 // var town pop
  00 FF FF // varadj
  02 // numranges
  00 FF // setid
  00 00 // minval
  BB 07 // maxval
  01 FF // setid
  BB 08 // minval
  FF FF // maxval
  01 FF // default setid  
// Current Callback  
0 * 0 02 07 // act 2 feat 7
  1C // setid
  85 // type, variable of building
  0C // variable 0c current callback
  00 // shift
  FF FF // and mask
  02 // ranges to follow
  15 00 // setid
  17 00 // callback 17 on build
  17 00 // callback 17 on build
  14 00 // setid check how many are left
  43 01 // callback 143 on destruct
  43 01 // callback 143 on destruct
  11 00 // default setid which is the random chance to pick the style, which points at the construction stages, etc.
// Action 3
0 * 0 03 07 01 1E 00 1C 00
// Fin
